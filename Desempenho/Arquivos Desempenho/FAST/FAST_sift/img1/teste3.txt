Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.934 MiB   48.934 MiB   @profile
     8                             def FAST_sift(img):
     9   49.848 MiB    0.914 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.910 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.973 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.031 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.352 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   55.324 MiB    4.973 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.324 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.371 MiB    0.047 MiB   	kp2 = fast.detect(img2,None)
    21   56.375 MiB    1.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.715 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 20.323 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17387.0  17387.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        232.0    232.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        275.0    275.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        209.0    209.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      10866.0  10866.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3053692.0 3053692.0     15.0  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75265.0  75265.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48158.0  48158.0      0.2  	kp2 = fast.detect(img2,None)
    21         1    9994255.0 9994255.0     49.2  	kp2, des2 = sift.compute(img2, kp2)
    22         1    7122649.0 7122649.0     35.0  	matches = bf.match(des1,des2)

