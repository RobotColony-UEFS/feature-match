Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.824 MiB   48.824 MiB   @profile
     8                             def FAST_sift(img):
     9   49.762 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.883 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.004 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.062 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.367 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   55.262 MiB    4.895 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.262 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.293 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   56.121 MiB    0.828 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.535 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 17.5614 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17341.0  17341.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        351.0    351.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        205.0    205.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        330.0    330.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      12005.0  12005.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3061316.0 3061316.0     17.4  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73237.0  73237.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46245.0  46245.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8468306.0 8468306.0     48.2  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5882107.0 5882107.0     33.5  	matches = bf.match(des1,des2)

