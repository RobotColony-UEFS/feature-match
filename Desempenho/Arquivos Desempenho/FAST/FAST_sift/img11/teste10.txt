Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.836 MiB   48.836 MiB   @profile
     8                             def FAST_sift(img):
     9   49.773 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.895 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.016 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.074 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.379 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   55.273 MiB    4.895 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.273 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.281 MiB    0.008 MiB   	kp2 = fast.detect(img2,None)
    21   55.316 MiB    0.035 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.730 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 12.6547 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17278.0  17278.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        243.0    243.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        392.0    392.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        220.0    220.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11917.0  11917.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3078388.0 3078388.0     24.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      70162.0  70162.0      0.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      41719.0  41719.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    5950340.0 5950340.0     47.0  	kp2, des2 = sift.compute(img2, kp2)
    22         1    3484034.0 3484034.0     27.5  	matches = bf.match(des1,des2)

