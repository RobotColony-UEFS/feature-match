Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.082 MiB   49.082 MiB   @profile
     8                             def FAST_sift(img):
     9   50.078 MiB    0.996 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.199 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.258 MiB    0.059 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.316 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.570 MiB    0.254 MiB   	kp1 = fast.detect(img1,None)
    16   55.629 MiB    5.059 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.629 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.637 MiB    0.008 MiB   	kp2 = fast.detect(img2,None)
    21   55.672 MiB    0.035 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.008 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 12.5835 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17618.0  17618.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        261.0    261.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        286.0    286.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        314.0    314.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      10930.0  10930.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3093832.0 3093832.0     24.6  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      71928.0  71928.0      0.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      39907.0  39907.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    5870770.0 5870770.0     46.7  	kp2, des2 = sift.compute(img2, kp2)
    22         1    3477698.0 3477698.0     27.6  	matches = bf.match(des1,des2)

