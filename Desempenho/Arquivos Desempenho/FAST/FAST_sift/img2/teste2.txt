Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.586 MiB   48.586 MiB   @profile
     8                             def FAST_sift(img):
     9   49.422 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.484 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.605 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.727 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.062 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   54.824 MiB    4.762 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.824 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.863 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   55.750 MiB    0.887 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.102 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 18.4446 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18814.0  18814.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        358.0    358.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        301.0    301.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        215.0    215.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11024.0  11024.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3068403.0 3068403.0     16.6  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74346.0  74346.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46218.0  46218.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8912059.0 8912059.0     48.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6312845.0 6312845.0     34.2  	matches = bf.match(des1,des2)

