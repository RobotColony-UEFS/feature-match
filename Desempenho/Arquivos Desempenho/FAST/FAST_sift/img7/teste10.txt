Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.863 MiB   48.863 MiB   @profile
     8                             def FAST_sift(img):
     9   49.777 MiB    0.914 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.840 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.902 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.961 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.281 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   55.254 MiB    4.973 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.254 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.289 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   56.145 MiB    0.855 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.484 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 17.9574 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17398.0  17398.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        258.0    258.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        296.0    296.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        317.0    317.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      10933.0  10933.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3065817.0 3065817.0     17.1  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75358.0  75358.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      47270.0  47270.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8655936.0 8655936.0     48.2  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6083840.0 6083840.0     33.9  	matches = bf.match(des1,des2)

