Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.602 MiB   48.602 MiB   @profile
     8                             def FAST_sift(img):
     9   49.445 MiB    0.844 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.508 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.629 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.750 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.086 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   54.848 MiB    4.762 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.848 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.887 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   55.805 MiB    0.918 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.156 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 18.879 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18227.0  18227.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        259.0    259.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        414.0    414.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        324.0    324.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11028.0  11028.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3065267.0 3065267.0     16.2  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      77221.0  77221.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46238.0  46238.0      0.2  	kp2 = fast.detect(img2,None)
    21         1    9113130.0 9113130.0     48.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6546902.0 6546902.0     34.7  	matches = bf.match(des1,des2)

