Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.602 MiB   48.602 MiB   @profile
     8                             def FAST_sift(img):
     9   49.301 MiB    0.699 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.363 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.484 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.605 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   49.879 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   54.766 MiB    4.887 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.766 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.805 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   55.723 MiB    0.918 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.055 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 18.9971 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17381.0  17381.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        251.0    251.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        277.0    277.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      12054.0  12054.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3052222.0 3052222.0     16.1  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75442.0  75442.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46055.0  46055.0      0.2  	kp2 = fast.detect(img2,None)
    21         1    9264703.0 9264703.0     48.8  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6528504.0 6528504.0     34.4  	matches = bf.match(des1,des2)

