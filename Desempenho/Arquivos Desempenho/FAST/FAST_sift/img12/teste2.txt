Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.461 MiB   48.461 MiB   @profile
     8                             def FAST_sift(img):
     9   49.223 MiB    0.762 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.285 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.406 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.527 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   49.797 MiB    0.270 MiB   	kp1 = fast.detect(img1,None)
    16   54.566 MiB    4.770 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.566 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.594 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   55.348 MiB    0.754 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.750 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 16.5313 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18476.0  18476.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        255.0    255.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        195.0    195.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        457.0    457.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11379.0  11379.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3056283.0 3056283.0     18.5  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73994.0  73994.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42701.0  42701.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    7982837.0 7982837.0     48.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5344708.0 5344708.0     32.3  	matches = bf.match(des1,des2)

