Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.852 MiB   48.852 MiB   @profile
     8                             def FAST_sift(img):
     9   49.703 MiB    0.852 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.766 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.828 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.887 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.215 MiB    0.328 MiB   	kp1 = fast.detect(img1,None)
    16   55.129 MiB    4.914 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.129 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.168 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   56.059 MiB    0.891 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.344 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 18.8067 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18065.0  18065.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        353.0    353.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        203.0    203.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        215.0    215.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11208.0  11208.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3076424.0 3076424.0     16.4  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      76500.0  76500.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43520.0  43520.0      0.2  	kp2 = fast.detect(img2,None)
    21         1    9219571.0 9219571.0     49.0  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6360635.0 6360635.0     33.8  	matches = bf.match(des1,des2)

