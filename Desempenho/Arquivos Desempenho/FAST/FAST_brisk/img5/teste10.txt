Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.973 MiB   48.973 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.977 MiB    1.004 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.039 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.344 MiB   45.305 MiB   	brisk = cv2.BRISK_create()
    13   95.406 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.637 MiB    0.230 MiB   	kp1 = fast.detect(img1,None)
    16   96.117 MiB    0.480 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.699 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.727 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.781 MiB    0.055 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.180 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.95882 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17196.0  17196.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        350.0    350.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6296963.0 6296963.0     79.1  	brisk = cv2.BRISK_create()
    13         1        253.0    253.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10958.0  10958.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     141999.0 141999.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      77586.0  77586.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      43593.0  43593.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     345227.0 345227.0      4.3  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1024695.0 1024695.0     12.9  	matches = bf.match(des1,des2)

