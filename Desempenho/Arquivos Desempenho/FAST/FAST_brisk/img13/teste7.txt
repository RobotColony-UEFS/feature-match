Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.227 MiB   49.227 MiB   @profile
     8                             def FAST_brisk(img):
     9   50.164 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.227 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.473 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.531 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.832 MiB    0.301 MiB   	kp1 = fast.detect(img1,None)
    16   96.375 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.957 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.988 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   97.051 MiB    0.062 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.406 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.23451 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      18103.0  18103.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        254.0    254.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6310757.0 6310757.0     76.6  	brisk = cv2.BRISK_create()
    13         1        436.0    436.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10920.0  10920.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     143472.0 143472.0      1.7  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      75493.0  75493.0      0.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      47652.0  47652.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     366396.0 366396.0      4.4  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1261028.0 1261028.0     15.3  	matches = bf.match(des1,des2)

