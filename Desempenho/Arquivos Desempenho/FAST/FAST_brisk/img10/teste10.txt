Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.637 MiB   48.637 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.469 MiB    0.832 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.531 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   94.758 MiB   45.227 MiB   	brisk = cv2.BRISK_create()
    13   94.816 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.152 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   95.699 MiB    0.547 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.281 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.309 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.359 MiB    0.051 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.699 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.95913 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17533.0  17533.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        247.0    247.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6313992.0 6313992.0     79.3  	brisk = cv2.BRISK_create()
    13         1        356.0    356.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10830.0  10830.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     143087.0 143087.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      78768.0  78768.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      41761.0  41761.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     330298.0 330298.0      4.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1022255.0 1022255.0     12.8  	matches = bf.match(des1,des2)

