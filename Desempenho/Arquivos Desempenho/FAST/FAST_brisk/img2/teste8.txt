Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.789 MiB   48.789 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.773 MiB    0.984 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.836 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.137 MiB   45.301 MiB   	brisk = cv2.BRISK_create()
    13   95.199 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.430 MiB    0.230 MiB   	kp1 = fast.detect(img1,None)
    16   95.910 MiB    0.480 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.492 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.531 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   96.594 MiB    0.062 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.996 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.23602 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      16891.0  16891.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        346.0    346.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6306594.0 6306594.0     76.6  	brisk = cv2.BRISK_create()
    13         1        249.0    249.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11098.0  11098.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     140666.0 140666.0      1.7  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      79417.0  79417.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      45554.0  45554.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     400689.0 400689.0      4.9  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1234513.0 1234513.0     15.0  	matches = bf.match(des1,des2)

