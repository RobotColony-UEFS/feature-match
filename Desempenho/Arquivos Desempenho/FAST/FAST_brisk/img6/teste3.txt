Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.996 MiB   48.996 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.922 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.039 MiB    0.117 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.285 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.344 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.645 MiB    0.301 MiB   	kp1 = fast.detect(img1,None)
    16   96.188 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.770 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.805 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   96.863 MiB    0.059 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.219 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.12442 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17510.0  17510.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        409.0    409.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6308699.0 6308699.0     77.7  	brisk = cv2.BRISK_create()
    13         1        253.0    253.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12327.0  12327.0      0.2  	kp1 = fast.detect(img1,None)
    16         1     142992.0 142992.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      78607.0  78607.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      45523.0  45523.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     375634.0 375634.0      4.6  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1142467.0 1142467.0     14.1  	matches = bf.match(des1,des2)

