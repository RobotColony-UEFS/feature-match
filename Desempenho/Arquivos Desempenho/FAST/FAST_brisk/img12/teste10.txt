Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.652 MiB   48.652 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.492 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.555 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   94.734 MiB   45.180 MiB   	brisk = cv2.BRISK_create()
    13   94.793 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.129 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   95.777 MiB    0.648 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.359 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.387 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.441 MiB    0.055 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.781 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.99731 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      16906.0  16906.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        341.0    341.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6327427.0 6327427.0     79.1  	brisk = cv2.BRISK_create()
    13         1        254.0    254.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12766.0  12766.0      0.2  	kp1 = fast.detect(img1,None)
    16         1     142301.0 142301.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      77978.0  77978.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      43063.0  43063.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     330451.0 330451.0      4.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1045823.0 1045823.0     13.1  	matches = bf.match(des1,des2)

