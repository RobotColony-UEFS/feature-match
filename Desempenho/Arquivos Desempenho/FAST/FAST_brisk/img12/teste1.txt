Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.895 MiB   48.895 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.828 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.941 MiB    0.113 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.188 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.246 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.551 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   96.094 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.676 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.703 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.758 MiB    0.055 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.172 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.00268 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      16839.0  16839.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        470.0    470.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6343514.0 6343514.0     79.3  	brisk = cv2.BRISK_create()
    13         1        252.0    252.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11097.0  11097.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     144607.0 144607.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      75422.0  75422.0      0.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      45539.0  45539.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     334049.0 334049.0      4.2  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1030892.0 1030892.0     12.9  	matches = bf.match(des1,des2)

