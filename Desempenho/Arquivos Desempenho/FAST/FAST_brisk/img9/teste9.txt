Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.773 MiB   48.773 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.617 MiB    0.844 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.680 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   94.922 MiB   45.242 MiB   	brisk = cv2.BRISK_create()
    13   94.980 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.309 MiB    0.328 MiB   	kp1 = fast.detect(img1,None)
    16   95.953 MiB    0.645 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.535 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.574 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   96.641 MiB    0.066 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.980 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.31705 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17171.0  17171.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        341.0    341.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6304570.0 6304570.0     75.8  	brisk = cv2.BRISK_create()
    13         1        254.0    254.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11202.0  11202.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     141560.0 141560.0      1.7  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      81482.0  81482.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      44468.0  44468.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     413135.0 413135.0      5.0  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1302870.0 1302870.0     15.7  	matches = bf.match(des1,des2)

