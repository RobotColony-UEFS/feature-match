Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.883 MiB   48.883 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.816 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.930 MiB    0.113 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.176 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.234 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.539 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   96.082 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.664 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.672 MiB    0.008 MiB   	kp2 = fast.detect(img2,None)
    21   96.707 MiB    0.035 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.121 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.51304 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17165.0  17165.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1       1547.0   1547.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6308615.0 6308615.0     84.0  	brisk = cv2.BRISK_create()
    13         1        251.0    251.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11390.0  11390.0      0.2  	kp1 = fast.detect(img1,None)
    16         1     143379.0 143379.0      1.9  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      76139.0  76139.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      40205.0  40205.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     232020.0 232020.0      3.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     682325.0 682325.0      9.1  	matches = bf.match(des1,des2)

