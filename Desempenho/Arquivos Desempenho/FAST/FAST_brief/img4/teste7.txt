Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.602 MiB   48.602 MiB   @profile
     8                             def FAST_brief(img):
     9   49.434 MiB    0.832 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.496 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.652 MiB    0.156 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.711 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.051 MiB    0.340 MiB   	kp1 = fast.detect(img1,None)
    16   50.695 MiB    0.645 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.277 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.332 MiB    0.055 MiB   	kp2 = fast.detect(img2,None)
    21   51.414 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.812 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.8588 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17214.0  17214.0      0.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        259.0    259.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        271.0    271.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        318.0    318.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12957.0  12957.0      0.7  	kp1 = fast.detect(img1,None)
    16         1      68371.0  68371.0      3.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80027.0  80027.0      4.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      52666.0  52666.0      2.8  	kp2 = fast.detect(img2,None)
    21         1     337399.0 337399.0     18.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1289322.0 1289322.0     69.4  	matches = bf.match(des1,des2)

