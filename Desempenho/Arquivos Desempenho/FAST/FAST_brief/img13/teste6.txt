Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.195 MiB   49.195 MiB   @profile
     8                             def FAST_brief(img):
     9   50.133 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.191 MiB    0.059 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.297 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.355 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.660 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.383 MiB    0.723 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.965 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.008 MiB    0.043 MiB   	kp2 = fast.detect(img2,None)
    21   52.078 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.492 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.33355 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17417.0  17417.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        345.0    345.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        275.0    275.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13133.0  13133.0      1.0  	kp1 = fast.detect(img1,None)
    16         1      67819.0  67819.0      5.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77269.0  77269.0      5.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      51539.0  51539.0      3.9  	kp2 = fast.detect(img2,None)
    21         1     294954.0 294954.0     22.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     810581.0 810581.0     60.8  	matches = bf.match(des1,des2)

