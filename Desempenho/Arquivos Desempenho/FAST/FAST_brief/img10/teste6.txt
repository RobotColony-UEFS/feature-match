Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.551 MiB   48.551 MiB   @profile
     8                             def FAST_brief(img):
     9   49.309 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.371 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.480 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.602 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.875 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.469 MiB    0.594 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.051 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.090 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.152 MiB    0.062 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.617 MiB    0.465 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22472 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17055.0  17055.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        242.0    242.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        381.0    381.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        215.0    215.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13733.0  13733.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      67621.0  67621.0      5.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79298.0  79298.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48030.0  48030.0      3.9  	kp2 = fast.detect(img2,None)
    21         1     269889.0 269889.0     22.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     728254.0 728254.0     59.5  	matches = bf.match(des1,des2)

