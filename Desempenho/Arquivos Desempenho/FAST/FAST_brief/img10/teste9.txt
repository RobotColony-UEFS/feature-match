Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.879 MiB   48.879 MiB   @profile
     8                             def FAST_brief(img):
     9   49.812 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.926 MiB    0.113 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.039 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.098 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.402 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.121 MiB    0.719 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.703 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.742 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.805 MiB    0.062 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.273 MiB    0.469 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.29085 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      16951.0  16951.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        333.0    333.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        180.0    180.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        206.0    206.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13609.0  13609.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      68416.0  68416.0      5.3  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79493.0  79493.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45654.0  45654.0      3.5  	kp2 = fast.detect(img2,None)
    21         1     270326.0 270326.0     20.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     795685.0 795685.0     61.6  	matches = bf.match(des1,des2)

