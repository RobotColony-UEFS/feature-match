Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.109 MiB   49.109 MiB   @profile
     8                             def FAST_brief(img):
     9   50.102 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.211 MiB    0.109 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.266 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.324 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.582 MiB    0.258 MiB   	kp1 = fast.detect(img1,None)
    16   51.328 MiB    0.746 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.910 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.949 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   52.012 MiB    0.062 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.402 MiB    0.391 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.18069 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      18292.0  18292.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        250.0    250.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        288.0    288.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12863.0  12863.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      68843.0  68843.0      5.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79842.0  79842.0      6.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46429.0  46429.0      3.9  	kp2 = fast.detect(img2,None)
    21         1     268655.0 268655.0     22.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     685014.0 685014.0     58.0  	matches = bf.match(des1,des2)

