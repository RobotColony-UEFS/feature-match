Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.961 MiB   48.961 MiB   @profile
     8                             def FAST_brief(img):
     9   49.965 MiB    1.004 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.027 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.133 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.195 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.430 MiB    0.234 MiB   	kp1 = fast.detect(img1,None)
    16   51.090 MiB    0.660 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.672 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.719 MiB    0.047 MiB   	kp2 = fast.detect(img2,None)
    21   51.793 MiB    0.074 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.250 MiB    0.457 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.28565 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17682.0  17682.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        248.0    248.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        271.0    271.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        211.0    211.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12069.0  12069.0      0.9  	kp1 = fast.detect(img1,None)
    16         1      69585.0  69585.0      5.4  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80947.0  80947.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48660.0  48660.0      3.8  	kp2 = fast.detect(img2,None)
    21         1     303874.0 303874.0     23.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     752105.0 752105.0     58.5  	matches = bf.match(des1,des2)

