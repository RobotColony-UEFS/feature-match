Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.922 MiB   48.922 MiB   @profile
     8                             def FAST_brief(img):
     9   49.832 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.895 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.953 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.012 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.336 MiB    0.324 MiB   	kp1 = fast.detect(img1,None)
    16   51.090 MiB    0.754 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.672 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.723 MiB    0.051 MiB   	kp2 = fast.detect(img2,None)
    21   51.801 MiB    0.078 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.254 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.3848 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      19544.0  19544.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        240.0    240.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        266.0    266.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11909.0  11909.0      0.9  	kp1 = fast.detect(img1,None)
    16         1      68803.0  68803.0      5.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      84036.0  84036.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      49763.0  49763.0      3.6  	kp2 = fast.detect(img2,None)
    21         1     327010.0 327010.0     23.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     823021.0 823021.0     59.4  	matches = bf.match(des1,des2)

