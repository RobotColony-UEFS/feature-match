Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.102 MiB   49.102 MiB   @profile
     8                             def FAST_brief(img):
     9   50.039 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.098 MiB    0.059 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.203 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.262 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.566 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.289 MiB    0.723 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.871 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.887 MiB    0.016 MiB   	kp2 = fast.detect(img2,None)
    21   51.930 MiB    0.043 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.344 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.916341 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17128.0  17128.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        248.0    248.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        271.0    271.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13157.0  13157.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      68455.0  68455.0      7.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      75504.0  75504.0      8.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44560.0  44560.0      4.9  	kp2 = fast.detect(img2,None)
    21         1     200359.0 200359.0     21.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     496446.0 496446.0     54.2  	matches = bf.match(des1,des2)

