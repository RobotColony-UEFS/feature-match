Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.715 MiB   48.715 MiB   @profile
     8                             def FAST_brief(img):
     9   49.660 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.723 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.828 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.891 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.125 MiB    0.234 MiB   	kp1 = fast.detect(img1,None)
    16   50.785 MiB    0.660 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.367 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.383 MiB    0.016 MiB   	kp2 = fast.detect(img2,None)
    21   51.426 MiB    0.043 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.879 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.9092 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17126.0  17126.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        261.0    261.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        276.0    276.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        319.0    319.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11715.0  11715.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      70003.0  70003.0      7.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      75742.0  75742.0      8.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43487.0  43487.0      4.8  	kp2 = fast.detect(img2,None)
    21         1     196737.0 196737.0     21.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     493534.0 493534.0     54.3  	matches = bf.match(des1,des2)

