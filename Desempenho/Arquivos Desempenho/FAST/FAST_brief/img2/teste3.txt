Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.824 MiB   48.824 MiB   @profile
     8                             def FAST_brief(img):
     9   49.758 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.871 MiB    0.113 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.984 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.043 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.348 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.066 MiB    0.719 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.648 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.699 MiB    0.051 MiB   	kp2 = fast.detect(img2,None)
    21   51.781 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.250 MiB    0.469 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.35828 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17317.0  17317.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        248.0    248.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        270.0    270.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        216.0    216.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11952.0  11952.0      0.9  	kp1 = fast.detect(img1,None)
    16         1      69381.0  69381.0      5.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80290.0  80290.0      5.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      49961.0  49961.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     329408.0 329408.0     24.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     799240.0 799240.0     58.8  	matches = bf.match(des1,des2)

