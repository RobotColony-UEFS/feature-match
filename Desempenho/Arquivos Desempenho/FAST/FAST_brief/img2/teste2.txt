Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.980 MiB   48.980 MiB   @profile
     8                             def FAST_brief(img):
     9   49.953 MiB    0.973 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.062 MiB    0.109 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.121 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.180 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.441 MiB    0.262 MiB   	kp1 = fast.detect(img1,None)
    16   51.191 MiB    0.750 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.773 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.824 MiB    0.051 MiB   	kp2 = fast.detect(img2,None)
    21   51.906 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.297 MiB    0.391 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.38783 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17944.0  17944.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        259.0    259.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        276.0    276.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        310.0    310.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11737.0  11737.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      68648.0  68648.0      4.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79883.0  79883.0      5.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      50794.0  50794.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     328246.0 328246.0     23.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     829737.0 829737.0     59.8  	matches = bf.match(des1,des2)

