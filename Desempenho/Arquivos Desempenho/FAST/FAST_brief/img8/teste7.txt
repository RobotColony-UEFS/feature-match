Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.500 MiB   48.500 MiB   @profile
     8                             def FAST_brief(img):
     9   49.258 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.320 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.430 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.551 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.824 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.418 MiB    0.594 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.000 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.059 MiB    0.059 MiB   	kp2 = fast.detect(img2,None)
    21   51.148 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.613 MiB    0.465 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.44643 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17854.0  17854.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        263.0    263.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        191.0    191.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12026.0  12026.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      68530.0  68530.0      4.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80917.0  80917.0      5.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      53806.0  53806.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     355631.0 355631.0     24.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     856995.0 856995.0     59.2  	matches = bf.match(des1,des2)

