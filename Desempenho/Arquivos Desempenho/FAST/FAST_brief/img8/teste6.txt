Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.586 MiB   48.586 MiB   @profile
     8                             def FAST_brief(img):
     9   49.422 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.484 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.586 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.707 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.047 MiB    0.340 MiB   	kp1 = fast.detect(img1,None)
    16   50.758 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.340 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.398 MiB    0.059 MiB   	kp2 = fast.detect(img2,None)
    21   51.488 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.898 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.46532 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      19080.0  19080.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        342.0    342.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        273.0    273.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12015.0  12015.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      70926.0  70926.0      4.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80731.0  80731.0      5.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      54687.0  54687.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     370496.0 370496.0     25.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     856554.0 856554.0     58.5  	matches = bf.match(des1,des2)

