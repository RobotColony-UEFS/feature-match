Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.984 MiB   48.984 MiB   @profile
     8                             def FAST_brief(img):
     9   49.918 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.027 MiB    0.109 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.145 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.203 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.508 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.289 MiB    0.781 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.871 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.926 MiB    0.055 MiB   	kp2 = fast.detect(img2,None)
    21   52.008 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.395 MiB    0.387 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.98298 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17048.0  17048.0      0.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        261.0    261.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        392.0    392.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        325.0    325.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11740.0  11740.0      0.6  	kp1 = fast.detect(img1,None)
    16         1      70292.0  70292.0      3.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82196.0  82196.0      4.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      49538.0  49538.0      2.5  	kp2 = fast.detect(img2,None)
    21         1     340658.0 340658.0     17.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1410532.0 1410532.0     71.1  	matches = bf.match(des1,des2)

