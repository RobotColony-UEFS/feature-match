Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.543 MiB   48.543 MiB   @profile
     8                             def FAST_orb(img):
     9   49.238 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.301 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.363 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.484 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.758 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.316 MiB    0.559 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.898 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.938 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.000 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.453 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.926531 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      19537.0  19537.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        360.0    360.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        182.0    182.0      0.0  	orb = cv2.ORB_create()
    13         1        212.0    212.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11049.0  11049.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      32782.0  32782.0      3.5  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      80824.0  80824.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43415.0  43415.0      4.7  	kp2 = fast.detect(img2,None)
    21         1     180710.0 180710.0     19.5  	kp2, des2 = orb.compute(img2, kp2)
    22         1     557460.0 557460.0     60.2  	matches = bf.match(des1,des2)

