Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.656 MiB   48.656 MiB   @profile
     8                             def FAST_orb(img):
     9   49.488 MiB    0.832 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.551 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.613 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.672 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.008 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   50.547 MiB    0.539 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.129 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.168 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.230 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.633 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.933515 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18095.0  18095.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        358.0    358.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        178.0    178.0      0.0  	orb = cv2.ORB_create()
    13         1        212.0    212.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10995.0  10995.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      32724.0  32724.0      3.5  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      82603.0  82603.0      8.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45139.0  45139.0      4.8  	kp2 = fast.detect(img2,None)
    21         1     178038.0 178038.0     19.1  	kp2, des2 = orb.compute(img2, kp2)
    22         1     565173.0 565173.0     60.5  	matches = bf.match(des1,des2)

