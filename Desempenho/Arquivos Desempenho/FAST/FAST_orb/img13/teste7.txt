Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.590 MiB   48.590 MiB   @profile
     8                             def FAST_orb(img):
     9   49.418 MiB    0.828 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.480 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.543 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.664 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.000 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   50.551 MiB    0.551 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.133 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.164 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   51.223 MiB    0.059 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.637 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.829497 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18654.0  18654.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        310.0    310.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        273.0    273.0      0.0  	orb = cv2.ORB_create()
    13         1        215.0    215.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11049.0  11049.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      33667.0  33667.0      4.1  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79367.0  79367.0      9.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44386.0  44386.0      5.4  	kp2 = fast.detect(img2,None)
    21         1     172082.0 172082.0     20.7  	kp2, des2 = orb.compute(img2, kp2)
    22         1     469494.0 469494.0     56.6  	matches = bf.match(des1,des2)

