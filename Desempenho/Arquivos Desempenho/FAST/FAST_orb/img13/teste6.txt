Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.617 MiB   48.617 MiB   @profile
     8                             def FAST_orb(img):
     9   49.457 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.520 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.641 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   49.699 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.035 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   50.629 MiB    0.594 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.211 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.242 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   51.301 MiB    0.059 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.699 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.07527 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17002.0  17002.0      1.6  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        260.0    260.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        181.0    181.0      0.0  	orb = cv2.ORB_create()
    13         1        315.0    315.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10828.0  10828.0      1.0  	kp1 = fast.detect(img1,None)
    16         1      35441.0  35441.0      3.3  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79249.0  79249.0      7.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45096.0  45096.0      4.2  	kp2 = fast.detect(img2,None)
    21         1     188668.0 188668.0     17.5  	kp2, des2 = orb.compute(img2, kp2)
    22         1     698228.0 698228.0     64.9  	matches = bf.match(des1,des2)

