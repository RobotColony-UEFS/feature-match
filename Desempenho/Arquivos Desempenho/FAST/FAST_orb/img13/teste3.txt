Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.934 MiB   48.934 MiB   @profile
     8                             def FAST_orb(img):
     9   49.844 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.906 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.027 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   50.086 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.406 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   50.984 MiB    0.578 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.566 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.598 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   51.656 MiB    0.059 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.051 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.832999 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18814.0  18814.0      2.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        249.0    249.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        180.0    180.0      0.0  	orb = cv2.ORB_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10957.0  10957.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      32734.0  32734.0      3.9  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79427.0  79427.0      9.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46186.0  46186.0      5.5  	kp2 = fast.detect(img2,None)
    21         1     170721.0 170721.0     20.5  	kp2, des2 = orb.compute(img2, kp2)
    22         1     473518.0 473518.0     56.8  	matches = bf.match(des1,des2)

