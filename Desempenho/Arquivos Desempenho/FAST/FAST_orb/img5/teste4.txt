Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.652 MiB   48.652 MiB   @profile
     8                             def FAST_orb(img):
     9   49.492 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.555 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.676 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   49.734 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.070 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   50.664 MiB    0.594 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.246 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.273 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.324 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.723 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.789129 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      16952.0  16952.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        362.0    362.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        182.0    182.0      0.0  	orb = cv2.ORB_create()
    13         1        215.0    215.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11099.0  11099.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      33402.0  33402.0      4.2  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      78483.0  78483.0      9.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45065.0  45065.0      5.7  	kp2 = fast.detect(img2,None)
    21         1     180451.0 180451.0     22.9  	kp2, des2 = orb.compute(img2, kp2)
    22         1     422918.0 422918.0     53.6  	matches = bf.match(des1,des2)

