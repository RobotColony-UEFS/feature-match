Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.027 MiB   49.027 MiB   @profile
     8                             def FAST_orb(img):
     9   49.961 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.082 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.145 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.203 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.512 MiB    0.309 MiB   	kp1 = fast.detect(img1,None)
    16   51.188 MiB    0.676 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.770 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.797 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.848 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.176 MiB    0.328 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.773843 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17360.0  17360.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        348.0    348.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        176.0    176.0      0.0  	orb = cv2.ORB_create()
    13         1        211.0    211.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12999.0  12999.0      1.7  	kp1 = fast.detect(img1,None)
    16         1      32701.0  32701.0      4.2  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      78331.0  78331.0     10.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44877.0  44877.0      5.8  	kp2 = fast.detect(img2,None)
    21         1     181519.0 181519.0     23.5  	kp2, des2 = orb.compute(img2, kp2)
    22         1     405321.0 405321.0     52.4  	matches = bf.match(des1,des2)

