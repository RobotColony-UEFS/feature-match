Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.633 MiB   48.633 MiB   @profile
     8                             def FAST_orb(img):
     9   49.328 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.391 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.453 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.574 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.848 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.406 MiB    0.559 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.988 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.016 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.066 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.520 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.761924 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17591.0  17591.0      2.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        241.0    241.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        177.0    177.0      0.0  	orb = cv2.ORB_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10885.0  10885.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      35258.0  35258.0      4.6  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      76081.0  76081.0     10.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46186.0  46186.0      6.1  	kp2 = fast.detect(img2,None)
    21         1     181243.0 181243.0     23.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     394048.0 394048.0     51.7  	matches = bf.match(des1,des2)

