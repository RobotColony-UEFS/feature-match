Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.023 MiB   49.023 MiB   @profile
     8                             def FAST_orb(img):
     9   49.957 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.078 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.141 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.199 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.508 MiB    0.309 MiB   	kp1 = fast.detect(img1,None)
    16   51.184 MiB    0.676 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.766 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.805 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.867 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.195 MiB    0.328 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.924204 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18330.0  18330.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1       1269.0   1269.0      0.1  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        195.0    195.0      0.0  	orb = cv2.ORB_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10854.0  10854.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      33765.0  33765.0      3.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      81454.0  81454.0      8.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45286.0  45286.0      4.9  	kp2 = fast.detect(img2,None)
    21         1     181037.0 181037.0     19.6  	kp2, des2 = orb.compute(img2, kp2)
    22         1     551801.0 551801.0     59.7  	matches = bf.match(des1,des2)

