Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.832 MiB   48.832 MiB   @profile
     8                             def FAST_orb(img):
     9   49.777 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.840 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.902 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.965 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.133 MiB    0.168 MiB   	kp1 = fast.detect(img1,None)
    16   50.867 MiB    0.734 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.449 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.488 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.551 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.895 MiB    0.344 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.903079 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18716.0  18716.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        258.0    258.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        266.0    266.0      0.0  	orb = cv2.ORB_create()
    13         1        210.0    210.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11357.0  11357.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      33455.0  33455.0      3.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      82101.0  82101.0      9.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44837.0  44837.0      5.0  	kp2 = fast.detect(img2,None)
    21         1     180794.0 180794.0     20.0  	kp2, des2 = orb.compute(img2, kp2)
    22         1     531085.0 531085.0     58.8  	matches = bf.match(des1,des2)

