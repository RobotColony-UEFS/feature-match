Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.961 MiB   48.961 MiB   @profile
     8                             def FAST_orb(img):
     9   49.871 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.934 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.055 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   50.113 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.434 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   51.012 MiB    0.578 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.594 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.602 MiB    0.008 MiB   	kp2 = fast.detect(img2,None)
    21   51.637 MiB    0.035 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.031 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.618752 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17801.0  17801.0      2.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        258.0    258.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        179.0    179.0      0.0  	orb = cv2.ORB_create()
    13         1        217.0    217.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11624.0  11624.0      1.9  	kp1 = fast.detect(img1,None)
    16         1      33846.0  33846.0      5.5  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      74913.0  74913.0     12.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      41664.0  41664.0      6.7  	kp2 = fast.detect(img2,None)
    21         1     147529.0 147529.0     23.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     290721.0 290721.0     47.0  	matches = bf.match(des1,des2)

