Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.586 MiB   48.586 MiB   @profile
     8                             def FAST_orb(img):
     9   49.281 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.344 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.406 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.527 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.801 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.359 MiB    0.559 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.941 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.980 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.043 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.496 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.897595 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      16803.0  16803.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        350.0    350.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        177.0    177.0      0.0  	orb = cv2.ORB_create()
    13         1       1211.0   1211.0      0.1  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11099.0  11099.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      33457.0  33457.0      3.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      81375.0  81375.0      9.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      47793.0  47793.0      5.3  	kp2 = fast.detect(img2,None)
    21         1     178085.0 178085.0     19.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     527245.0 527245.0     58.7  	matches = bf.match(des1,des2)

