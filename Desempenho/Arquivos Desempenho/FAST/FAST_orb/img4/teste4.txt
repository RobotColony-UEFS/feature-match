Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.973 MiB   48.973 MiB   @profile
     8                             def FAST_orb(img):
     9   49.945 MiB    0.973 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.066 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.129 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.188 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.445 MiB    0.258 MiB   	kp1 = fast.detect(img1,None)
    16   51.016 MiB    0.570 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.598 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.637 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.699 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.031 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.898391 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18765.0  18765.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        364.0    364.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        183.0    183.0      0.0  	orb = cv2.ORB_create()
    13         1        333.0    333.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10945.0  10945.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      32665.0  32665.0      3.6  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      80726.0  80726.0      9.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      47386.0  47386.0      5.3  	kp2 = fast.detect(img2,None)
    21         1     178441.0 178441.0     19.9  	kp2, des2 = orb.compute(img2, kp2)
    22         1     528583.0 528583.0     58.8  	matches = bf.match(des1,des2)

