Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.812 MiB   48.812 MiB   @profile
     8                             def FAST_orb(img):
     9   49.656 MiB    0.844 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.719 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.840 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   49.898 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.227 MiB    0.328 MiB   	kp1 = fast.detect(img1,None)
    16   50.879 MiB    0.652 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.461 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.488 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.535 MiB    0.047 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.934 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.795705 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      19244.0  19244.0      2.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        261.0    261.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        178.0    178.0      0.0  	orb = cv2.ORB_create()
    13         1        318.0    318.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10746.0  10746.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      33939.0  33939.0      4.3  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79549.0  79549.0     10.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43635.0  43635.0      5.5  	kp2 = fast.detect(img2,None)
    21         1     164514.0 164514.0     20.7  	kp2, des2 = orb.compute(img2, kp2)
    22         1     443321.0 443321.0     55.7  	matches = bf.match(des1,des2)

