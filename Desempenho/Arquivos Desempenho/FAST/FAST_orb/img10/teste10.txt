Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.598 MiB   48.598 MiB   @profile
     8                             def FAST_orb(img):
     9   49.293 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.355 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.418 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.539 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.812 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.371 MiB    0.559 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.953 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.980 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.031 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.445 MiB    0.414 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.772453 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17508.0  17508.0      2.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        240.0    240.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        180.0    180.0      0.0  	orb = cv2.ORB_create()
    13         1        220.0    220.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11598.0  11598.0      1.5  	kp1 = fast.detect(img1,None)
    16         1      35367.0  35367.0      4.6  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      78738.0  78738.0     10.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42336.0  42336.0      5.5  	kp2 = fast.detect(img2,None)
    21         1     183764.0 183764.0     23.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     402502.0 402502.0     52.1  	matches = bf.match(des1,des2)

