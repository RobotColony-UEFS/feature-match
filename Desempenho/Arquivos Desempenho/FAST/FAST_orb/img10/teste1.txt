Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.641 MiB   48.641 MiB   @profile
     8                             def FAST_orb(img):
     9   49.473 MiB    0.832 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.535 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.598 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.656 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.992 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   50.531 MiB    0.539 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.113 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.141 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.191 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.594 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.844026 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18901.0  18901.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        251.0    251.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        181.0    181.0      0.0  	orb = cv2.ORB_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11064.0  11064.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      32650.0  32650.0      3.9  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      83435.0  83435.0      9.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42563.0  42563.0      5.0  	kp2 = fast.detect(img2,None)
    21         1     163798.0 163798.0     19.4  	kp2, des2 = orb.compute(img2, kp2)
    22         1     490969.0 490969.0     58.2  	matches = bf.match(des1,des2)

