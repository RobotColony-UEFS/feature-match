Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.012 MiB   49.012 MiB   @profile
     8                             def FAST_orb(img):
     9   49.996 MiB    0.984 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.117 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.180 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.238 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.496 MiB    0.258 MiB   	kp1 = fast.detect(img1,None)
    16   51.066 MiB    0.570 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.648 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.688 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.746 MiB    0.059 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.078 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.952886 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      16888.0  16888.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        263.0    263.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        181.0    181.0      0.0  	orb = cv2.ORB_create()
    13         1        315.0    315.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10872.0  10872.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      34511.0  34511.0      3.6  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      81915.0  81915.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45794.0  45794.0      4.8  	kp2 = fast.detect(img2,None)
    21         1     177155.0 177155.0     18.6  	kp2, des2 = orb.compute(img2, kp2)
    22         1     584992.0 584992.0     61.4  	matches = bf.match(des1,des2)

