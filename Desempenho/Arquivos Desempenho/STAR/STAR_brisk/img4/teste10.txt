Filename: STAR_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.004 MiB   49.004 MiB   @profile
     8                             def STAR_brisk(img):
     9   50.004 MiB    1.000 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.121 MiB    0.117 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   95.426 MiB   45.305 MiB   	brisk = cv2.BRISK_create()
    13   95.488 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.832 MiB    0.344 MiB   	kp1 = star.detect(img1,None)
    16   96.230 MiB    0.398 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.812 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.820 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   96.828 MiB    0.008 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.230 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 9.93653 s
File: STAR_brisk.py
Function: STAR_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_brisk(img):
     9         1      17524.0  17524.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        314.0    314.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1    6326891.0 6326891.0     63.7  	brisk = cv2.BRISK_create()
    13         1        307.0    307.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     128215.0 128215.0      1.3  	kp1 = star.detect(img1,None)
    16         1      19008.0  19008.0      0.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      76971.0  76971.0      0.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3253771.0 3253771.0     32.7  	kp2 = star.detect(img2,None)
    21         1      98115.0  98115.0      1.0  	kp2, des2 = brisk.compute(img2, kp2)
    22         1      15416.0  15416.0      0.2  	matches = bf.match(des1,des2)

