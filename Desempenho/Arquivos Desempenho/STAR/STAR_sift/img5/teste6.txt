Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.875 MiB   48.875 MiB   @profile
     8                             def STAR_sift(img):
     9   49.828 MiB    0.953 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.949 MiB    0.121 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.949 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.012 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.363 MiB    0.352 MiB   	kp1 = star.detect(img1,None)
    16   54.992 MiB    4.629 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.992 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.000 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   55.012 MiB    0.012 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.367 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 12.6775 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17264.0  17264.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        348.0    348.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        183.0    183.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        229.0    229.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     130384.0 130384.0      1.0  	kp1 = star.detect(img1,None)
    16         1     926138.0 926138.0      7.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73654.0  73654.0      0.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3237567.0 3237567.0     25.5  	kp2 = star.detect(img2,None)
    21         1    8231202.0 8231202.0     64.9  	kp2, des2 = sift.compute(img2, kp2)
    22         1      60580.0  60580.0      0.5  	matches = bf.match(des1,des2)

