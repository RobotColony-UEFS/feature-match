Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.828 MiB   48.828 MiB   @profile
     8                             def STAR_sift(img):
     9   49.672 MiB    0.844 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.730 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.793 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.855 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.312 MiB    0.457 MiB   	kp1 = star.detect(img1,None)
    16   54.922 MiB    4.609 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.922 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   54.930 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   54.938 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.223 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 11.5218 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17214.0  17214.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        344.0    344.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         72.0     72.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        326.0    326.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     129410.0 129410.0      1.1  	kp1 = star.detect(img1,None)
    16         1     924765.0 924765.0      8.0  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      76029.0  76029.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3260172.0 3260172.0     28.3  	kp2 = star.detect(img2,None)
    21         1    7054244.0 7054244.0     61.2  	kp2, des2 = sift.compute(img2, kp2)
    22         1      59210.0  59210.0      0.5  	matches = bf.match(des1,des2)

