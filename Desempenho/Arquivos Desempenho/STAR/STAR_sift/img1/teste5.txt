Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.777 MiB   48.777 MiB   @profile
     8                             def STAR_sift(img):
     9   49.660 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.781 MiB    0.121 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.781 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.844 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.199 MiB    0.355 MiB   	kp1 = star.detect(img1,None)
    16   54.887 MiB    4.688 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.887 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   54.898 MiB    0.012 MiB   	kp2 = star.detect(img2,None)
    21   54.910 MiB    0.012 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.254 MiB    0.344 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 13.8088 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17559.0  17559.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        334.0    334.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        178.0    178.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        225.0    225.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     127902.0 127902.0      0.9  	kp1 = star.detect(img1,None)
    16         1     932758.0 932758.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      79145.0  79145.0      0.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3251912.0 3251912.0     23.5  	kp2 = star.detect(img2,None)
    21         1    9323869.0 9323869.0     67.5  	kp2, des2 = sift.compute(img2, kp2)
    22         1      74938.0  74938.0      0.5  	matches = bf.match(des1,des2)

