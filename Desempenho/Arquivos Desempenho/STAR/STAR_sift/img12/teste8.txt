Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.156 MiB   49.156 MiB   @profile
     8                             def STAR_sift(img):
     9   50.094 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.211 MiB    0.117 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   50.211 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.273 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.617 MiB    0.344 MiB   	kp1 = star.detect(img1,None)
    16   55.188 MiB    4.570 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.188 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.195 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   55.203 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.559 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 11.168 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17361.0  17361.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        237.0    237.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         76.0     76.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     127998.0 127998.0      1.1  	kp1 = star.detect(img1,None)
    16         1     928364.0 928364.0      8.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73971.0  73971.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3263796.0 3263796.0     29.2  	kp2 = star.detect(img2,None)
    21         1    6699628.0 6699628.0     60.0  	kp2, des2 = sift.compute(img2, kp2)
    22         1      56392.0  56392.0      0.5  	matches = bf.match(des1,des2)

