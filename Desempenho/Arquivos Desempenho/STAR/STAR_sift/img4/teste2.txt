Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.613 MiB   48.613 MiB   @profile
     8                             def STAR_sift(img):
     9   49.453 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.574 MiB    0.121 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.574 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.699 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.168 MiB    0.469 MiB   	kp1 = star.detect(img1,None)
    16   54.734 MiB    4.566 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.734 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   54.742 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   54.750 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.102 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 11.0478 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17041.0  17041.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        332.0    332.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        184.0    184.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        228.0    228.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     128560.0 128560.0      1.2  	kp1 = star.detect(img1,None)
    16         1     925668.0 925668.0      8.4  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75411.0  75411.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3251946.0 3251946.0     29.4  	kp2 = star.detect(img2,None)
    21         1    6590193.0 6590193.0     59.7  	kp2, des2 = sift.compute(img2, kp2)
    22         1      58225.0  58225.0      0.5  	matches = bf.match(des1,des2)

