Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.883 MiB   48.883 MiB   @profile
     8                             def STAR_sift(img):
     9   49.793 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.852 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.914 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.977 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.414 MiB    0.438 MiB   	kp1 = star.detect(img1,None)
    16   55.082 MiB    4.668 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.082 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.090 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   55.098 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.438 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 11.1539 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17292.0  17292.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        335.0    335.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        182.0    182.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        226.0    226.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     128405.0 128405.0      1.2  	kp1 = star.detect(img1,None)
    16         1     930757.0 930757.0      8.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75123.0  75123.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3242306.0 3242306.0     29.1  	kp2 = star.detect(img2,None)
    21         1    6700519.0 6700519.0     60.1  	kp2, des2 = sift.compute(img2, kp2)
    22         1      58757.0  58757.0      0.5  	matches = bf.match(des1,des2)

