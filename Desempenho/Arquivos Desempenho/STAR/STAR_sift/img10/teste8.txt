Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.016 MiB   49.016 MiB   @profile
     8                             def STAR_sift(img):
     9   49.945 MiB    0.930 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.066 MiB    0.121 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   50.066 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.129 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.492 MiB    0.363 MiB   	kp1 = star.detect(img1,None)
    16   55.191 MiB    4.699 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.191 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.195 MiB    0.004 MiB   	kp2 = star.detect(img2,None)
    21   55.199 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.531 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 9.09067 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17011.0  17011.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        469.0    469.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         78.0     78.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        329.0    329.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     127581.0 127581.0      1.4  	kp1 = star.detect(img1,None)
    16         1     925246.0 925246.0     10.2  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74978.0  74978.0      0.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3247161.0 3247161.0     35.7  	kp2 = star.detect(img2,None)
    21         1    4659983.0 4659983.0     51.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1      37838.0  37838.0      0.4  	matches = bf.match(des1,des2)

