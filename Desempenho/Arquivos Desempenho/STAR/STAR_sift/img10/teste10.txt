Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.859 MiB   48.859 MiB   @profile
     8                             def STAR_sift(img):
     9   49.711 MiB    0.852 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.770 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.832 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.895 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.352 MiB    0.457 MiB   	kp1 = star.detect(img1,None)
    16   54.953 MiB    4.602 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.953 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   54.957 MiB    0.004 MiB   	kp2 = star.detect(img2,None)
    21   54.961 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.246 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 9.2328 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      19357.0  19357.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        226.0    226.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         77.0     77.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        329.0    329.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     127319.0 127319.0      1.4  	kp1 = star.detect(img1,None)
    16         1     927657.0 927657.0     10.0  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74857.0  74857.0      0.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3271128.0 3271128.0     35.4  	kp2 = star.detect(img2,None)
    21         1    4774164.0 4774164.0     51.7  	kp2, des2 = sift.compute(img2, kp2)
    22         1      37687.0  37687.0      0.4  	matches = bf.match(des1,des2)

