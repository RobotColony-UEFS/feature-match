Filename: STAR_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.961 MiB   48.961 MiB   @profile
     8                             def STAR_brief(img):
     9   49.965 MiB    1.004 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.082 MiB    0.117 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   50.137 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.199 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.504 MiB    0.305 MiB   	kp1 = star.detect(img1,None)
    16   51.086 MiB    0.582 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             	
    18   51.668 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   51.672 MiB    0.004 MiB   	kp2 = star.detect(img2,None)
    21   51.676 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.133 MiB    0.457 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_brief.py.lprof
Timer unit: 1e-06 s

Total time: 3.55988 s
File: STAR_brief.py
Function: STAR_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_brief(img):
     9         1      18396.0  18396.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        244.0    244.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        164.0    164.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        254.0    254.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     128458.0 128458.0      3.6  	kp1 = star.detect(img1,None)
    16         1      13667.0  13667.0      0.4  	kp1, des1 = brief.compute(img1, kp1)
    17                                           	
    18         1      81560.0  81560.0      2.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3250292.0 3250292.0     91.3  	kp2 = star.detect(img2,None)
    21         1      59160.0  59160.0      1.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1       7685.0   7685.0      0.2  	matches = bf.match(des1,des2)

