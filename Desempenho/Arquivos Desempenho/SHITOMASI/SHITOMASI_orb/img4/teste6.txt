Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.523 MiB   48.523 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.293 MiB    0.770 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.504 MiB    1.211 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.504 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.602 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.723 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.785 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.164 MiB    0.379 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.746 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.836 MiB    0.090 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.836 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.836 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.840 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.074 MiB    0.234 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.27924 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      19241.0  19241.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116016.0 116016.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        224.0    224.0      0.0  	corners1 = np.int0(corners11)
    12         1       3849.0   3849.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        303.0    303.0      0.0  	orb = cv2.ORB_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17549.0  17549.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      78772.0  78772.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     902988.0 902988.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        230.0    230.0      0.0  	corners2 = np.int0(corners22)
    21         1       3977.0   3977.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     131834.0 131834.0     10.3  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4020.0   4020.0      0.3  	matches = bf.match(des1,des2)

