Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.820 MiB   48.820 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.816 MiB    0.996 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.055 MiB    1.238 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.055 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.180 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.242 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.305 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.465 MiB    0.160 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.047 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.090 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.090 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.090 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.094 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.441 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.2651 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17101.0  17101.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120566.0 120566.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4066.0   4066.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        207.0    207.0      0.0  	orb = cv2.ORB_create()
    15         1        332.0    332.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17693.0  17693.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      78871.0  78871.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     902291.0 902291.0     71.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        229.0    229.0      0.0  	corners2 = np.int0(corners22)
    21         1       3695.0   3695.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     114915.0 114915.0      9.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4918.0   4918.0      0.4  	matches = bf.match(des1,des2)

