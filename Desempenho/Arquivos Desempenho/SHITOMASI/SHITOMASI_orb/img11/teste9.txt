Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.949 MiB   48.949 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.863 MiB    0.914 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.168 MiB    1.305 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.168 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.234 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.355 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.418 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.652 MiB    0.234 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.234 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.277 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.277 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.277 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.281 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.555 MiB    0.273 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.27486 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      18964.0  18964.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116124.0 116124.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        224.0    224.0      0.0  	corners1 = np.int0(corners11)
    12         1       3919.0   3919.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        293.0    293.0      0.0  	orb = cv2.ORB_create()
    15         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      18977.0  18977.0      1.5  	kp1, des1 = orb.compute(img1, kp1)
    17         1      74692.0  74692.0      5.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     898235.0 898235.0     70.5  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3985.0   3985.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     134575.0 134575.0     10.6  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4412.0   4412.0      0.3  	matches = bf.match(des1,des2)

