Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.559 MiB   48.559 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.324 MiB    0.766 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.539 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.539 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.637 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.758 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.820 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.195 MiB    0.375 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.777 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.871 MiB    0.094 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.871 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.871 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.875 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.109 MiB    0.234 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.32666 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17244.0  17244.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121321.0 121321.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        216.0    216.0      0.0  	corners1 = np.int0(corners11)
    12         1       3868.0   3868.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        416.0    416.0      0.0  	orb = cv2.ORB_create()
    15         1        228.0    228.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16864.0  16864.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      81157.0  81157.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     944954.0 944954.0     71.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        231.0    231.0      0.0  	corners2 = np.int0(corners22)
    21         1       4010.0   4010.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     132137.0 132137.0     10.0  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4016.0   4016.0      0.3  	matches = bf.match(des1,des2)

