Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.062 MiB   49.062 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.941 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.043 MiB    1.102 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.043 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.156 MiB    0.113 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.219 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.344 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.535 MiB    0.191 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.117 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.164 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.164 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.164 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.168 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.453 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26746 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17087.0  17087.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121103.0 121103.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       3887.0   3887.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        303.0    303.0      0.0  	orb = cv2.ORB_create()
    15         1        345.0    345.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17804.0  17804.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      79524.0  79524.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     904551.0 904551.0     71.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        232.0    232.0      0.0  	corners2 = np.int0(corners22)
    21         1       3536.0   3536.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     114848.0 114848.0      9.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4019.0   4019.0      0.3  	matches = bf.match(des1,des2)

