Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.566 MiB   48.566 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.332 MiB    0.766 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.547 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.547 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.645 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.766 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.828 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.203 MiB    0.375 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.785 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.879 MiB    0.094 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.879 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.879 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.883 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.117 MiB    0.234 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26471 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17277.0  17277.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121002.0 121002.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        222.0    222.0      0.0  	corners1 = np.int0(corners11)
    12         1       3917.0   3917.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        213.0    213.0      0.0  	orb = cv2.ORB_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      18352.0  18352.0      1.5  	kp1, des1 = orb.compute(img1, kp1)
    17         1      80354.0  80354.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     898741.0 898741.0     71.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        226.0    226.0      0.0  	corners2 = np.int0(corners22)
    21         1       3772.0   3772.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     116384.0 116384.0      9.2  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4018.0   4018.0      0.3  	matches = bf.match(des1,des2)

