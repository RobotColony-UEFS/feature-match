Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.543 MiB   48.543 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.449 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.723 MiB    1.273 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.723 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.789 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.910 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.973 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.211 MiB    0.238 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.793 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.895 MiB    0.102 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.895 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.895 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.898 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.176 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.27896 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      16873.0  16873.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     117115.0 117115.0      9.2  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        220.0    220.0      0.0  	corners1 = np.int0(corners11)
    12         1       4089.0   4089.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        302.0    302.0      0.0  	orb = cv2.ORB_create()
    15         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      18937.0  18937.0      1.5  	kp1, des1 = orb.compute(img1, kp1)
    17         1      79347.0  79347.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     899929.0 899929.0     70.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        226.0    226.0      0.0  	corners2 = np.int0(corners22)
    21         1       3968.0   3968.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     133737.0 133737.0     10.5  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3991.0   3991.0      0.3  	matches = bf.match(des1,des2)

