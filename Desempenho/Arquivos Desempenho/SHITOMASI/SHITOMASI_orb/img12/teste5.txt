Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.723 MiB   48.723 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.477 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.754 MiB    1.277 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.754 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.855 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.977 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.039 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.309 MiB    0.270 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.891 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.934 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.934 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.934 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.938 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.215 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.31804 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17343.0  17343.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120115.0 120115.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        216.0    216.0      0.0  	corners1 = np.int0(corners11)
    12         1       5695.0   5695.0      0.4  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        318.0    318.0      0.0  	orb = cv2.ORB_create()
    15         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16883.0  16883.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      77354.0  77354.0      5.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     940281.0 940281.0     71.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        232.0    232.0      0.0  	corners2 = np.int0(corners22)
    21         1       3639.0   3639.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     131784.0 131784.0     10.0  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3947.0   3947.0      0.3  	matches = bf.match(des1,des2)

