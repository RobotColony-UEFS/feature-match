Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.117 MiB   49.117 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.934 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.168 MiB    1.234 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.168 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.277 MiB    0.109 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.340 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.465 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.660 MiB    0.195 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.242 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.289 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.289 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.289 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.293 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.516 MiB    0.223 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26508 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17024.0  17024.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     122113.0 122113.0      9.7  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4046.0   4046.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        306.0    306.0      0.0  	orb = cv2.ORB_create()
    15         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16876.0  16876.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      81036.0  81036.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     899452.0 899452.0     71.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        230.0    230.0      0.0  	corners2 = np.int0(corners22)
    21         1       3626.0   3626.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     115414.0 115414.0      9.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4502.0   4502.0      0.4  	matches = bf.match(des1,des2)

