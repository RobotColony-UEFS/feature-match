Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.602 MiB   48.602 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.504 MiB    0.902 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.719 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.719 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.809 MiB    0.090 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.930 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.992 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.363 MiB    0.371 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.945 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.039 MiB    0.094 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.039 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.039 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.043 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.266 MiB    0.223 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26953 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      18236.0  18236.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120625.0 120625.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4012.0   4012.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        307.0    307.0      0.0  	orb = cv2.ORB_create()
    15         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17591.0  17591.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      80762.0  80762.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     902664.0 902664.0     71.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        233.0    233.0      0.0  	corners2 = np.int0(corners22)
    21         1       3494.0   3494.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     116499.0 116499.0      9.2  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4649.0   4649.0      0.4  	matches = bf.match(des1,des2)

