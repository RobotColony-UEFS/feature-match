Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.707 MiB   48.707 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.461 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.742 MiB    1.281 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.742 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.844 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.965 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.027 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.293 MiB    0.266 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.875 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.918 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.918 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.918 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.922 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.199 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.27813 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17766.0  17766.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116371.0 116371.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       4578.0   4578.0      0.4  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        309.0    309.0      0.0  	orb = cv2.ORB_create()
    15         1        228.0    228.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      18229.0  18229.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      78268.0  78268.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     901866.0 901866.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        265.0    265.0      0.0  	corners2 = np.int0(corners22)
    21         1       3501.0   3501.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     132726.0 132726.0     10.4  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3799.0   3799.0      0.3  	matches = bf.match(des1,des2)

