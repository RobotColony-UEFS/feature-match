Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.715 MiB   48.715 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.469 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.297 MiB    1.828 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.297 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.398 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.500 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.562 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.988 MiB    0.426 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.016 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.078 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.078 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.078 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.082 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.359 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22961 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18102.0  18102.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116161.0 116161.0      9.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       3845.0   3845.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        295.0    295.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        329.0    329.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13731.0  13731.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      82446.0  82446.0      6.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     934903.0 934903.0     76.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        230.0    230.0      0.0  	corners2 = np.int0(corners22)
    21         1       5776.0   5776.0      0.5  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48101.0  48101.0      3.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       5471.0   5471.0      0.4  	matches = bf.match(des1,des2)

