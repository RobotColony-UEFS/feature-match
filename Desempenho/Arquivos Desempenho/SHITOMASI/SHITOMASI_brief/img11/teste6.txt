Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.785 MiB   48.785 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.801 MiB    1.016 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.035 MiB    1.234 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.035 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.160 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.266 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.328 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.809 MiB    0.480 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.391 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.391 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.391 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.391 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.395 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.801 MiB    0.406 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.2272 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      16888.0  16888.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120053.0 120053.0      9.8  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        217.0    217.0      0.0  	corners1 = np.int0(corners11)
    12         1       3617.0   3617.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        208.0    208.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16352.0  16352.0      1.3  	kp1, des1 = brief.compute(img1, kp1)
    17         1      76019.0  76019.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     935124.0 935124.0     76.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        238.0    238.0      0.0  	corners2 = np.int0(corners22)
    21         1       4321.0   4321.0      0.4  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      49490.0  49490.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4433.0   4433.0      0.4  	matches = bf.match(des1,des2)

