Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.613 MiB   48.613 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.520 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.789 MiB    1.270 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.789 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.855 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.977 MiB    0.121 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.039 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.594 MiB    0.555 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.176 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.230 MiB    0.055 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.230 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.230 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.234 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.570 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22339 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      16902.0  16902.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116541.0 116541.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       3655.0   3655.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        404.0    404.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        341.0    341.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14996.0  14996.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      74941.0  74941.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     938226.0 938226.0     76.7  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        235.0    235.0      0.0  	corners2 = np.int0(corners22)
    21         1       3648.0   3648.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48574.0  48574.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4709.0   4709.0      0.4  	matches = bf.match(des1,des2)

