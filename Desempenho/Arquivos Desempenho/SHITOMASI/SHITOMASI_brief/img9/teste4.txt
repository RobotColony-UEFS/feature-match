Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.613 MiB   48.613 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.523 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.344 MiB    1.820 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.344 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.410 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.531 MiB    0.121 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.594 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.938 MiB    0.344 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   51.965 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.082 MiB    0.117 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.082 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.082 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.086 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.422 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.2371 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17125.0  17125.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     122626.0 122626.0      9.9  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        222.0    222.0      0.0  	corners1 = np.int0(corners11)
    12         1       4242.0   4242.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        300.0    300.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        342.0    342.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13712.0  13712.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      84019.0  84019.0      6.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     937139.0 937139.0     75.8  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        231.0    231.0      0.0  	corners2 = np.int0(corners22)
    21         1       3791.0   3791.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48951.0  48951.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4396.0   4396.0      0.4  	matches = bf.match(des1,des2)

