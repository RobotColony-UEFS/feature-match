Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.707 MiB   48.707 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.543 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.758 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.758 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.852 MiB    0.094 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.910 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.973 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.641 MiB    0.668 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.223 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.270 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.270 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.270 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.273 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.512 MiB    0.238 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23164 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      19021.0  19021.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115470.0 115470.0      9.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        219.0    219.0      0.0  	corners1 = np.int0(corners11)
    12         1       4991.0   4991.0      0.4  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        307.0    307.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        335.0    335.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13630.0  13630.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      79808.0  79808.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     938689.0 938689.0     76.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3800.0   3800.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50582.0  50582.0      4.1  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4553.0   4553.0      0.4  	matches = bf.match(des1,des2)

