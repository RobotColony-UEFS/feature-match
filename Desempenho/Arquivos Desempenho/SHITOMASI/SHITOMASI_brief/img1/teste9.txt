Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.703 MiB   48.703 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.453 MiB    0.750 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.730 MiB    1.277 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.730 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.832 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.934 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.996 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.633 MiB    0.637 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.215 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.215 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.215 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.215 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.219 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.500 MiB    0.281 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.2395 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17884.0  17884.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121978.0 121978.0      9.8  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        340.0    340.0      0.0  	corners1 = np.int0(corners11)
    12         1       4447.0   4447.0      0.4  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        286.0    286.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      15648.0  15648.0      1.3  	kp1, des1 = brief.compute(img1, kp1)
    17         1      79173.0  79173.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     941655.0 941655.0     76.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3872.0   3872.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      49228.0  49228.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4522.0   4522.0      0.4  	matches = bf.match(des1,des2)

