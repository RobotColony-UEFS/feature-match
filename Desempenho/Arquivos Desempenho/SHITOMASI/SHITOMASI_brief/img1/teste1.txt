Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.047 MiB   49.047 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.859 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.070 MiB    1.211 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.070 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.184 MiB    0.113 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.289 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.410 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.938 MiB    0.527 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.520 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.520 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.520 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.520 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.523 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.750 MiB    0.227 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.25377 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17342.0  17342.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121853.0 121853.0      9.7  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       4077.0   4077.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        319.0    319.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        240.0    240.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13759.0  13759.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      83312.0  83312.0      6.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     954879.0 954879.0     76.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        225.0    225.0      0.0  	corners2 = np.int0(corners22)
    21         1       3632.0   3632.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      49207.0  49207.0      3.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4698.0   4698.0      0.4  	matches = bf.match(des1,des2)

