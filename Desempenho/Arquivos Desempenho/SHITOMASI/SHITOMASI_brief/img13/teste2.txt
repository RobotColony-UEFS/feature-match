Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.543 MiB   48.543 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.441 MiB    0.898 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.656 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.656 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.746 MiB    0.090 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.805 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.867 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.527 MiB    0.660 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.109 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.160 MiB    0.051 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.160 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.160 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.164 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.383 MiB    0.219 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.24493 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      20057.0  20057.0      1.6  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119595.0 119595.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        222.0    222.0      0.0  	corners1 = np.int0(corners11)
    12         1       3627.0   3627.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        298.0    298.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13736.0  13736.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80807.0  80807.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     947440.0 947440.0     76.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        221.0    221.0      0.0  	corners2 = np.int0(corners22)
    21         1       3438.0   3438.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50618.0  50618.0      4.1  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4640.0   4640.0      0.4  	matches = bf.match(des1,des2)

