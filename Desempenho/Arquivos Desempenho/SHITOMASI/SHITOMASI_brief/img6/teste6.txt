Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.098 MiB   49.098 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.977 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.074 MiB    1.098 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.074 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.188 MiB    0.113 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.293 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.418 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.879 MiB    0.461 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.461 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.461 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.461 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.461 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.465 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.863 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.24665 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      19117.0  19117.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120387.0 120387.0      9.7  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        220.0    220.0      0.0  	corners1 = np.int0(corners11)
    12         1       3677.0   3677.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        205.0    205.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        235.0    235.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14387.0  14387.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      79850.0  79850.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     949139.0 949139.0     76.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        230.0    230.0      0.0  	corners2 = np.int0(corners22)
    21         1       3408.0   3408.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50269.0  50269.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       5528.0   5528.0      0.4  	matches = bf.match(des1,des2)

