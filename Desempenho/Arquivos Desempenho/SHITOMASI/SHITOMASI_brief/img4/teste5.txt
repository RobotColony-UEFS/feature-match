Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.609 MiB   48.609 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.375 MiB    0.766 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.586 MiB    1.211 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.586 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.684 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.789 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.852 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.590 MiB    0.738 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.172 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.219 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.219 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.219 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.223 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.453 MiB    0.230 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.5414 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      19127.0  19127.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     117263.0 117263.0      7.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       3878.0   3878.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        215.0    215.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14124.0  14124.0      0.9  	kp1, des1 = brief.compute(img1, kp1)
    17         1      79843.0  79843.0      5.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1    1196899.0 1196899.0     77.7  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        226.0    226.0      0.0  	corners2 = np.int0(corners22)
    21         1       8117.0   8117.0      0.5  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      90572.0  90572.0      5.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1      10682.0  10682.0      0.7  	matches = bf.match(des1,des2)

