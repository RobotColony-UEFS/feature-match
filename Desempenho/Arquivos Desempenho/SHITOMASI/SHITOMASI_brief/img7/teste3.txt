Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.141 MiB   49.141 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   50.078 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.801 MiB    1.723 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.801 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.922 MiB    0.121 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   52.027 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   52.090 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.418 MiB    0.328 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.445 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.508 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.508 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.508 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.512 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.867 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23104 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17055.0  17055.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     122380.0 122380.0      9.9  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4123.0   4123.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        299.0    299.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        334.0    334.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13731.0  13731.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80555.0  80555.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     934309.0 934309.0     75.9  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3750.0   3750.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      49449.0  49449.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4604.0   4604.0      0.4  	matches = bf.match(des1,des2)

