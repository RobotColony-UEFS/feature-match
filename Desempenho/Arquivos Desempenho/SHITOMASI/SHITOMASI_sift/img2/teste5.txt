Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.074 MiB   49.074 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.953 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.055 MiB    1.102 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.055 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.168 MiB    0.113 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.285 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.410 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.406 MiB    3.996 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.406 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.406 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.406 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.406 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.410 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.750 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.53825 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      18124.0  18124.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     118464.0 118464.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       4065.0   4065.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        316.0    316.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        359.0    359.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     240389.0 240389.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      75896.0  75896.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     893043.0 893043.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        338.0    338.0      0.0  	corners2 = np.int0(corners22)
    21         1       3817.0   3817.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2146406.0 2146406.0     60.7  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      36813.0  36813.0      1.0  	matches = bf.match(des1,des2)

