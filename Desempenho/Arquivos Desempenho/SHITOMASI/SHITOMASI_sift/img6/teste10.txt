Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.938 MiB   48.938 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.930 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.168 MiB    1.238 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.168 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.293 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.410 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.473 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.449 MiB    3.977 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.449 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.449 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.449 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.449 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.453 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.805 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.6006 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      18098.0  18098.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120993.0 120993.0      3.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        229.0    229.0      0.0  	corners1 = np.int0(corners11)
    12         1       3902.0   3902.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        324.0    324.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        235.0    235.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     238567.0 238567.0      6.6  	kp1, des1 = sift.compute(img1, kp1)
    17         1      75453.0  75453.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     928038.0 928038.0     25.8  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        216.0    216.0      0.0  	corners2 = np.int0(corners22)
    21         1       3717.0   3717.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2175673.0 2175673.0     60.4  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      35158.0  35158.0      1.0  	matches = bf.match(des1,des2)

