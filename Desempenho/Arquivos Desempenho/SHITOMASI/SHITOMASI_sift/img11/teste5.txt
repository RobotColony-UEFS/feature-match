Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.789 MiB   48.789 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.781 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.020 MiB    1.238 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.020 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.145 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.262 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.324 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.301 MiB    3.977 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.301 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.301 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.301 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.301 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.305 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.656 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.51375 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17690.0  17690.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116032.0 116032.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4076.0   4076.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        318.0    318.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        327.0    327.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     241383.0 241383.0      6.9  	kp1, des1 = sift.compute(img1, kp1)
    17         1      68564.0  68564.0      2.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     886755.0 886755.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        240.0    240.0      0.0  	corners2 = np.int0(corners22)
    21         1       3635.0   3635.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2137649.0 2137649.0     60.8  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      36856.0  36856.0      1.0  	matches = bf.match(des1,des2)

