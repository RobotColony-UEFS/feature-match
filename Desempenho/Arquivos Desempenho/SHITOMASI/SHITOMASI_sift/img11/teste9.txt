Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.203 MiB   49.203 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   50.137 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.312 MiB    1.176 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.312 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.434 MiB    0.121 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.551 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.613 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.590 MiB    3.977 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.590 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.590 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.590 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.590 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.594 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.891 MiB    0.297 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.51384 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17332.0  17332.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116271.0 116271.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        227.0    227.0      0.0  	corners1 = np.int0(corners11)
    12         1       3826.0   3826.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        312.0    312.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     241676.0 241676.0      6.9  	kp1, des1 = sift.compute(img1, kp1)
    17         1      68105.0  68105.0      1.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     888791.0 888791.0     25.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        224.0    224.0      0.0  	corners2 = np.int0(corners22)
    21         1       3574.0   3574.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2136527.0 2136527.0     60.8  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      36740.0  36740.0      1.0  	matches = bf.match(des1,des2)

