Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.703 MiB   48.703 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.539 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.695 MiB    1.156 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.695 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.793 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.855 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   50.918 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   54.992 MiB    4.074 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   54.992 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   54.992 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   54.992 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   54.992 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   54.996 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.293 MiB    0.297 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.52588 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17220.0  17220.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     117102.0 117102.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       4062.0   4062.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        309.0    309.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     240907.0 240907.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      73765.0  73765.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     891143.0 891143.0     25.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        223.0    223.0      0.0  	corners2 = np.int0(corners22)
    21         1       3898.0   3898.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2138394.0 2138394.0     60.6  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      38402.0  38402.0      1.1  	matches = bf.match(des1,des2)

