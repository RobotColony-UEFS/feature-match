Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.082 MiB   49.082 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   50.020 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.129 MiB    1.109 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.129 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.246 MiB    0.117 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.363 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.488 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.422 MiB    3.934 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.422 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.422 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.422 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.422 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.426 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.766 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.5217 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17008.0  17008.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120207.0 120207.0      3.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        238.0    238.0      0.0  	corners1 = np.int0(corners11)
    12         1       3721.0   3721.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        307.0    307.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        331.0    331.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     239196.0 239196.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      74059.0  74059.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     888564.0 888564.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        220.0    220.0      0.0  	corners2 = np.int0(corners22)
    21         1       4593.0   4593.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2137943.0 2137943.0     60.7  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      35309.0  35309.0      1.0  	matches = bf.match(des1,des2)

