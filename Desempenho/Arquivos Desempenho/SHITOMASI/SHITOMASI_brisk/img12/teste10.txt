Filename: SHITOMASI_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.129 MiB   49.129 MiB   @profile
     8                             def SHITOMASI_brisk(img):
     9   50.008 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.105 MiB    1.098 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.105 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.219 MiB    0.113 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   96.398 MiB   45.180 MiB   	brisk = cv2.BRISK_create()
    15   96.523 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   96.961 MiB    0.438 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17   97.543 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   97.543 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   97.543 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   97.543 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   97.547 MiB    0.004 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    23                             
    24   97.895 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.61315 s
File: SHITOMASI_brisk.py
Function: SHITOMASI_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brisk(img):
     9         1      17701.0  17701.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120143.0 120143.0      1.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       3945.0   3945.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1    6352671.0 6352671.0     83.4  	brisk = cv2.BRISK_create()
    15         1        260.0    260.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      22865.0  22865.0      0.3  	kp1, des1 = brisk.compute(img1, kp1)
    17         1      79571.0  79571.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     946983.0 946983.0     12.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        239.0    239.0      0.0  	corners2 = np.int0(corners22)
    21         1       5551.0   5551.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      55058.0  55058.0      0.7  	kp2, des2 = brisk.compute(img2, kp2)
    23                                           
    24         1       7936.0   7936.0      0.1  	matches = bf.match(des1,des2)

