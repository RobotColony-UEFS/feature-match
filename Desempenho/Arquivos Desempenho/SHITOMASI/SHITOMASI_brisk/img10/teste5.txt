Filename: SHITOMASI_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.086 MiB   49.086 MiB   @profile
     8                             def SHITOMASI_brisk(img):
     9   50.070 MiB    0.984 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.250 MiB    1.180 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.250 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.375 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   96.500 MiB   45.125 MiB   	brisk = cv2.BRISK_create()
    15   96.562 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   97.141 MiB    0.578 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17   97.723 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   97.723 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   97.723 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   97.723 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   97.727 MiB    0.004 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    23                             
    24   98.020 MiB    0.293 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.6014 s
File: SHITOMASI_brisk.py
Function: SHITOMASI_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brisk(img):
     9         1      17122.0  17122.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     122015.0 122015.0      1.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        234.0    234.0      0.0  	corners1 = np.int0(corners11)
    12         1       4231.0   4231.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1    6338480.0 6338480.0     83.4  	brisk = cv2.BRISK_create()
    15         1        257.0    257.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      23368.0  23368.0      0.3  	kp1, des1 = brisk.compute(img1, kp1)
    17         1      79709.0  79709.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     947574.0 947574.0     12.5  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        231.0    231.0      0.0  	corners2 = np.int0(corners22)
    21         1       3802.0   3802.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      56505.0  56505.0      0.7  	kp2, des2 = brisk.compute(img2, kp2)
    23                                           
    24         1       7875.0   7875.0      0.1  	matches = bf.match(des1,des2)

