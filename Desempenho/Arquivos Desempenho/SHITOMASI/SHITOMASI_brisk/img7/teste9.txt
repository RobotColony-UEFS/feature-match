Filename: SHITOMASI_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.758 MiB   48.758 MiB   @profile
     8                             def SHITOMASI_brisk(img):
     9   49.590 MiB    0.832 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.742 MiB    1.152 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.742 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.840 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   96.027 MiB   45.188 MiB   	brisk = cv2.BRISK_create()
    15   96.090 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   96.707 MiB    0.617 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17   97.289 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   97.289 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   97.289 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   97.289 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   97.293 MiB    0.004 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    23                             
    24   97.527 MiB    0.234 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.63634 s
File: SHITOMASI_brisk.py
Function: SHITOMASI_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brisk(img):
     9         1      17274.0  17274.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     118194.0 118194.0      1.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        235.0    235.0      0.0  	corners1 = np.int0(corners11)
    12         1       4130.0   4130.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1    6380620.0 6380620.0     83.6  	brisk = cv2.BRISK_create()
    15         1        255.0    255.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      23959.0  23959.0      0.3  	kp1, des1 = brisk.compute(img1, kp1)
    17         1      80705.0  80705.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     944426.0 944426.0     12.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        222.0    222.0      0.0  	corners2 = np.int0(corners22)
    21         1       3826.0   3826.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      54245.0  54245.0      0.7  	kp2, des2 = brisk.compute(img2, kp2)
    23                                           
    24         1       8252.0   8252.0      0.1  	matches = bf.match(des1,des2)

