[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.996 MiB   48.996 MiB   @profile
     8                             def SURF_brief(img):
     9   49.984 MiB    0.988 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.094 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.148 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.211 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.234 MiB    1.023 MiB   	kp1 = surf.detect(img1,None)
    16   51.676 MiB    0.441 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.258 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.426 MiB    0.168 MiB   	kp2 = surf.detect(img2,None)
    21   52.496 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.895 MiB    0.398 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.30373 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17351.0  17351.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        337.0    337.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        170.0    170.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        333.0    333.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692401.0 692401.0     11.0  	kp1 = surf.detect(img1,None)
    16         1      76845.0  76845.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      72581.0  72581.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4409452.0 4409452.0     69.9  	kp2 = surf.detect(img2,None)
    21         1     340186.0 340186.0      5.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     694079.0 694079.0     11.0  	matches = bf.match(des1,des2)

