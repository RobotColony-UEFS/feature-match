[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.523 MiB   48.523 MiB   @profile
     8                             def SURF_brief(img):
     9   49.215 MiB    0.691 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.324 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.379 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.504 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.441 MiB    0.938 MiB   	kp1 = surf.detect(img1,None)
    16   51.027 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.609 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.777 MiB    0.168 MiB   	kp2 = surf.detect(img2,None)
    21   51.848 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.242 MiB    0.395 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.36139 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17139.0  17139.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        230.0    230.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        169.0    169.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     697882.0 697882.0     11.0  	kp1 = surf.detect(img1,None)
    16         1      76823.0  76823.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      73220.0  73220.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4409381.0 4409381.0     69.3  	kp2 = surf.detect(img2,None)
    21         1     339628.0 339628.0      5.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     746690.0 746690.0     11.7  	matches = bf.match(des1,des2)

