[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.754 MiB   48.754 MiB   @profile
     8                             def SURF_brief(img):
     9   49.566 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.629 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.688 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.750 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.926 MiB    1.176 MiB   	kp1 = surf.detect(img1,None)
    16   51.438 MiB    0.512 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.020 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.188 MiB    0.168 MiB   	kp2 = surf.detect(img2,None)
    21   52.258 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.539 MiB    0.281 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.52632 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17248.0  17248.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        316.0    316.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        171.0    171.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        336.0    336.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692410.0 692410.0     10.6  	kp1 = surf.detect(img1,None)
    16         1      76482.0  76482.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76421.0  76421.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4424737.0 4424737.0     67.8  	kp2 = surf.detect(img2,None)
    21         1     334232.0 334232.0      5.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     903965.0 903965.0     13.9  	matches = bf.match(des1,des2)

