[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.871 MiB   48.871 MiB   @profile
     8                             def SURF_brief(img):
     9   49.777 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.895 MiB    0.117 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.949 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.012 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.977 MiB    0.965 MiB   	kp1 = surf.detect(img1,None)
    16   51.426 MiB    0.449 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.008 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.195 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.281 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.633 MiB    0.352 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.14614 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16796.0  16796.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        348.0    348.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        174.0    174.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692581.0 692581.0      9.7  	kp1 = surf.detect(img1,None)
    16         1      76230.0  76230.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77618.0  77618.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4679076.0 4679076.0     65.5  	kp2 = surf.detect(img2,None)
    21         1     428990.0 428990.0      6.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1174092.0 1174092.0     16.4  	matches = bf.match(des1,des2)

