[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.891 MiB   48.891 MiB   @profile
     8                             def SURF_brief(img):
     9   49.828 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.938 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.992 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.055 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.133 MiB    1.078 MiB   	kp1 = surf.detect(img1,None)
    16   51.566 MiB    0.434 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.148 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.336 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.422 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.820 MiB    0.398 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.82107 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16972.0  16972.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        247.0    247.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        169.0    169.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        238.0    238.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693007.0 693007.0     10.2  	kp1 = surf.detect(img1,None)
    16         1      76437.0  76437.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78487.0  78487.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4670062.0 4670062.0     68.5  	kp2 = surf.detect(img2,None)
    21         1     428521.0 428521.0      6.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     856931.0 856931.0     12.6  	matches = bf.match(des1,des2)

