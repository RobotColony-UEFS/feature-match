[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.988 MiB   48.988 MiB   @profile
     8                             def SURF_brief(img):
     9   49.977 MiB    0.988 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.086 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.141 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.203 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.227 MiB    1.023 MiB   	kp1 = surf.detect(img1,None)
    16   51.668 MiB    0.441 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.250 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.438 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.523 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.922 MiB    0.398 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.83489 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17098.0  17098.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        332.0    332.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        174.0    174.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        336.0    336.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     694382.0 694382.0     10.2  	kp1 = surf.detect(img1,None)
    16         1      78186.0  78186.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77734.0  77734.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4671651.0 4671651.0     68.4  	kp2 = surf.detect(img2,None)
    21         1     446046.0 446046.0      6.5  	kp2, des2 = brief.compute(img2, kp2)
    22         1     848956.0 848956.0     12.4  	matches = bf.match(des1,des2)

