[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.047 MiB   49.047 MiB   @profile
     8                             def SURF_brief(img):
     9   49.953 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.078 MiB    0.125 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.133 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.195 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.215 MiB    1.020 MiB   	kp1 = surf.detect(img1,None)
    16   51.727 MiB    0.512 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.309 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.512 MiB    0.203 MiB   	kp2 = surf.detect(img2,None)
    21   52.609 MiB    0.098 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.938 MiB    0.328 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.21217 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16986.0  16986.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        229.0    229.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        167.0    167.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        234.0    234.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693153.0 693153.0      9.6  	kp1 = surf.detect(img1,None)
    16         1      79199.0  79199.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77880.0  77880.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4877624.0 4877624.0     67.6  	kp2 = surf.detect(img2,None)
    21         1     501989.0 501989.0      7.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     964714.0 964714.0     13.4  	matches = bf.match(des1,des2)

