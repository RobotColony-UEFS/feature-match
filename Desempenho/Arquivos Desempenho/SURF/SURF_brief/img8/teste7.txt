[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.551 MiB   48.551 MiB   @profile
     8                             def SURF_brief(img):
     9   49.238 MiB    0.688 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.348 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.402 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.527 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.465 MiB    0.938 MiB   	kp1 = surf.detect(img1,None)
    16   51.051 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.633 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.836 MiB    0.203 MiB   	kp2 = surf.detect(img2,None)
    21   51.934 MiB    0.098 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.328 MiB    0.395 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.20169 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17008.0  17008.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        450.0    450.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        184.0    184.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        235.0    235.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     694108.0 694108.0      9.6  	kp1 = surf.detect(img1,None)
    16         1      76431.0  76431.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77988.0  77988.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4882223.0 4882223.0     67.8  	kp2 = surf.detect(img2,None)
    21         1     482167.0 482167.0      6.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     970893.0 970893.0     13.5  	matches = bf.match(des1,des2)

