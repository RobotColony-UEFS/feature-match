[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.051 MiB   49.051 MiB   @profile
     8                             def SURF_brief(img):
     9   50.043 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.152 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.207 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.270 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.293 MiB    1.023 MiB   	kp1 = surf.detect(img1,None)
    16   51.734 MiB    0.441 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.316 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.504 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.590 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.988 MiB    0.398 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.79244 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17019.0  17019.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        333.0    333.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        171.0    171.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        458.0    458.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693413.0 693413.0     10.2  	kp1 = surf.detect(img1,None)
    16         1      75936.0  75936.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77020.0  77020.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4693915.0 4693915.0     69.1  	kp2 = surf.detect(img2,None)
    21         1     421301.0 421301.0      6.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     812873.0 812873.0     12.0  	matches = bf.match(des1,des2)

