[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.797 MiB   48.797 MiB   @profile
     8                             def SURF_brief(img):
     9   49.609 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.672 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.730 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.793 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.969 MiB    1.176 MiB   	kp1 = surf.detect(img1,None)
    16   51.480 MiB    0.512 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.062 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.250 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.336 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.617 MiB    0.281 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.89838 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17358.0  17358.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        312.0    312.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        168.0    168.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        322.0    322.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693530.0 693530.0     10.1  	kp1 = surf.detect(img1,None)
    16         1      76987.0  76987.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77285.0  77285.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4692606.0 4692606.0     68.0  	kp2 = surf.detect(img2,None)
    21         1     420329.0 420329.0      6.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     919480.0 919480.0     13.3  	matches = bf.match(des1,des2)

