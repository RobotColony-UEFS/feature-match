[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.559 MiB   48.559 MiB   @profile
     8                             def SURF_brief(img):
     9   49.363 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.473 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.523 MiB    0.051 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.648 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.648 MiB    1.000 MiB   	kp1 = surf.detect(img1,None)
    16   51.285 MiB    0.637 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.867 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.059 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.148 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.500 MiB    0.352 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.96681 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17089.0  17089.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        247.0    247.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        172.0    172.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     694232.0 694232.0     10.0  	kp1 = surf.detect(img1,None)
    16         1      76367.0  76367.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77352.0  77352.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4727964.0 4727964.0     67.9  	kp2 = surf.detect(img2,None)
    21         1     433496.0 433496.0      6.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     939662.0 939662.0     13.5  	matches = bf.match(des1,des2)

