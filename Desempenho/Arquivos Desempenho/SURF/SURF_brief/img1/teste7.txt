[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.582 MiB   48.582 MiB   @profile
     8                             def SURF_brief(img):
     9   49.387 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.445 MiB    0.059 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.602 MiB    0.156 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.664 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.660 MiB    0.996 MiB   	kp1 = surf.detect(img1,None)
    16   51.188 MiB    0.527 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.770 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.000 MiB    0.230 MiB   	kp2 = surf.detect(img2,None)
    21   52.129 MiB    0.129 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.422 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.96615 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16755.0  16755.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        265.0    265.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        171.0    171.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692670.0 692670.0      8.7  	kp1 = surf.detect(img1,None)
    16         1      76016.0  76016.0      1.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77237.0  77237.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    5261951.0 5261951.0     66.1  	kp2 = surf.detect(img2,None)
    21         1     609681.0 609681.0      7.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1231165.0 1231165.0     15.5  	matches = bf.match(des1,des2)

