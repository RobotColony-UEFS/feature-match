[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.953 MiB   48.953 MiB   @profile
     8                             def SURF_brief(img):
     9   49.859 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.977 MiB    0.117 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.031 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.094 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.059 MiB    0.965 MiB   	kp1 = surf.detect(img1,None)
    16   51.508 MiB    0.449 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.090 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.285 MiB    0.195 MiB   	kp2 = surf.detect(img2,None)
    21   52.383 MiB    0.098 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.734 MiB    0.352 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.22255 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17000.0  17000.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        327.0    327.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        171.0    171.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        329.0    329.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     695100.0 695100.0      9.6  	kp1 = surf.detect(img1,None)
    16         1      77203.0  77203.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76390.0  76390.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4826563.0 4826563.0     66.8  	kp2 = surf.detect(img2,None)
    21         1     465926.0 465926.0      6.5  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1063537.0 1063537.0     14.7  	matches = bf.match(des1,des2)

