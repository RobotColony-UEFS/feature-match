[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.887 MiB   48.887 MiB   @profile
     8                             def SURF_brief(img):
     9   49.797 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.918 MiB    0.121 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.973 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.035 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.055 MiB    1.020 MiB   	kp1 = surf.detect(img1,None)
    16   51.504 MiB    0.449 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.086 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.277 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.367 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.777 MiB    0.410 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.84933 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17275.0  17275.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        304.0    304.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        173.0    173.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693076.0 693076.0     10.1  	kp1 = surf.detect(img1,None)
    16         1      76336.0  76336.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      75276.0  75276.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4727115.0 4727115.0     69.0  	kp2 = surf.detect(img2,None)
    21         1     431593.0 431593.0      6.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     827947.0 827947.0     12.1  	matches = bf.match(des1,des2)

