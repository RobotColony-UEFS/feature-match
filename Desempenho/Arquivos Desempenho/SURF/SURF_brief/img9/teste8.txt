[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.914 MiB   48.914 MiB   @profile
     8                             def SURF_brief(img):
     9   49.855 MiB    0.941 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.918 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.977 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.039 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.082 MiB    1.043 MiB   	kp1 = surf.detect(img1,None)
    16   51.547 MiB    0.465 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.129 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.312 MiB    0.184 MiB   	kp2 = surf.detect(img2,None)
    21   52.395 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.727 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.6928 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17116.0  17116.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        339.0    339.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        176.0    176.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        235.0    235.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     691718.0 691718.0     10.3  	kp1 = surf.detect(img1,None)
    16         1      76578.0  76578.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78643.0  78643.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4624676.0 4624676.0     69.1  	kp2 = surf.detect(img2,None)
    21         1     400430.0 400430.0      6.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     802894.0 802894.0     12.0  	matches = bf.match(des1,des2)

