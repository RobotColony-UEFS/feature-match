[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.160 MiB   49.160 MiB   @profile
     8                             def SURF_brief(img):
     9   50.121 MiB    0.961 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.184 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.238 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.301 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.383 MiB    1.082 MiB   	kp1 = surf.detect(img1,None)
    16   51.844 MiB    0.461 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.426 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.609 MiB    0.184 MiB   	kp2 = surf.detect(img2,None)
    21   52.691 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   53.023 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.66515 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16731.0  16731.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        476.0    476.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        181.0    181.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        234.0    234.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     691452.0 691452.0     10.4  	kp1 = surf.detect(img1,None)
    16         1      76675.0  76675.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      83427.0  83427.0      1.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4625320.0 4625320.0     69.4  	kp2 = surf.detect(img2,None)
    21         1     402238.0 402238.0      6.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     768412.0 768412.0     11.5  	matches = bf.match(des1,des2)

