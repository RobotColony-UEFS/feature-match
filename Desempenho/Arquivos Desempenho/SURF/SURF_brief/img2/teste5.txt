[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.988 MiB   48.988 MiB   @profile
     8                             def SURF_brief(img):
     9   49.934 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.996 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.055 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.117 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.160 MiB    1.043 MiB   	kp1 = surf.detect(img1,None)
    16   51.625 MiB    0.465 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.207 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.398 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.492 MiB    0.094 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.824 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.96768 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17037.0  17037.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        347.0    347.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        178.0    178.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692441.0 692441.0      9.9  	kp1 = surf.detect(img1,None)
    16         1      77393.0  77393.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76638.0  76638.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4754666.0 4754666.0     68.2  	kp2 = surf.detect(img2,None)
    21         1     451269.0 451269.0      6.5  	kp2, des2 = brief.compute(img2, kp2)
    22         1     897478.0 897478.0     12.9  	matches = bf.match(des1,des2)

