[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.852 MiB   48.852 MiB   @profile
     8                             def SURF_brief(img):
     9   49.672 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.734 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.793 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.855 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.031 MiB    1.176 MiB   	kp1 = surf.detect(img1,None)
    16   51.543 MiB    0.512 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.125 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.316 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.410 MiB    0.094 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.691 MiB    0.281 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.93901 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17201.0  17201.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        315.0    315.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        173.0    173.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        334.0    334.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692206.0 692206.0     10.0  	kp1 = surf.detect(img1,None)
    16         1      75773.0  75773.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76931.0  76931.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4748552.0 4748552.0     68.4  	kp2 = surf.detect(img2,None)
    21         1     452259.0 452259.0      6.5  	kp2, des2 = brief.compute(img2, kp2)
    22         1     875265.0 875265.0     12.6  	matches = bf.match(des1,des2)

