Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.816 MiB   48.816 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.785 MiB    0.969 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.906 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.141 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.465 MiB    1.324 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.797 MiB    0.332 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.977 MiB    0.180 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.977 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.152 MiB    0.176 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.152 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.211 MiB    0.059 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.211 MiB    0.000 MiB   	matriz1=[]
    20   52.211 MiB    0.000 MiB   	for variavel in corners1:
    21   52.211 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.211 MiB    0.000 MiB   		matriz1.append(array)
    23   52.273 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.633 MiB    8.359 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.691 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.273 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.594 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.914 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.914 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.914 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.176 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.496 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.496 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.496 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.496 MiB    0.000 MiB   	matriz2=[]
    38   66.500 MiB    0.000 MiB   	for variavel in corners2:
    39   66.500 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.500 MiB    0.000 MiB   		matriz2.append(array)
    41   66.508 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.516 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.926 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.27857 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      16972.0  16972.0      0.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        434.0    434.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3970.0   3970.0      0.2  	imagem1 = np.float32(img1)
    12         1      76107.0  76107.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12963.0  12963.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12500.0  12500.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5021.0   5021.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11484.0  11484.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         90.0     90.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21658.0  21658.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         56.0     56.0      0.0  	matriz1=[]
    20        47       3326.0     70.8      0.1  	for variavel in corners1:
    21        46       8740.0    190.0      0.4  		array=np.array([variavel])
    22        46       2969.0     64.5      0.1  		matriz1.append(array)
    23         1       1193.0   1193.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     846534.0 846534.0     37.2  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        385.0    385.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80955.0  80955.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26792.0  26792.0      1.2  	imagem2 = np.float32(img2)
    30         1     630174.0 630174.0     27.7  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96594.0  96594.0      4.2  	dst2 = cv2.dilate(dst2,None)
    32         1      84425.0  84425.0      3.7  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38429.0  38429.0      1.7  	dst2 = np.uint8(dst2)
    34         1      77263.0  77263.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         80.0     80.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      99718.0  99718.0      4.4  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         57.0     57.0      0.0  	matriz2=[]
    38       179      12211.0     68.2      0.5  	for variavel in corners2:
    39       178      29203.0    164.1      1.3  		array=np.array([variavel])
    40       178      11807.0     66.3      0.5  		matriz2.append(array)
    41         1       3825.0   3825.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      56366.0  56366.0      2.5  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       6267.0   6267.0      0.3  	matches = bf.match(des1,des2)

