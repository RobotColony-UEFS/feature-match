Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.602 MiB   48.602 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.473 MiB    0.871 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.598 MiB    0.125 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   49.832 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.125 MiB    1.293 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.582 MiB    0.457 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.770 MiB    0.188 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.770 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   51.910 MiB    0.141 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   51.910 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   51.926 MiB    0.016 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   51.926 MiB    0.000 MiB   	matriz1=[]
    20   51.926 MiB    0.000 MiB   	for variavel in corners1:
    21   51.926 MiB    0.000 MiB   		array=np.array([variavel])
    22   51.926 MiB    0.000 MiB   		matriz1.append(array)
    23   51.953 MiB    0.027 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.457 MiB    8.504 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.516 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.098 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.418 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.738 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.738 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.789 MiB    0.051 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.051 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.371 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.371 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.371 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.371 MiB    0.000 MiB   	matriz2=[]
    38   66.379 MiB    0.000 MiB   	for variavel in corners2:
    39   66.379 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.379 MiB    0.000 MiB   		matriz2.append(array)
    41   66.391 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.398 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.621 MiB    0.223 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.39531 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17335.0  17335.0      0.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        346.0    346.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3973.0   3973.0      0.2  	imagem1 = np.float32(img1)
    12         1      75735.0  75735.0      3.2  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12949.0  12949.0      0.5  	dst1 = cv2.dilate(dst1,None)
    14         1      12529.0  12529.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5049.0   5049.0      0.2  	dst1 = np.uint8(dst1)
    16         1      13419.0  13419.0      0.6  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         91.0     91.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21930.0  21930.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         55.0     55.0      0.0  	matriz1=[]
    20        47       3185.0     67.8      0.1  	for variavel in corners1:
    21        46       7612.0    165.5      0.3  		array=np.array([variavel])
    22        46       2867.0     62.3      0.1  		matriz1.append(array)
    23         1       1207.0   1207.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     844661.0 844661.0     35.3  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        273.0    273.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80209.0  80209.0      3.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26903.0  26903.0      1.1  	imagem2 = np.float32(img2)
    30         1     624449.0 624449.0     26.1  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97335.0  97335.0      4.1  	dst2 = cv2.dilate(dst2,None)
    32         1      84814.0  84814.0      3.5  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38884.0  38884.0      1.6  	dst2 = np.uint8(dst2)
    34         1      76327.0  76327.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         81.0     81.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     183455.0 183455.0      7.7  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         59.0     59.0      0.0  	matriz2=[]
    38       273      18136.0     66.4      0.8  	for variavel in corners2:
    39       272      45615.0    167.7      1.9  		array=np.array([variavel])
    40       272      18153.0     66.7      0.8  		matriz2.append(array)
    41         1       5043.0   5043.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      64181.0  64181.0      2.7  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       8448.0   8448.0      0.4  	matches = bf.match(des1,des2)

