Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.812 MiB   48.812 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.625 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.789 MiB    0.164 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.023 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.312 MiB    1.289 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.738 MiB    0.426 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.926 MiB    0.188 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.926 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.023 MiB    0.098 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.023 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.059 MiB    0.035 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.059 MiB    0.000 MiB   	matriz1=[]
    20   52.059 MiB    0.000 MiB   	for variavel in corners1:
    21   52.059 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.059 MiB    0.000 MiB   		matriz1.append(array)
    23   52.062 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.426 MiB    8.363 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.484 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.066 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.387 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.707 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.707 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.707 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   63.969 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.289 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.289 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.289 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.289 MiB    0.000 MiB   	matriz2=[]
    38   66.297 MiB    0.000 MiB   	for variavel in corners2:
    39   66.297 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.297 MiB    0.000 MiB   		matriz2.append(array)
    41   66.309 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.316 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.664 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.39442 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      18820.0  18820.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        477.0    477.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3913.0   3913.0      0.2  	imagem1 = np.float32(img1)
    12         1      74537.0  74537.0      3.1  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      14273.0  14273.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12508.0  12508.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5099.0   5099.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11699.0  11699.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21420.0  21420.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         59.0     59.0      0.0  	matriz1=[]
    20        47       3036.0     64.6      0.1  	for variavel in corners1:
    21        46       7413.0    161.2      0.3  		array=np.array([variavel])
    22        46       2812.0     61.1      0.1  		matriz1.append(array)
    23         1       1079.0   1079.0      0.0  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847532.0 847532.0     35.4  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        276.0    276.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80072.0  80072.0      3.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26688.0  26688.0      1.1  	imagem2 = np.float32(img2)
    30         1     623610.0 623610.0     26.0  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96822.0  96822.0      4.0  	dst2 = cv2.dilate(dst2,None)
    32         1      85205.0  85205.0      3.6  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      37287.0  37287.0      1.6  	dst2 = np.uint8(dst2)
    34         1      76933.0  76933.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1        207.0    207.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     184501.0 184501.0      7.7  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         55.0     55.0      0.0  	matriz2=[]
    38       273      17435.0     63.9      0.7  	for variavel in corners2:
    39       272      44163.0    162.4      1.8  		array=np.array([variavel])
    40       272      16497.0     60.7      0.7  		matriz2.append(array)
    41         1       5361.0   5361.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      66147.0  66147.0      2.8  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       8399.0   8399.0      0.4  	matches = bf.match(des1,des2)

