Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.711 MiB   48.711 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.457 MiB    0.746 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.578 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   49.812 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.102 MiB    1.289 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.523 MiB    0.422 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.711 MiB    0.188 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.711 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   51.805 MiB    0.094 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   51.805 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   51.836 MiB    0.031 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   51.836 MiB    0.000 MiB   	matriz1=[]
    20   51.836 MiB    0.000 MiB   	for variavel in corners1:
    21   51.836 MiB    0.000 MiB   		array=np.array([variavel])
    22   51.836 MiB    0.000 MiB   		matriz1.append(array)
    23   51.879 MiB    0.043 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.375 MiB    8.496 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.434 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.016 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.336 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.656 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.656 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.656 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   63.918 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.238 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.238 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.238 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.238 MiB    0.000 MiB   	matriz2=[]
    38   66.246 MiB    0.000 MiB   	for variavel in corners2:
    39   66.246 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.246 MiB    0.000 MiB   		matriz2.append(array)
    41   66.258 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.266 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.543 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.40329 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17071.0  17071.0      0.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        339.0    339.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4083.0   4083.0      0.2  	imagem1 = np.float32(img1)
    12         1      75635.0  75635.0      3.1  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13103.0  13103.0      0.5  	dst1 = cv2.dilate(dst1,None)
    14         1      13145.0  13145.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       6052.0   6052.0      0.3  	dst1 = np.uint8(dst1)
    16         1      11874.0  11874.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      22165.0  22165.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         57.0     57.0      0.0  	matriz1=[]
    20        47       3063.0     65.2      0.1  	for variavel in corners1:
    21        46       8402.0    182.7      0.3  		array=np.array([variavel])
    22        46       2817.0     61.2      0.1  		matriz1.append(array)
    23         1       1283.0   1283.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     845325.0 845325.0     35.2  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        280.0    280.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      79843.0  79843.0      3.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      28110.0  28110.0      1.2  	imagem2 = np.float32(img2)
    30         1     627099.0 627099.0     26.1  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96645.0  96645.0      4.0  	dst2 = cv2.dilate(dst2,None)
    32         1      84808.0  84808.0      3.5  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38996.0  38996.0      1.6  	dst2 = np.uint8(dst2)
    34         1      75921.0  75921.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         78.0     78.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     185152.0 185152.0      7.7  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1        280.0    280.0      0.0  	matriz2=[]
    38       273      17477.0     64.0      0.7  	for variavel in corners2:
    39       272      48345.0    177.7      2.0  		array=np.array([variavel])
    40       272      17389.0     63.9      0.7  		matriz2.append(array)
    41         1       5737.0   5737.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      63162.0  63162.0      2.6  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       9467.0   9467.0      0.4  	matches = bf.match(des1,des2)

