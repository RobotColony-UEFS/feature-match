Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.547 MiB   48.547 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.426 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.551 MiB    0.125 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   49.844 MiB    0.293 MiB   	imagem1 = np.float32(img1)
    12   51.137 MiB    1.293 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.547 MiB    0.410 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.789 MiB    0.242 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.789 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   51.914 MiB    0.125 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   51.914 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   51.926 MiB    0.012 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   51.926 MiB    0.000 MiB   	matriz1=[]
    20   51.926 MiB    0.000 MiB   	for variavel in corners1:
    21   51.926 MiB    0.000 MiB   		array=np.array([variavel])
    22   51.926 MiB    0.000 MiB   		matriz1.append(array)
    23   51.930 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.414 MiB    8.484 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.473 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.055 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.375 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.695 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.695 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.750 MiB    0.055 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.012 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.332 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.332 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.332 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.332 MiB    0.000 MiB   	matriz2=[]
    38   66.340 MiB    0.000 MiB   	for variavel in corners2:
    39   66.340 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.340 MiB    0.000 MiB   		matriz2.append(array)
    41   66.352 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.359 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.699 MiB    0.340 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.35579 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      18912.0  18912.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        343.0    343.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4029.0   4029.0      0.2  	imagem1 = np.float32(img1)
    12         1      74752.0  74752.0      3.2  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12314.0  12314.0      0.5  	dst1 = cv2.dilate(dst1,None)
    14         1      14146.0  14146.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       4989.0   4989.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11875.0  11875.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         87.0     87.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      22221.0  22221.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1        114.0    114.0      0.0  	matriz1=[]
    20        47       3273.0     69.6      0.1  	for variavel in corners1:
    21        46       8124.0    176.6      0.3  		array=np.array([variavel])
    22        46       2930.0     63.7      0.1  		matriz1.append(array)
    23         1       1220.0   1220.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847706.0 847706.0     36.0  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        277.0    277.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80598.0  80598.0      3.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      28395.0  28395.0      1.2  	imagem2 = np.float32(img2)
    30         1     575050.0 575050.0     24.4  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96696.0  96696.0      4.1  	dst2 = cv2.dilate(dst2,None)
    32         1      85176.0  85176.0      3.6  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38535.0  38535.0      1.6  	dst2 = np.uint8(dst2)
    34         1      75628.0  75628.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         79.0     79.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     186807.0 186807.0      7.9  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         57.0     57.0      0.0  	matriz2=[]
    38       273      18073.0     66.2      0.8  	for variavel in corners2:
    39       272      46312.0    170.3      2.0  		array=np.array([variavel])
    40       272      17991.0     66.1      0.8  		matriz2.append(array)
    41         1       7011.0   7011.0      0.3  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      63610.0  63610.0      2.7  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       8464.0   8464.0      0.4  	matches = bf.match(des1,des2)

