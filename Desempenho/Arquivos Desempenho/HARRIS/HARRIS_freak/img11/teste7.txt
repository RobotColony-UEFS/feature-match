Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.188 MiB   49.188 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   50.109 MiB    0.922 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.227 MiB    0.117 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.461 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.672 MiB    1.211 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   52.062 MiB    0.391 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.246 MiB    0.184 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.246 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.406 MiB    0.160 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.406 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.457 MiB    0.051 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.457 MiB    0.000 MiB   	matriz1=[]
    20   52.457 MiB    0.000 MiB   	for variavel in corners1:
    21   52.457 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.457 MiB    0.000 MiB   		matriz1.append(array)
    23   52.520 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.938 MiB    8.418 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.996 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.578 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.898 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.219 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.219 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.219 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.480 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.801 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.801 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.801 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.801 MiB    0.000 MiB   	matriz2=[]
    38   66.805 MiB    0.000 MiB   	for variavel in corners2:
    39   66.805 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.805 MiB    0.000 MiB   		matriz2.append(array)
    41   66.809 MiB    0.004 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.812 MiB    0.004 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   67.168 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.17784 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17288.0  17288.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        340.0    340.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4360.0   4360.0      0.2  	imagem1 = np.float32(img1)
    12         1      75519.0  75519.0      3.5  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12921.0  12921.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12294.0  12294.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5209.0   5209.0      0.2  	dst1 = np.uint8(dst1)
    16         1      12358.0  12358.0      0.6  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         85.0     85.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      23528.0  23528.0      1.1  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         54.0     54.0      0.0  	matriz1=[]
    20        47       3203.0     68.1      0.1  	for variavel in corners1:
    21        46       7437.0    161.7      0.3  		array=np.array([variavel])
    22        46       2867.0     62.3      0.1  		matriz1.append(array)
    23         1       1202.0   1202.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     844380.0 844380.0     38.8  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        280.0    280.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      76105.0  76105.0      3.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      27230.0  27230.0      1.3  	imagem2 = np.float32(img2)
    30         1     575374.0 575374.0     26.4  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96337.0  96337.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      84741.0  84741.0      3.9  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      37215.0  37215.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76159.0  76159.0      3.5  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         81.0     81.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      86894.0  86894.0      4.0  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       129       8291.0     64.3      0.4  	for variavel in corners2:
    39       128      20839.0    162.8      1.0  		array=np.array([variavel])
    40       128       7991.0     62.4      0.4  		matriz2.append(array)
    41         1       2681.0   2681.0      0.1  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      49527.0  49527.0      2.3  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       4993.0   4993.0      0.2  	matches = bf.match(des1,des2)

