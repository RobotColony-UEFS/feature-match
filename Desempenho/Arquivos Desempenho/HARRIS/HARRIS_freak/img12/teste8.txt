Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.785 MiB   48.785 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.781 MiB    0.996 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.902 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.137 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.457 MiB    1.320 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.793 MiB    0.336 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.973 MiB    0.180 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.973 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.148 MiB    0.176 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.148 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.207 MiB    0.059 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.207 MiB    0.000 MiB   	matriz1=[]
    20   52.207 MiB    0.000 MiB   	for variavel in corners1:
    21   52.207 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.207 MiB    0.000 MiB   		matriz1.append(array)
    23   52.270 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.629 MiB    8.359 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.688 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.270 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.590 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.910 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.910 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.910 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.172 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.492 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.492 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.492 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.492 MiB    0.000 MiB   	matriz2=[]
    38   66.496 MiB    0.000 MiB   	for variavel in corners2:
    39   66.496 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.496 MiB    0.000 MiB   		matriz2.append(array)
    41   66.504 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.508 MiB    0.004 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.918 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.23016 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17275.0  17275.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        348.0    348.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4023.0   4023.0      0.2  	imagem1 = np.float32(img1)
    12         1      75999.0  75999.0      3.4  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13225.0  13225.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12293.0  12293.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5084.0   5084.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11704.0  11704.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21107.0  21107.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         56.0     56.0      0.0  	matriz1=[]
    20        47       3139.0     66.8      0.1  	for variavel in corners1:
    21        46       9160.0    199.1      0.4  		array=np.array([variavel])
    22        46       2922.0     63.5      0.1  		matriz1.append(array)
    23         1       1066.0   1066.0      0.0  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847041.0 847041.0     38.0  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        276.0    276.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      79168.0  79168.0      3.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26753.0  26753.0      1.2  	imagem2 = np.float32(img2)
    30         1     592811.0 592811.0     26.6  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97817.0  97817.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      86426.0  86426.0      3.9  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      37181.0  37181.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76673.0  76673.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         81.0     81.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      99365.0  99365.0      4.5  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         56.0     56.0      0.0  	matriz2=[]
    38       165      10812.0     65.5      0.5  	for variavel in corners2:
    39       164      26847.0    163.7      1.2  		array=np.array([variavel])
    40       164      10442.0     63.7      0.5  		matriz2.append(array)
    41         1       3528.0   3528.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      51764.0  51764.0      2.3  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       5630.0   5630.0      0.3  	matches = bf.match(des1,des2)

