[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.008 MiB   49.008 MiB   @profile
     8                             def ORB_brief(img):
     9   49.910 MiB    0.902 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.031 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.148 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.207 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.141 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.785 MiB    0.645 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.367 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.383 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.402 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.695 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.930581 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      16752.0  16752.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1        178.0    178.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        226.0    226.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90336.0  90336.0      9.7  	kp1 = orb.detect(img1,None)
    16         1      65405.0  65405.0      7.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80110.0  80110.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     400909.0 400909.0     43.1  	kp2 = orb.detect(img2,None)
    21         1     110619.0 110619.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     165725.0 165725.0     17.8  	matches = bf.match(des1,des2)

