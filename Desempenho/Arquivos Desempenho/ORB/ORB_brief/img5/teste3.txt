[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.918 MiB   48.918 MiB   @profile
     8                             def ORB_brief(img):
     9   49.859 MiB    0.941 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.980 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.039 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.098 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.023 MiB    0.926 MiB   	kp1 = orb.detect(img1,None)
    16   51.730 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.312 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.328 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.348 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.621 MiB    0.273 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.932393 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      19204.0  19204.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        311.0    311.0      0.0  	orb = cv2.ORB_create()
    12         1        277.0    277.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        225.0    225.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89126.0  89126.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      64324.0  64324.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77760.0  77760.0      8.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     405197.0 405197.0     43.5  	kp2 = orb.detect(img2,None)
    21         1     110138.0 110138.0     11.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     165831.0 165831.0     17.8  	matches = bf.match(des1,des2)

