[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.891 MiB   48.891 MiB   @profile
     8                             def ORB_brief(img):
     9   49.770 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.891 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.949 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.008 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.941 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.648 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.230 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.301 MiB    0.070 MiB   	kp2 = orb.detect(img2,None)
    21   52.320 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.598 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.93498 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17847.0  17847.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        320.0    320.0      0.0  	orb = cv2.ORB_create()
    12         1        282.0    282.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        228.0    228.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90003.0  90003.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      63125.0  63125.0      6.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78739.0  78739.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     408716.0 408716.0     43.7  	kp2 = orb.detect(img2,None)
    21         1     111960.0 111960.0     12.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     163760.0 163760.0     17.5  	matches = bf.match(des1,des2)

