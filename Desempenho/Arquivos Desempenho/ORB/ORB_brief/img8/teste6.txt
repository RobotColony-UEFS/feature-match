[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.523 MiB   48.523 MiB   @profile
     8                             def ORB_brief(img):
     9   49.219 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.281 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.395 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.516 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.445 MiB    0.930 MiB   	kp1 = orb.detect(img1,None)
    16   51.031 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.613 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.625 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   51.645 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.035 MiB    0.391 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.955955 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17323.0  17323.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        315.0    315.0      0.0  	orb = cv2.ORB_create()
    12         1        278.0    278.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        223.0    223.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89904.0  89904.0      9.4  	kp1 = orb.detect(img1,None)
    16         1      70592.0  70592.0      7.4  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81516.0  81516.0      8.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     419112.0 419112.0     43.8  	kp2 = orb.detect(img2,None)
    21         1     111213.0 111213.0     11.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     165479.0 165479.0     17.3  	matches = bf.match(des1,des2)

