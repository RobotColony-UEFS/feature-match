[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.906 MiB   48.906 MiB   @profile
     8                             def ORB_brief(img):
     9   49.895 MiB    0.988 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.957 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   50.070 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.133 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.027 MiB    0.895 MiB   	kp1 = orb.detect(img1,None)
    16   51.609 MiB    0.582 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.191 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.207 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.227 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.574 MiB    0.348 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.950544 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17048.0  17048.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        305.0    305.0      0.0  	orb = cv2.ORB_create()
    12         1        175.0    175.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        219.0    219.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90213.0  90213.0      9.5  	kp1 = orb.detect(img1,None)
    16         1      65772.0  65772.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79528.0  79528.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     422960.0 422960.0     44.5  	kp2 = orb.detect(img2,None)
    21         1     109966.0 109966.0     11.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     164358.0 164358.0     17.3  	matches = bf.match(des1,des2)

