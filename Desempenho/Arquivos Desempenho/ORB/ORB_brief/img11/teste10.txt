[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.766 MiB   48.766 MiB   @profile
     8                             def ORB_brief(img):
     9   49.645 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.707 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.820 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.879 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.770 MiB    0.891 MiB   	kp1 = orb.detect(img1,None)
    16   51.355 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.938 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.945 MiB    0.008 MiB   	kp2 = orb.detect(img2,None)
    21   51.965 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.309 MiB    0.344 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.916005 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17363.0  17363.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        230.0    230.0      0.0  	orb = cv2.ORB_create()
    12         1        275.0    275.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        337.0    337.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      91130.0  91130.0      9.9  	kp1 = orb.detect(img1,None)
    16         1      64694.0  64694.0      7.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      74924.0  74924.0      8.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     392248.0 392248.0     42.8  	kp2 = orb.detect(img2,None)
    21         1     109022.0 109022.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     165782.0 165782.0     18.1  	matches = bf.match(des1,des2)

