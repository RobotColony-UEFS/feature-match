[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.629 MiB   48.629 MiB   @profile
     8                             def ORB_brief(img):
     9   49.434 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.496 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.660 MiB    0.164 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.719 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.691 MiB    0.973 MiB   	kp1 = orb.detect(img1,None)
    16   51.277 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.859 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.918 MiB    0.059 MiB   	kp2 = orb.detect(img2,None)
    21   51.938 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.230 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.917661 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17403.0  17403.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        319.0    319.0      0.0  	orb = cv2.ORB_create()
    12         1        196.0    196.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90170.0  90170.0      9.8  	kp1 = orb.detect(img1,None)
    16         1      64651.0  64651.0      7.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79231.0  79231.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     394487.0 394487.0     43.0  	kp2 = orb.detect(img2,None)
    21         1     109163.0 109163.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     161811.0 161811.0     17.6  	matches = bf.match(des1,des2)

