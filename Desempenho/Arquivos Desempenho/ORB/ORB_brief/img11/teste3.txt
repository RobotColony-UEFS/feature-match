[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.422 MiB   48.422 MiB   @profile
     8                             def ORB_brief(img):
     9   49.172 MiB    0.750 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.234 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.352 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.473 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.406 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   50.930 MiB    0.523 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.512 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.523 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   51.543 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.945 MiB    0.402 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.91989 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      16992.0  16992.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        319.0    319.0      0.0  	orb = cv2.ORB_create()
    12         1        268.0    268.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        229.0    229.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      91007.0  91007.0      9.9  	kp1 = orb.detect(img1,None)
    16         1      65366.0  65366.0      7.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76508.0  76508.0      8.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     393134.0 393134.0     42.7  	kp2 = orb.detect(img2,None)
    21         1     111341.0 111341.0     12.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     164726.0 164726.0     17.9  	matches = bf.match(des1,des2)

