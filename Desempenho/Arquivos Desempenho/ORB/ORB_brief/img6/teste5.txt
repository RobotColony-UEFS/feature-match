[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.770 MiB   48.770 MiB   @profile
     8                             def ORB_brief(img):
     9   49.586 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.707 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.766 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.824 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.836 MiB    1.012 MiB   	kp1 = orb.detect(img1,None)
    16   51.547 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.129 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.195 MiB    0.066 MiB   	kp2 = orb.detect(img2,None)
    21   52.215 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.500 MiB    0.285 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.933294 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18363.0  18363.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        312.0    312.0      0.0  	orb = cv2.ORB_create()
    12         1        272.0    272.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        225.0    225.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89742.0  89742.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      62679.0  62679.0      6.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81609.0  81609.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     405727.0 405727.0     43.5  	kp2 = orb.detect(img2,None)
    21         1     111904.0 111904.0     12.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     162461.0 162461.0     17.4  	matches = bf.match(des1,des2)

