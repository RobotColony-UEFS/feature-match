[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.059 MiB   49.059 MiB   @profile
     8                             def ORB_brief(img):
     9   50.008 MiB    0.949 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.070 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   50.184 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.242 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.090 MiB    0.848 MiB   	kp1 = orb.detect(img1,None)
    16   51.734 MiB    0.645 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.316 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.332 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.352 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.707 MiB    0.355 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.926652 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18354.0  18354.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1        179.0    179.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        224.0    224.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90928.0  90928.0      9.8  	kp1 = orb.detect(img1,None)
    16         1      61904.0  61904.0      6.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80571.0  80571.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     401719.0 401719.0     43.4  	kp2 = orb.detect(img2,None)
    21         1     109619.0 109619.0     11.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     162833.0 162833.0     17.6  	matches = bf.match(des1,des2)

