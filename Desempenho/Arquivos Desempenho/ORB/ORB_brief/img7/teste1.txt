[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.762 MiB   48.762 MiB   @profile
     8                             def ORB_brief(img):
     9   49.637 MiB    0.875 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.699 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.812 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.871 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.762 MiB    0.891 MiB   	kp1 = orb.detect(img1,None)
    16   51.348 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.930 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.945 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   51.965 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.309 MiB    0.344 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.981706 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18578.0  18578.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        218.0    218.0      0.0  	orb = cv2.ORB_create()
    12         1        269.0    269.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        358.0    358.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      87895.0  87895.0      9.0  	kp1 = orb.detect(img1,None)
    16         1      63984.0  63984.0      6.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81168.0  81168.0      8.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     406958.0 406958.0     41.5  	kp2 = orb.detect(img2,None)
    21         1     110627.0 110627.0     11.3  	kp2, des2 = brief.compute(img2, kp2)
    22         1     211651.0 211651.0     21.6  	matches = bf.match(des1,des2)

