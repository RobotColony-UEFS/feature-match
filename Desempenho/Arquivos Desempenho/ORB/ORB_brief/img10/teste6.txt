[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.547 MiB   48.547 MiB   @profile
     8                             def ORB_brief(img):
     9   49.238 MiB    0.691 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.301 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.414 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.535 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.465 MiB    0.930 MiB   	kp1 = orb.detect(img1,None)
    16   51.051 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.633 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.648 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   51.668 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.059 MiB    0.391 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.932253 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17432.0  17432.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        323.0    323.0      0.0  	orb = cv2.ORB_create()
    12         1        185.0    185.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89555.0  89555.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      64490.0  64490.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79157.0  79157.0      8.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     392239.0 392239.0     42.1  	kp2 = orb.detect(img2,None)
    21         1     108954.0 108954.0     11.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     179691.0 179691.0     19.3  	matches = bf.match(des1,des2)

