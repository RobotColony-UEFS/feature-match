[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.641 MiB   48.641 MiB   @profile
     8                             def ORB_brief(img):
     9   49.445 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.508 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.672 MiB    0.164 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.730 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.703 MiB    0.973 MiB   	kp1 = orb.detect(img1,None)
    16   51.289 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.871 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.934 MiB    0.062 MiB   	kp2 = orb.detect(img2,None)
    21   51.953 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.246 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.936926 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      19021.0  19021.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1        185.0    185.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      88626.0  88626.0      9.5  	kp1 = orb.detect(img1,None)
    16         1      64700.0  64700.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80932.0  80932.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     396379.0 396379.0     42.3  	kp2 = orb.detect(img2,None)
    21         1     108967.0 108967.0     11.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     177568.0 177568.0     19.0  	matches = bf.match(des1,des2)

