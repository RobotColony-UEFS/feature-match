[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.922 MiB   48.922 MiB   @profile
     8                             def ORB_brief(img):
     9   49.812 MiB    0.891 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.934 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.992 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.051 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.984 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.691 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.273 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.340 MiB    0.066 MiB   	kp2 = orb.detect(img2,None)
    21   52.359 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.637 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.965972 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18792.0  18792.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1        177.0    177.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      88768.0  88768.0      9.2  	kp1 = orb.detect(img1,None)
    16         1      70360.0  70360.0      7.3  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82362.0  82362.0      8.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     429184.0 429184.0     44.4  	kp2 = orb.detect(img2,None)
    21         1     109878.0 109878.0     11.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     165903.0 165903.0     17.2  	matches = bf.match(des1,des2)

