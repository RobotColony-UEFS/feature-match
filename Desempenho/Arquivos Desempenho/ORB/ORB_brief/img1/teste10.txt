[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.824 MiB   48.824 MiB   @profile
     8                             def ORB_brief(img):
     9   49.762 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.824 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.938 MiB    0.113 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.000 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.832 MiB    0.832 MiB   	kp1 = orb.detect(img1,None)
    16   51.414 MiB    0.582 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.996 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.008 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   52.027 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.371 MiB    0.344 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.967161 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17557.0  17557.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        212.0    212.0      0.0  	orb = cv2.ORB_create()
    12         1        273.0    273.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90290.0  90290.0      9.3  	kp1 = orb.detect(img1,None)
    16         1      65147.0  65147.0      6.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80656.0  80656.0      8.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     417850.0 417850.0     43.2  	kp2 = orb.detect(img2,None)
    21         1     110427.0 110427.0     11.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     184519.0 184519.0     19.1  	matches = bf.match(des1,des2)

