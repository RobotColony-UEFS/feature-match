[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.973 MiB   48.973 MiB   @profile
     8                             def ORB_brief(img):
     9   49.875 MiB    0.902 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.996 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.113 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.172 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.105 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.750 MiB    0.645 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.332 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.348 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.367 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.660 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.948254 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17695.0  17695.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        590.0    590.0      0.1  	orb = cv2.ORB_create()
    12         1        483.0    483.0      0.1  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1       1736.0   1736.0      0.2  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89727.0  89727.0      9.5  	kp1 = orb.detect(img1,None)
    16         1      64907.0  64907.0      6.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81200.0  81200.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     415512.0 415512.0     43.8  	kp2 = orb.detect(img2,None)
    21         1     110368.0 110368.0     11.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     166036.0 166036.0     17.5  	matches = bf.match(des1,des2)

