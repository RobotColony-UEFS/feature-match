[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.637 MiB   48.637 MiB   @profile
     8                             def ORB_brief(img):
     9   49.441 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.504 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.668 MiB    0.164 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.727 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.699 MiB    0.973 MiB   	kp1 = orb.detect(img1,None)
    16   51.285 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.867 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.930 MiB    0.062 MiB   	kp2 = orb.detect(img2,None)
    21   51.949 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.242 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.968923 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      19931.0  19931.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        322.0    322.0      0.0  	orb = cv2.ORB_create()
    12         1        268.0    268.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        231.0    231.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90074.0  90074.0      9.3  	kp1 = orb.detect(img1,None)
    16         1      64352.0  64352.0      6.6  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81415.0  81415.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     414096.0 414096.0     42.7  	kp2 = orb.detect(img2,None)
    21         1     113991.0 113991.0     11.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     184243.0 184243.0     19.0  	matches = bf.match(des1,des2)

