[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.570 MiB   48.570 MiB   @profile
     8                             def ORB_sift(img):
     9   49.312 MiB    0.742 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.434 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.496 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.555 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.625 MiB    1.070 MiB   	kp1 = orb.detect(img1, None)
    16   56.461 MiB    5.836 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   56.461 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   56.465 MiB    0.004 MiB   	kp2 = orb.detect(img2, None)	
    21   58.648 MiB    2.184 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   58.941 MiB    0.293 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_sift.py.lprof
Timer unit: 1e-06 s

Total time: 29.4502 s
File: ORB_sift.py
Function: ORB_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_sift(img):
     9         1      17324.0  17324.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        328.0    328.0      0.0  	orb = cv2.ORB_create()
    12         1        189.0    189.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        227.0    227.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      90582.0  90582.0      0.3  	kp1 = orb.detect(img1, None)
    16         1   11187300.0 11187300.0     38.0  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      75490.0  75490.0      0.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     390482.0 390482.0      1.3  	kp2 = orb.detect(img2, None)	
    21         1   16572385.0 16572385.0     56.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1    1115870.0 1115870.0      3.8  	matches = bf.match(des1, des2)

