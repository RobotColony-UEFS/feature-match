[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.035 MiB   49.035 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.961 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.023 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   95.320 MiB   45.297 MiB   	brisk = cv2.BRISK_create()
    13   95.445 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   96.238 MiB    0.793 MiB   	kp1 = orb.detect(img1, None)
    16   96.629 MiB    0.391 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.211 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.223 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   97.238 MiB    0.016 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.594 MiB    0.355 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.49567 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18910.0  18910.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1    6496360.0 6496360.0     86.7  	brisk = cv2.BRISK_create()
    13         1        241.0    241.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90741.0  90741.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86266.0  86266.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      78791.0  78791.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     403637.0 403637.0      5.4  	kp2 = orb.detect(img2, None)
    21         1     219246.0 219246.0      2.9  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     101153.0 101153.0      1.3  	matches = bf.match(des1, des2)

