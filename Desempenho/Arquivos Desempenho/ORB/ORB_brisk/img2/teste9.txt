[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.117 MiB   49.117 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.988 MiB    0.871 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.051 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   95.340 MiB   45.289 MiB   	brisk = cv2.BRISK_create()
    13   95.465 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   96.258 MiB    0.793 MiB   	kp1 = orb.detect(img1, None)
    16   96.648 MiB    0.391 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.230 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.242 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   97.262 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.613 MiB    0.352 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.37519 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18832.0  18832.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        310.0    310.0      0.0  	orb = cv2.ORB_create()
    12         1    6356205.0 6356205.0     86.2  	brisk = cv2.BRISK_create()
    13         1        244.0    244.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      89685.0  89685.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86345.0  86345.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      77623.0  77623.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     412275.0 412275.0      5.6  	kp2 = orb.detect(img2, None)
    21         1     228932.0 228932.0      3.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     104736.0 104736.0      1.4  	matches = bf.match(des1, des2)

