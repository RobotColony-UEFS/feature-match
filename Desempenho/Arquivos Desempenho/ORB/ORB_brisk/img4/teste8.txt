[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.137 MiB   49.137 MiB   @profile
     8                             def ORB_brisk(img):
     9   50.055 MiB    0.918 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.117 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   95.422 MiB   45.305 MiB   	brisk = cv2.BRISK_create()
    13   95.480 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   96.234 MiB    0.754 MiB   	kp1 = orb.detect(img1, None)
    16   96.688 MiB    0.453 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.270 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.281 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   97.301 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.660 MiB    0.359 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.38499 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18142.0  18142.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        225.0    225.0      0.0  	orb = cv2.ORB_create()
    12         1    6371087.0 6371087.0     86.3  	brisk = cv2.BRISK_create()
    13         1        349.0    349.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90752.0  90752.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86012.0  86012.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      79976.0  79976.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     414130.0 414130.0      5.6  	kp2 = orb.detect(img2, None)
    21         1     221790.0 221790.0      3.0  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     102523.0 102523.0      1.4  	matches = bf.match(des1, des2)

