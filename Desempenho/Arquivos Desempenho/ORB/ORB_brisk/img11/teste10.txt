[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.676 MiB   48.676 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.426 MiB    0.750 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.547 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   94.770 MiB   45.223 MiB   	brisk = cv2.BRISK_create()
    13   94.828 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.789 MiB    0.961 MiB   	kp1 = orb.detect(img1, None)
    16   96.309 MiB    0.520 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.891 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.898 MiB    0.008 MiB   	kp2 = orb.detect(img2, None)
    21   96.918 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.211 MiB    0.293 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.3376 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      19474.0  19474.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        320.0    320.0      0.0  	orb = cv2.ORB_create()
    12         1    6343741.0 6343741.0     86.5  	brisk = cv2.BRISK_create()
    13         1        255.0    255.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90040.0  90040.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      87317.0  87317.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      73522.0  73522.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     392355.0 392355.0      5.3  	kp2 = orb.detect(img2, None)
    21         1     226420.0 226420.0      3.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     104159.0 104159.0      1.4  	matches = bf.match(des1, des2)

