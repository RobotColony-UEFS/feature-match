[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.797 MiB   48.797 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.613 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.676 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   94.945 MiB   45.270 MiB   	brisk = cv2.BRISK_create()
    13   95.004 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.922 MiB    0.918 MiB   	kp1 = orb.detect(img1, None)
    16   96.316 MiB    0.395 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.898 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.910 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   96.930 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.227 MiB    0.297 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.38707 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18185.0  18185.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        213.0    213.0      0.0  	orb = cv2.ORB_create()
    12         1    6374417.0 6374417.0     86.3  	brisk = cv2.BRISK_create()
    13         1        429.0    429.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90151.0  90151.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      89405.0  89405.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      82461.0  82461.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     405069.0 405069.0      5.5  	kp2 = orb.detect(img2, None)
    21         1     224424.0 224424.0      3.0  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     102313.0 102313.0      1.4  	matches = bf.match(des1, des2)

