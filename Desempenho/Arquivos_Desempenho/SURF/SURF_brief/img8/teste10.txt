[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.629 MiB   48.629 MiB   @profile
     8                             def SURF_brief(img):
     9   49.441 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.500 MiB    0.059 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.605 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.668 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.727 MiB    1.059 MiB   	kp1 = surf.detect(img1,None)
    16   51.246 MiB    0.520 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.828 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.031 MiB    0.203 MiB   	kp2 = surf.detect(img2,None)
    21   52.129 MiB    0.098 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.414 MiB    0.285 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.18626 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17322.0  17322.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        224.0    224.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        248.0    248.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693505.0 693505.0      9.7  	kp1 = surf.detect(img1,None)
    16         1      76148.0  76148.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78134.0  78134.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4882411.0 4882411.0     67.9  	kp2 = surf.detect(img2,None)
    21         1     483100.0 483100.0      6.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     954936.0 954936.0     13.3  	matches = bf.match(des1,des2)

