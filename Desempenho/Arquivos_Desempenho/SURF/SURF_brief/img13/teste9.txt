[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.547 MiB   48.547 MiB   @profile
     8                             def SURF_brief(img):
     9   49.238 MiB    0.691 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.348 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.402 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.527 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.465 MiB    0.938 MiB   	kp1 = surf.detect(img1,None)
    16   51.051 MiB    0.586 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.633 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.828 MiB    0.195 MiB   	kp2 = surf.detect(img2,None)
    21   51.926 MiB    0.098 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.320 MiB    0.395 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.05732 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17478.0  17478.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        242.0    242.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        258.0    258.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        241.0    241.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693822.0 693822.0      9.8  	kp1 = surf.detect(img1,None)
    16         1      75886.0  75886.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      75877.0  75877.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4823459.0 4823459.0     68.3  	kp2 = surf.detect(img2,None)
    21         1     465434.0 465434.0      6.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     904626.0 904626.0     12.8  	matches = bf.match(des1,des2)

