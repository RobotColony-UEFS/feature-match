[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.082 MiB   48.082 MiB   @profile
     8                             def SURF_brief(img):
     9   49.008 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.070 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.129 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.188 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.254 MiB    1.066 MiB   	kp1 = surf.detect(img1,None)
    16   50.723 MiB    0.469 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.305 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.535 MiB    0.230 MiB   	kp2 = surf.detect(img2,None)
    21   51.664 MiB    0.129 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.996 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.96845 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17537.0  17537.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        316.0    316.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        178.0    178.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        239.0    239.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693218.0 693218.0      8.7  	kp1 = surf.detect(img1,None)
    16         1      78808.0  78808.0      1.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77494.0  77494.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    5259191.0 5259191.0     66.0  	kp2 = surf.detect(img2,None)
    21         1     629527.0 629527.0      7.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1211947.0 1211947.0     15.2  	matches = bf.match(des1,des2)

