[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.820 MiB   48.820 MiB   @profile
     8                             def SURF_brief(img):
     9   49.754 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.863 MiB    0.109 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.918 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.980 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.059 MiB    1.078 MiB   	kp1 = surf.detect(img1,None)
    16   51.492 MiB    0.434 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.074 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.262 MiB    0.188 MiB   	kp2 = surf.detect(img2,None)
    21   52.348 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.746 MiB    0.398 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.91035 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      16977.0  16977.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        310.0    310.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        173.0    173.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        235.0    235.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692017.0 692017.0     10.0  	kp1 = surf.detect(img1,None)
    16         1      76391.0  76391.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77393.0  77393.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4669836.0 4669836.0     67.6  	kp2 = surf.detect(img2,None)
    21         1     430141.0 430141.0      6.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     946879.0 946879.0     13.7  	matches = bf.match(des1,des2)

