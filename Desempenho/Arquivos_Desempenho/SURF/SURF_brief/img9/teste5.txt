[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.637 MiB   48.637 MiB   @profile
     8                             def SURF_brief(img):
     9   49.449 MiB    0.812 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.508 MiB    0.059 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.613 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.676 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.734 MiB    1.059 MiB   	kp1 = surf.detect(img1,None)
    16   51.254 MiB    0.520 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.836 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.020 MiB    0.184 MiB   	kp2 = surf.detect(img2,None)
    21   52.102 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.387 MiB    0.285 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.68209 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17368.0  17368.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        324.0    324.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        172.0    172.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693111.0 693111.0     10.4  	kp1 = surf.detect(img1,None)
    16         1      76973.0  76973.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78862.0  78862.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4631170.0 4631170.0     69.3  	kp2 = surf.detect(img2,None)
    21         1     399903.0 399903.0      6.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     783980.0 783980.0     11.7  	matches = bf.match(des1,des2)

