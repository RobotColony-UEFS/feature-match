[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.977 MiB   48.977 MiB   @profile
     8                             def SURF_brief(img):
     9   49.922 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.984 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.043 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.105 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.148 MiB    1.043 MiB   	kp1 = surf.detect(img1,None)
    16   51.613 MiB    0.465 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.195 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.375 MiB    0.180 MiB   	kp2 = surf.detect(img2,None)
    21   52.453 MiB    0.078 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.785 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.67467 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17844.0  17844.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        315.0    315.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        174.0    174.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693438.0 693438.0     10.4  	kp1 = surf.detect(img1,None)
    16         1      76731.0  76731.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      76718.0  76718.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4578912.0 4578912.0     68.6  	kp2 = surf.detect(img2,None)
    21         1     384021.0 384021.0      5.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     846286.0 846286.0     12.7  	matches = bf.match(des1,des2)

