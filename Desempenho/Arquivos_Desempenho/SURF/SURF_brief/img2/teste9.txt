[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.969 MiB   48.969 MiB   @profile
     8                             def SURF_brief(img):
     9   49.910 MiB    0.941 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.973 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.031 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.094 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.137 MiB    1.043 MiB   	kp1 = surf.detect(img1,None)
    16   51.602 MiB    0.465 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.184 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.375 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.469 MiB    0.094 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.801 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.03687 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17002.0  17002.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        333.0    333.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        171.0    171.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        463.0    463.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     692817.0 692817.0      9.8  	kp1 = surf.detect(img1,None)
    16         1      76105.0  76105.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77704.0  77704.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4758080.0 4758080.0     67.6  	kp2 = surf.detect(img2,None)
    21         1     452676.0 452676.0      6.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     961522.0 961522.0     13.7  	matches = bf.match(des1,des2)

