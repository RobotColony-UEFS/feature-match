[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.121 MiB   49.121 MiB   @profile
     8                             def SURF_brief(img):
     9   50.086 MiB    0.965 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.148 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   50.203 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.266 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.348 MiB    1.082 MiB   	kp1 = surf.detect(img1,None)
    16   51.809 MiB    0.461 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.391 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.582 MiB    0.191 MiB   	kp2 = surf.detect(img2,None)
    21   52.676 MiB    0.094 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   53.008 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 7.05278 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17101.0  17101.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        244.0    244.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        260.0    260.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        238.0    238.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693579.0 693579.0      9.8  	kp1 = surf.detect(img1,None)
    16         1      76776.0  76776.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      77571.0  77571.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4746401.0 4746401.0     67.3  	kp2 = surf.detect(img2,None)
    21         1     452997.0 452997.0      6.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     987612.0 987612.0     14.0  	matches = bf.match(des1,des2)

