[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.832 MiB   48.832 MiB   @profile
     8                             def SURF_brief(img):
     9   49.715 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.777 MiB    0.062 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.836 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.898 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   51.004 MiB    1.105 MiB   	kp1 = surf.detect(img1,None)
    16   51.473 MiB    0.469 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.055 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.223 MiB    0.168 MiB   	kp2 = surf.detect(img2,None)
    21   52.293 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.629 MiB    0.336 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.26059 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17406.0  17406.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        317.0    317.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        172.0    172.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        239.0    239.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     697408.0 697408.0     11.1  	kp1 = surf.detect(img1,None)
    16         1      76373.0  76373.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      72642.0  72642.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4405532.0 4405532.0     70.4  	kp2 = surf.detect(img2,None)
    21         1     339315.0 339315.0      5.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     651191.0 651191.0     10.4  	matches = bf.match(des1,des2)

