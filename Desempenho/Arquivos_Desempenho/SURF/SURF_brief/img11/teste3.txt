[ INFO:0] Initialize OpenCL runtime...
Filename: SURF_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.652 MiB   48.652 MiB   @profile
     8                             def SURF_brief(img):
     9   49.457 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.516 MiB    0.059 MiB   	surf = cv2.xfeatures2d.SURF_create()
    12   49.672 MiB    0.156 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.734 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.730 MiB    0.996 MiB   	kp1 = surf.detect(img1,None)
    16   51.258 MiB    0.527 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.840 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.008 MiB    0.168 MiB   	kp2 = surf.detect(img2,None)
    21   52.078 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.371 MiB    0.293 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to SURF_brief.py.lprof
Timer unit: 1e-06 s

Total time: 6.25002 s
File: SURF_brief.py
Function: SURF_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SURF_brief(img):
     9         1      17466.0  17466.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        340.0    340.0      0.0  	surf = cv2.xfeatures2d.SURF_create()
    12         1        176.0    176.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        239.0    239.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1     693191.0 693191.0     11.1  	kp1 = surf.detect(img1,None)
    16         1      76327.0  76327.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      73156.0  73156.0      1.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1    4404242.0 4404242.0     70.5  	kp2 = surf.detect(img2,None)
    21         1     340481.0 340481.0      5.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     644402.0 644402.0     10.3  	matches = bf.match(des1,des2)

