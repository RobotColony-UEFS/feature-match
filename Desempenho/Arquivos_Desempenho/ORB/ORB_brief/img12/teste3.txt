[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.785 MiB   48.785 MiB   @profile
     8                             def ORB_brief(img):
     9   49.605 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.727 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.785 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.844 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.855 MiB    1.012 MiB   	kp1 = orb.detect(img1,None)
    16   51.566 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.148 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.211 MiB    0.062 MiB   	kp2 = orb.detect(img2,None)
    21   52.230 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.516 MiB    0.285 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.93185 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18013.0  18013.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        212.0    212.0      0.0  	orb = cv2.ORB_create()
    12         1        279.0    279.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        229.0    229.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90081.0  90081.0      9.7  	kp1 = orb.detect(img1,None)
    16         1      67172.0  67172.0      7.2  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79708.0  79708.0      8.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     402306.0 402306.0     43.2  	kp2 = orb.detect(img2,None)
    21         1     110364.0 110364.0     11.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     163486.0 163486.0     17.5  	matches = bf.match(des1,des2)

