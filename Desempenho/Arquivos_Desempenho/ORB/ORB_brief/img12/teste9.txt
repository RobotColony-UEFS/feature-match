[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.930 MiB   48.930 MiB   @profile
     8                             def ORB_brief(img):
     9   49.836 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.957 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.074 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.133 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.125 MiB    0.992 MiB   	kp1 = orb.detect(img1,None)
    16   51.828 MiB    0.703 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.410 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.422 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   52.441 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.711 MiB    0.270 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.928421 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      18411.0  18411.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        207.0    207.0      0.0  	orb = cv2.ORB_create()
    12         1        267.0    267.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        220.0    220.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89999.0  89999.0      9.7  	kp1 = orb.detect(img1,None)
    16         1      62916.0  62916.0      6.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80552.0  80552.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     400202.0 400202.0     43.1  	kp2 = orb.detect(img2,None)
    21         1     109257.0 109257.0     11.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     166390.0 166390.0     17.9  	matches = bf.match(des1,des2)

