[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.008 MiB   49.008 MiB   @profile
     8                             def ORB_brief(img):
     9   49.914 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.035 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.152 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.211 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.203 MiB    0.992 MiB   	kp1 = orb.detect(img1,None)
    16   51.906 MiB    0.703 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.488 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.500 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   52.520 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.789 MiB    0.270 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.983476 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17488.0  17488.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        204.0    204.0      0.0  	orb = cv2.ORB_create()
    12         1        268.0    268.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        217.0    217.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90549.0  90549.0      9.2  	kp1 = orb.detect(img1,None)
    16         1      64990.0  64990.0      6.6  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82236.0  82236.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     407875.0 407875.0     41.5  	kp2 = orb.detect(img2,None)
    21         1     114104.0 114104.0     11.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     205545.0 205545.0     20.9  	matches = bf.match(des1,des2)

