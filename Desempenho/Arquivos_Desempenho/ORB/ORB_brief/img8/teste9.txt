[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.762 MiB   48.762 MiB   @profile
     8                             def ORB_brief(img):
     9   49.582 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.703 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.762 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.820 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.832 MiB    1.012 MiB   	kp1 = orb.detect(img1,None)
    16   51.543 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.125 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.188 MiB    0.062 MiB   	kp2 = orb.detect(img2,None)
    21   52.207 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.492 MiB    0.285 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.972049 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17438.0  17438.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        223.0    223.0      0.0  	orb = cv2.ORB_create()
    12         1        275.0    275.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      91118.0  91118.0      9.4  	kp1 = orb.detect(img1,None)
    16         1      62937.0  62937.0      6.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81393.0  81393.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     420842.0 420842.0     43.3  	kp2 = orb.detect(img2,None)
    21         1     116838.0 116838.0     12.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     180749.0 180749.0     18.6  	matches = bf.match(des1,des2)

