[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.836 MiB   48.836 MiB   @profile
     8                             def ORB_brief(img):
     9   49.719 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.840 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.898 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.957 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.891 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.598 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.180 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.246 MiB    0.066 MiB   	kp2 = orb.detect(img2,None)
    21   52.266 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.543 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.926122 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17420.0  17420.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        224.0    224.0      0.0  	orb = cv2.ORB_create()
    12         1        277.0    277.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        324.0    324.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90690.0  90690.0      9.8  	kp1 = orb.detect(img1,None)
    16         1      64383.0  64383.0      7.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82693.0  82693.0      8.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     399276.0 399276.0     43.1  	kp2 = orb.detect(img2,None)
    21         1     108145.0 108145.0     11.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     162690.0 162690.0     17.6  	matches = bf.match(des1,des2)

