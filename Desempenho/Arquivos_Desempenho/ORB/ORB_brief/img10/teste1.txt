[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.926 MiB   48.926 MiB   @profile
     8                             def ORB_brief(img):
     9   49.828 MiB    0.902 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.949 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.066 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.125 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.117 MiB    0.992 MiB   	kp1 = orb.detect(img1,None)
    16   51.820 MiB    0.703 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.402 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.418 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.438 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.770 MiB    0.332 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.971202 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17221.0  17221.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        321.0    321.0      0.0  	orb = cv2.ORB_create()
    12         1        282.0    282.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90140.0  90140.0      9.3  	kp1 = orb.detect(img1,None)
    16         1      63634.0  63634.0      6.6  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79573.0  79573.0      8.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     394400.0 394400.0     40.6  	kp2 = orb.detect(img2,None)
    21         1     108805.0 108805.0     11.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     216594.0 216594.0     22.3  	matches = bf.match(des1,des2)

