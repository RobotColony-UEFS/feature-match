[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.938 MiB   48.938 MiB   @profile
     8                             def ORB_brief(img):
     9   49.820 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.941 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.000 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.059 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.992 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.699 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.281 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.348 MiB    0.066 MiB   	kp2 = orb.detect(img2,None)
    21   52.367 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.645 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.944365 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      19231.0  19231.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        204.0    204.0      0.0  	orb = cv2.ORB_create()
    12         1        488.0    488.0      0.1  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90709.0  90709.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      64800.0  64800.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79517.0  79517.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     405703.0 405703.0     43.0  	kp2 = orb.detect(img2,None)
    21         1     112680.0 112680.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     170796.0 170796.0     18.1  	matches = bf.match(des1,des2)

