[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.891 MiB   48.891 MiB   @profile
     8                             def ORB_brief(img):
     9   49.770 MiB    0.879 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.891 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.949 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.008 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.941 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.648 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.230 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.301 MiB    0.070 MiB   	kp2 = orb.detect(img2,None)
    21   52.320 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.598 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.939344 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      20450.0  20450.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        219.0    219.0      0.0  	orb = cv2.ORB_create()
    12         1        269.0    269.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        323.0    323.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      88580.0  88580.0      9.4  	kp1 = orb.detect(img1,None)
    16         1      62846.0  62846.0      6.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81351.0  81351.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     403666.0 403666.0     43.0  	kp2 = orb.detect(img2,None)
    21         1     111437.0 111437.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     170203.0 170203.0     18.1  	matches = bf.match(des1,des2)

