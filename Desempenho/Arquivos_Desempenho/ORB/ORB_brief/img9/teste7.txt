[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.828 MiB   48.828 MiB   @profile
     8                             def ORB_brief(img):
     9   49.711 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.832 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   49.891 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.949 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.883 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.590 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.172 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.238 MiB    0.066 MiB   	kp2 = orb.detect(img2,None)
    21   52.258 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.535 MiB    0.277 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.00704 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17266.0  17266.0      1.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        204.0    204.0      0.0  	orb = cv2.ORB_create()
    12         1        268.0    268.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        223.0    223.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90004.0  90004.0      8.9  	kp1 = orb.detect(img1,None)
    16         1      64752.0  64752.0      6.4  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82475.0  82475.0      8.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     406049.0 406049.0     40.3  	kp2 = orb.detect(img2,None)
    21         1     111561.0 111561.0     11.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     234235.0 234235.0     23.3  	matches = bf.match(des1,des2)

