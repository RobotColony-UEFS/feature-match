[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.938 MiB   48.938 MiB   @profile
     8                             def ORB_brief(img):
     9   49.863 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.984 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.102 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.160 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.152 MiB    0.992 MiB   	kp1 = orb.detect(img1,None)
    16   51.855 MiB    0.703 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.438 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.449 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   52.469 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.738 MiB    0.270 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.938526 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17578.0  17578.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        322.0    322.0      0.0  	orb = cv2.ORB_create()
    12         1        269.0    269.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      89659.0  89659.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      65070.0  65070.0      6.9  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82042.0  82042.0      8.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     410742.0 410742.0     43.8  	kp2 = orb.detect(img2,None)
    21         1     111427.0 111427.0     11.9  	kp2, des2 = brief.compute(img2, kp2)
    22         1     161187.0 161187.0     17.2  	matches = bf.match(des1,des2)

