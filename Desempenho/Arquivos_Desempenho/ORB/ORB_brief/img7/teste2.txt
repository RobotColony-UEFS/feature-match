[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.477 MiB   48.477 MiB   @profile
     8                             def ORB_brief(img):
     9   49.227 MiB    0.750 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.289 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.406 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.527 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.461 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   50.984 MiB    0.523 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.566 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.582 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   51.602 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.004 MiB    0.402 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.971908 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      20247.0  20247.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        211.0    211.0      0.0  	orb = cv2.ORB_create()
    12         1        278.0    278.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        229.0    229.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      86982.0  86982.0      8.9  	kp1 = orb.detect(img1,None)
    16         1      65468.0  65468.0      6.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81900.0  81900.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     407080.0 407080.0     41.9  	kp2 = orb.detect(img2,None)
    21         1     110347.0 110347.0     11.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     199166.0 199166.0     20.5  	matches = bf.match(des1,des2)

