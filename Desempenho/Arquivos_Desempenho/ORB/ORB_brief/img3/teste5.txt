[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.973 MiB   48.973 MiB   @profile
     8                             def ORB_brief(img):
     9   49.914 MiB    0.941 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.035 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   50.094 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.152 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   51.078 MiB    0.926 MiB   	kp1 = orb.detect(img1,None)
    16   51.785 MiB    0.707 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   52.367 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   52.383 MiB    0.016 MiB   	kp2 = orb.detect(img2,None)
    21   52.402 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.676 MiB    0.273 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 0.935385 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17277.0  17277.0      1.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        327.0    327.0      0.0  	orb = cv2.ORB_create()
    12         1        279.0    279.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        228.0    228.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90134.0  90134.0      9.6  	kp1 = orb.detect(img1,None)
    16         1      65428.0  65428.0      7.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79629.0  79629.0      8.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     403766.0 403766.0     43.2  	kp2 = orb.detect(img2,None)
    21         1     111935.0 111935.0     12.0  	kp2, des2 = brief.compute(img2, kp2)
    22         1     166382.0 166382.0     17.8  	matches = bf.match(des1,des2)

