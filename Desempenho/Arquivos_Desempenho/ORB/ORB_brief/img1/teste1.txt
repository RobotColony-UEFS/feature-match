[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.496 MiB   48.496 MiB   @profile
     8                             def ORB_brief(img):
     9   49.250 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.312 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   49.430 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.551 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             		
    15   50.484 MiB    0.934 MiB   	kp1 = orb.detect(img1,None)
    16   51.008 MiB    0.523 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.590 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.602 MiB    0.012 MiB   	kp2 = orb.detect(img2,None)
    21   51.621 MiB    0.020 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.023 MiB    0.402 MiB   	matches = bf.match(des1,des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.03363 s
File: ORB_brief.py
Function: ORB_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brief(img):
     9         1      17930.0  17930.0      1.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        224.0    224.0      0.0  	orb = cv2.ORB_create()
    12         1        275.0    275.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        327.0    327.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           		
    15         1      90259.0  90259.0      8.7  	kp1 = orb.detect(img1,None)
    16         1      64928.0  64928.0      6.3  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      82940.0  82940.0      8.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1     419284.0 419284.0     40.6  	kp2 = orb.detect(img2,None)
    21         1     110578.0 110578.0     10.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     246882.0 246882.0     23.9  	matches = bf.match(des1,des2)

