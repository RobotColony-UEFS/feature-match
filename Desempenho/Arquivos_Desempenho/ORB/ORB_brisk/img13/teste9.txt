[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.598 MiB   48.598 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.473 MiB    0.875 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.594 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   94.836 MiB   45.242 MiB   	brisk = cv2.BRISK_create()
    13   94.895 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.926 MiB    1.031 MiB   	kp1 = orb.detect(img1, None)
    16   96.445 MiB    0.520 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.027 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.090 MiB    0.062 MiB   	kp2 = orb.detect(img2, None)
    21   97.109 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.336 MiB    0.227 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.37537 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      19324.0  19324.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        322.0    322.0      0.0  	orb = cv2.ORB_create()
    12         1    6358442.0 6358442.0     86.2  	brisk = cv2.BRISK_create()
    13         1        254.0    254.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      89751.0  89751.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86712.0  86712.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      81401.0  81401.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     407302.0 407302.0      5.5  	kp2 = orb.detect(img2, None)
    21         1     228012.0 228012.0      3.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     103848.0 103848.0      1.4  	matches = bf.match(des1, des2)

