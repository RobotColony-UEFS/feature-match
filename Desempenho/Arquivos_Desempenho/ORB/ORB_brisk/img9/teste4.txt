[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.980 MiB   48.980 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.906 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.969 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12   95.266 MiB   45.297 MiB   	brisk = cv2.BRISK_create()
    13   95.391 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   96.184 MiB    0.793 MiB   	kp1 = orb.detect(img1, None)
    16   96.574 MiB    0.391 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.156 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.168 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   97.188 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.543 MiB    0.355 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.38199 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18497.0  18497.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1       1585.0   1585.0      0.0  	orb = cv2.ORB_create()
    12         1    6370371.0 6370371.0     86.3  	brisk = cv2.BRISK_create()
    13         1        252.0    252.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90511.0  90511.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86026.0  86026.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      81981.0  81981.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     405631.0 405631.0      5.5  	kp2 = orb.detect(img2, None)
    21         1     223613.0 223613.0      3.0  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     103519.0 103519.0      1.4  	matches = bf.match(des1, des2)

