[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.727 MiB   48.727 MiB   @profile
     8                             def ORB_brisk(img):
     9   49.480 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.602 MiB    0.121 MiB   	orb = cv2.ORB_create()
    12   94.824 MiB   45.223 MiB   	brisk = cv2.BRISK_create()
    13   94.883 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.840 MiB    0.957 MiB   	kp1 = orb.detect(img1, None)
    16   96.359 MiB    0.520 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.941 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.953 MiB    0.012 MiB   	kp2 = orb.detect(img2, None)
    21   96.973 MiB    0.020 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.266 MiB    0.293 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.35081 s
File: ORB_brisk.py
Function: ORB_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_brisk(img):
     9         1      18710.0  18710.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        223.0    223.0      0.0  	orb = cv2.ORB_create()
    12         1    6349495.0 6349495.0     86.4  	brisk = cv2.BRISK_create()
    13         1        359.0    359.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90168.0  90168.0      1.2  	kp1 = orb.detect(img1, None)
    16         1      86492.0  86492.0      1.2  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      75810.0  75810.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     399572.0 399572.0      5.4  	kp2 = orb.detect(img2, None)
    21         1     227102.0 227102.0      3.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1     102882.0 102882.0      1.4  	matches = bf.match(des1, des2)

