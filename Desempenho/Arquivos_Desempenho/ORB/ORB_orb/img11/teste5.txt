[ INFO:0] Initialize OpenCL runtime...
Filename: ORB_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.094 MiB   49.094 MiB   @profile
     8                             def ORB_orb(img):
     9   49.969 MiB    0.875 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.031 MiB    0.062 MiB   	orb = cv2.ORB_create()
    12                             
    13   50.156 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.957 MiB    0.801 MiB   	kp1 = orb.detect(img1, None)
    16   51.449 MiB    0.492 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   52.031 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   52.090 MiB    0.059 MiB   	kp2 = orb.detect(img2, None)	
    21   52.109 MiB    0.020 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.453 MiB    0.344 MiB   	matches = bf.match(des1, des2)


[ INFO:0] Initialize OpenCL runtime...
Wrote profile results to ORB_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.4234 s
File: ORB_orb.py
Function: ORB_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def ORB_orb(img):
     9         1      18360.0  18360.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        308.0    308.0      0.0  	orb = cv2.ORB_create()
    12                                           
    13         1        220.0    220.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      90969.0  90969.0      6.4  	kp1 = orb.detect(img1, None)
    16         1     100105.0 100105.0      7.0  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      76488.0  76488.0      5.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1     393917.0 393917.0     27.7  	kp2 = orb.detect(img2, None)	
    21         1     578818.0 578818.0     40.7  	kp2, des2 = orb.compute(img2, kp2)
    22         1     164215.0 164215.0     11.5  	matches = bf.match(des1, des2)

