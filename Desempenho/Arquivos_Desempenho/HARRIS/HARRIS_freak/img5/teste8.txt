Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.043 MiB   49.043 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.914 MiB    0.871 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.023 MiB    0.109 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.258 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.473 MiB    1.215 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.852 MiB    0.379 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.031 MiB    0.180 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.031 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.137 MiB    0.105 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.137 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.180 MiB    0.043 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.180 MiB    0.000 MiB   	matriz1=[]
    20   52.180 MiB    0.000 MiB   	for variavel in corners1:
    21   52.180 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.180 MiB    0.000 MiB   		matriz1.append(array)
    23   52.242 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.605 MiB    8.363 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.730 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.312 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.633 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.953 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.953 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.953 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.215 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.535 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.535 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.535 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.535 MiB    0.000 MiB   	matriz2=[]
    38   66.539 MiB    0.000 MiB   	for variavel in corners2:
    39   66.539 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.539 MiB    0.000 MiB   		matriz2.append(array)
    41   66.547 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.555 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.949 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.20849 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17908.0  17908.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        367.0    367.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4037.0   4037.0      0.2  	imagem1 = np.float32(img1)
    12         1      74179.0  74179.0      3.4  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      14217.0  14217.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12571.0  12571.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       4896.0   4896.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11567.0  11567.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         86.0     86.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21172.0  21172.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         56.0     56.0      0.0  	matriz1=[]
    20        47       3132.0     66.6      0.1  	for variavel in corners1:
    21        46       7413.0    161.2      0.3  		array=np.array([variavel])
    22        46       2897.0     63.0      0.1  		matriz1.append(array)
    23         1       1186.0   1186.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847754.0 847754.0     38.4  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        286.0    286.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      77258.0  77258.0      3.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      27534.0  27534.0      1.2  	imagem2 = np.float32(img2)
    30         1     576720.0 576720.0     26.1  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97402.0  97402.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      83792.0  83792.0      3.8  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39944.0  39944.0      1.8  	dst2 = np.uint8(dst2)
    34         1      76110.0  76110.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         82.0     82.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      84211.0  84211.0      3.8  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         59.0     59.0      0.0  	matriz2=[]
    38       189      12354.0     65.4      0.6  	for variavel in corners2:
    39       188      32091.0    170.7      1.5  		array=np.array([variavel])
    40       188      12691.0     67.5      0.6  		matriz2.append(array)
    41         1       3764.0   3764.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      55312.0  55312.0      2.5  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       5438.0   5438.0      0.2  	matches = bf.match(des1,des2)

