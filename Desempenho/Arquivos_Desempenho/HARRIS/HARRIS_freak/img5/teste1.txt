Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.977 MiB   48.977 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.883 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.004 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.238 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.586 MiB    1.348 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.977 MiB    0.391 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.277 MiB    0.301 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.277 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.465 MiB    0.188 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.465 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.465 MiB    0.000 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.465 MiB    0.000 MiB   	matriz1=[]
    20   52.465 MiB    0.000 MiB   	for variavel in corners1:
    21   52.465 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.465 MiB    0.000 MiB   		matriz1.append(array)
    23   52.469 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.957 MiB    8.488 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   61.016 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.598 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.918 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.238 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.238 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.238 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.500 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.820 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.820 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.820 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.820 MiB    0.000 MiB   	matriz2=[]
    38   66.824 MiB    0.000 MiB   	for variavel in corners2:
    39   66.824 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.824 MiB    0.000 MiB   		matriz2.append(array)
    41   66.832 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.840 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   67.176 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.21409 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      19094.0  19094.0      0.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        359.0    359.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4052.0   4052.0      0.2  	imagem1 = np.float32(img1)
    12         1      74289.0  74289.0      3.4  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13036.0  13036.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      14291.0  14291.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5823.0   5823.0      0.3  	dst1 = np.uint8(dst1)
    16         1      11614.0  11614.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         92.0     92.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21164.0  21164.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         61.0     61.0      0.0  	matriz1=[]
    20        47       3346.0     71.2      0.2  	for variavel in corners1:
    21        46       7555.0    164.2      0.3  		array=np.array([variavel])
    22        46       2937.0     63.8      0.1  		matriz1.append(array)
    23         1       1114.0   1114.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     848460.0 848460.0     38.3  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        274.0    274.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      75389.0  75389.0      3.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      29725.0  29725.0      1.3  	imagem2 = np.float32(img2)
    30         1     575645.0 575645.0     26.0  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96986.0  96986.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      85592.0  85592.0      3.9  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39611.0  39611.0      1.8  	dst2 = np.uint8(dst2)
    34         1      74014.0  74014.0      3.3  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         90.0     90.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      87264.0  87264.0      3.9  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         62.0     62.0      0.0  	matriz2=[]
    38       189      13796.0     73.0      0.6  	for variavel in corners2:
    39       188      32095.0    170.7      1.4  		array=np.array([variavel])
    40       188      13040.0     69.4      0.6  		matriz2.append(array)
    41         1       3843.0   3843.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      53948.0  53948.0      2.4  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       5425.0   5425.0      0.2  	matches = bf.match(des1,des2)

