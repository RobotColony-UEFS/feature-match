Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.727 MiB   48.727 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.531 MiB    0.805 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.652 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   49.887 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.176 MiB    1.289 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.648 MiB    0.473 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.836 MiB    0.188 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.836 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   51.926 MiB    0.090 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   51.926 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   51.953 MiB    0.027 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   51.953 MiB    0.000 MiB   	matriz1=[]
    20   51.953 MiB    0.000 MiB   	for variavel in corners1:
    21   51.953 MiB    0.000 MiB   		array=np.array([variavel])
    22   51.953 MiB    0.000 MiB   		matriz1.append(array)
    23   51.992 MiB    0.039 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.547 MiB    8.555 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.605 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.188 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.508 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.828 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.828 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.828 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.090 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.410 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.410 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.410 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.410 MiB    0.000 MiB   	matriz2=[]
    38   66.414 MiB    0.000 MiB   	for variavel in corners2:
    39   66.414 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.414 MiB    0.000 MiB   		matriz2.append(array)
    41   66.418 MiB    0.004 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.422 MiB    0.004 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.727 MiB    0.305 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.18905 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      19047.0  19047.0      0.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        483.0    483.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3998.0   3998.0      0.2  	imagem1 = np.float32(img1)
    12         1      73240.0  73240.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      15483.0  15483.0      0.7  	dst1 = cv2.dilate(dst1,None)
    14         1      12314.0  12314.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5111.0   5111.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11665.0  11665.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         93.0     93.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21013.0  21013.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         61.0     61.0      0.0  	matriz1=[]
    20        47       3254.0     69.2      0.1  	for variavel in corners1:
    21        46       7536.0    163.8      0.3  		array=np.array([variavel])
    22        46       3001.0     65.2      0.1  		matriz1.append(array)
    23         1       1217.0   1217.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     848562.0 848562.0     38.8  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        281.0    281.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      78856.0  78856.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      28501.0  28501.0      1.3  	imagem2 = np.float32(img2)
    30         1     576306.0 576306.0     26.3  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      98001.0  98001.0      4.5  	dst2 = cv2.dilate(dst2,None)
    32         1      84513.0  84513.0      3.9  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      40074.0  40074.0      1.8  	dst2 = np.uint8(dst2)
    34         1      74674.0  74674.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         83.0     83.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      84944.0  84944.0      3.9  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       129       8788.0     68.1      0.4  	for variavel in corners2:
    39       128      23648.0    184.8      1.1  		array=np.array([variavel])
    40       128       8103.0     63.3      0.4  		matriz2.append(array)
    41         1       2837.0   2837.0      0.1  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      48333.0  48333.0      2.2  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       4973.0   4973.0      0.2  	matches = bf.match(des1,des2)

