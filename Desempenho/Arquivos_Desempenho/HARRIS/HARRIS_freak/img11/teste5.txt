Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.074 MiB   49.074 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   50.027 MiB    0.953 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.145 MiB    0.117 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.379 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.590 MiB    1.211 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.980 MiB    0.391 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.164 MiB    0.184 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.164 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.324 MiB    0.160 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.324 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.375 MiB    0.051 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.375 MiB    0.000 MiB   	matriz1=[]
    20   52.375 MiB    0.000 MiB   	for variavel in corners1:
    21   52.375 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.375 MiB    0.000 MiB   		matriz1.append(array)
    23   52.438 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.855 MiB    8.418 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.914 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.496 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.816 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.137 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.137 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.137 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.398 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.719 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.719 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.719 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.719 MiB    0.000 MiB   	matriz2=[]
    38   66.723 MiB    0.000 MiB   	for variavel in corners2:
    39   66.723 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.723 MiB    0.000 MiB   		matriz2.append(array)
    41   66.727 MiB    0.004 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.730 MiB    0.004 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   67.086 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.18748 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17220.0  17220.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        357.0    357.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3965.0   3965.0      0.2  	imagem1 = np.float32(img1)
    12         1      75265.0  75265.0      3.4  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12328.0  12328.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12661.0  12661.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5186.0   5186.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11813.0  11813.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         91.0     91.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21144.0  21144.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         57.0     57.0      0.0  	matriz1=[]
    20        47       3128.0     66.6      0.1  	for variavel in corners1:
    21        46       9147.0    198.8      0.4  		array=np.array([variavel])
    22        46       4127.0     89.7      0.2  		matriz1.append(array)
    23         1       1117.0   1117.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847316.0 847316.0     38.7  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        267.0    267.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      76425.0  76425.0      3.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26660.0  26660.0      1.2  	imagem2 = np.float32(img2)
    30         1     578870.0 578870.0     26.5  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97855.0  97855.0      4.5  	dst2 = cv2.dilate(dst2,None)
    32         1      85281.0  85281.0      3.9  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      37181.0  37181.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76081.0  76081.0      3.5  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         84.0     84.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      88697.0  88697.0      4.1  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       129       8321.0     64.5      0.4  	for variavel in corners2:
    39       128      20893.0    163.2      1.0  		array=np.array([variavel])
    40       128       8061.0     63.0      0.4  		matriz2.append(array)
    41         1       2861.0   2861.0      0.1  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      50147.0  50147.0      2.3  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       4817.0   4817.0      0.2  	matches = bf.match(des1,des2)

