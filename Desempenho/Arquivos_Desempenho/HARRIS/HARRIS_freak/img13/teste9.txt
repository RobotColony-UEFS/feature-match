Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.043 MiB   49.043 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   50.012 MiB    0.969 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.133 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.367 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.578 MiB    1.211 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.973 MiB    0.395 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.148 MiB    0.176 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.148 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.316 MiB    0.168 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.316 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.371 MiB    0.055 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.371 MiB    0.000 MiB   	matriz1=[]
    20   52.371 MiB    0.000 MiB   	for variavel in corners1:
    21   52.371 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.371 MiB    0.000 MiB   		matriz1.append(array)
    23   52.434 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.855 MiB    8.422 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.914 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.496 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.816 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.137 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.137 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.137 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.398 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.719 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.719 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.719 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.719 MiB    0.000 MiB   	matriz2=[]
    38   66.723 MiB    0.000 MiB   	for variavel in corners2:
    39   66.723 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.723 MiB    0.000 MiB   		matriz2.append(array)
    41   66.730 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.738 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   67.090 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.24236 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      18956.0  18956.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        344.0    344.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3998.0   3998.0      0.2  	imagem1 = np.float32(img1)
    12         1      74601.0  74601.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13620.0  13620.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12764.0  12764.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5027.0   5027.0      0.2  	dst1 = np.uint8(dst1)
    16         1      13015.0  13015.0      0.6  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         82.0     82.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21119.0  21119.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         58.0     58.0      0.0  	matriz1=[]
    20        47       3015.0     64.1      0.1  	for variavel in corners1:
    21        46       8038.0    174.7      0.4  		array=np.array([variavel])
    22        46       2869.0     62.4      0.1  		matriz1.append(array)
    23         1       1300.0   1300.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     850856.0 850856.0     37.9  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        274.0    274.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80195.0  80195.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      27196.0  27196.0      1.2  	imagem2 = np.float32(img2)
    30         1     576862.0 576862.0     25.7  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97293.0  97293.0      4.3  	dst2 = cv2.dilate(dst2,None)
    32         1      83381.0  83381.0      3.7  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39235.0  39235.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76657.0  76657.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         82.0     82.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     113197.0 113197.0      5.0  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         56.0     56.0      0.0  	matriz2=[]
    38       180      11646.0     64.7      0.5  	for variavel in corners2:
    39       179      30502.0    170.4      1.4  		array=np.array([variavel])
    40       179      11234.0     62.8      0.5  		matriz2.append(array)
    41         1       4941.0   4941.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      53729.0  53729.0      2.4  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       6222.0   6222.0      0.3  	matches = bf.match(des1,des2)

