Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.023 MiB   49.023 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.930 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.051 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.285 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.633 MiB    1.348 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   52.023 MiB    0.391 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.324 MiB    0.301 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.324 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.512 MiB    0.188 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.512 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.512 MiB    0.000 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.512 MiB    0.000 MiB   	matriz1=[]
    20   52.512 MiB    0.000 MiB   	for variavel in corners1:
    21   52.512 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.512 MiB    0.000 MiB   		matriz1.append(array)
    23   52.516 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   61.004 MiB    8.488 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   61.062 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.645 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.965 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.285 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.285 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.285 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.547 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.867 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.867 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.867 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.867 MiB    0.000 MiB   	matriz2=[]
    38   66.871 MiB    0.000 MiB   	for variavel in corners2:
    39   66.871 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.871 MiB    0.000 MiB   		matriz2.append(array)
    41   66.879 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.887 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   67.223 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.22492 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      19147.0  19147.0      0.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        336.0    336.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4039.0   4039.0      0.2  	imagem1 = np.float32(img1)
    12         1      74124.0  74124.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12972.0  12972.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12992.0  12992.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5095.0   5095.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11660.0  11660.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      22743.0  22743.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         58.0     58.0      0.0  	matriz1=[]
    20        47       3150.0     67.0      0.1  	for variavel in corners1:
    21        46       7720.0    167.8      0.3  		array=np.array([variavel])
    22        46       2971.0     64.6      0.1  		matriz1.append(array)
    23         1       1247.0   1247.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     847609.0 847609.0     38.1  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        272.0    272.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      79649.0  79649.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      27732.0  27732.0      1.2  	imagem2 = np.float32(img2)
    30         1     576874.0 576874.0     25.9  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96869.0  96869.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      84670.0  84670.0      3.8  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38261.0  38261.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76736.0  76736.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         86.0     86.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      99477.0  99477.0      4.5  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         59.0     59.0      0.0  	matriz2=[]
    38       179      11428.0     63.8      0.5  	for variavel in corners2:
    39       178      29950.0    168.3      1.3  		array=np.array([variavel])
    40       178      12195.0     68.5      0.5  		matriz2.append(array)
    41         1       3792.0   3792.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      54512.0  54512.0      2.5  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       6411.0   6411.0      0.3  	matches = bf.match(des1,des2)

