Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.926 MiB   48.926 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.809 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.934 MiB    0.125 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.168 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.520 MiB    1.352 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.906 MiB    0.387 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.145 MiB    0.238 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.145 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.270 MiB    0.125 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.270 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.270 MiB    0.000 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.270 MiB    0.000 MiB   	matriz1=[]
    20   52.270 MiB    0.000 MiB   	for variavel in corners1:
    21   52.270 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.270 MiB    0.000 MiB   		matriz1.append(array)
    23   52.273 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.758 MiB    8.484 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.816 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.398 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.719 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.039 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.039 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.039 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.301 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.621 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.621 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.621 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.621 MiB    0.000 MiB   	matriz2=[]
    38   66.629 MiB    0.000 MiB   	for variavel in corners2:
    39   66.629 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.629 MiB    0.000 MiB   		matriz2.append(array)
    41   66.637 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.645 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.980 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.26247 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      16922.0  16922.0      0.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        357.0    357.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4012.0   4012.0      0.2  	imagem1 = np.float32(img1)
    12         1      75669.0  75669.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13114.0  13114.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12443.0  12443.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5116.0   5116.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11558.0  11558.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         89.0     89.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21805.0  21805.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         99.0     99.0      0.0  	matriz1=[]
    20        47       3116.0     66.3      0.1  	for variavel in corners1:
    21        46       7859.0    170.8      0.3  		array=np.array([variavel])
    22        46       3556.0     77.3      0.2  		matriz1.append(array)
    23         1       1266.0   1266.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     846313.0 846313.0     37.4  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        395.0    395.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      81068.0  81068.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26780.0  26780.0      1.2  	imagem2 = np.float32(img2)
    30         1     577156.0 577156.0     25.5  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97450.0  97450.0      4.3  	dst2 = cv2.dilate(dst2,None)
    32         1      84247.0  84247.0      3.7  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      37960.0  37960.0      1.7  	dst2 = np.uint8(dst2)
    34         1      77062.0  77062.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         78.0     78.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     113551.0 113551.0      5.0  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       226      14911.0     66.0      0.7  	for variavel in corners2:
    39       225      38844.0    172.6      1.7  		array=np.array([variavel])
    40       225      13990.0     62.2      0.6  		matriz2.append(array)
    41         1       4957.0   4957.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      62187.0  62187.0      2.7  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       8482.0   8482.0      0.4  	matches = bf.match(des1,des2)

