Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   49.098 MiB   49.098 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.914 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   50.078 MiB    0.164 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.312 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.594 MiB    1.281 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.973 MiB    0.379 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.156 MiB    0.184 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.156 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.258 MiB    0.102 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.258 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.297 MiB    0.039 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.297 MiB    0.000 MiB   	matriz1=[]
    20   52.297 MiB    0.000 MiB   	for variavel in corners1:
    21   52.297 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.297 MiB    0.000 MiB   		matriz1.append(array)
    23   52.301 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.660 MiB    8.359 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.781 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.363 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.684 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.004 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.004 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.004 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.266 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.586 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.586 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.586 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.586 MiB    0.000 MiB   	matriz2=[]
    38   66.594 MiB    0.000 MiB   	for variavel in corners2:
    39   66.594 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.594 MiB    0.000 MiB   		matriz2.append(array)
    41   66.605 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.613 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.898 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.35704 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      18468.0  18468.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        354.0    354.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3814.0   3814.0      0.2  	imagem1 = np.float32(img1)
    12         1      74618.0  74618.0      3.2  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      12923.0  12923.0      0.5  	dst1 = cv2.dilate(dst1,None)
    14         1      12841.0  12841.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       6446.0   6446.0      0.3  	dst1 = np.uint8(dst1)
    16         1      11578.0  11578.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         89.0     89.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21183.0  21183.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         59.0     59.0      0.0  	matriz1=[]
    20        47       3299.0     70.2      0.1  	for variavel in corners1:
    21        46       7343.0    159.6      0.3  		array=np.array([variavel])
    22        46       2870.0     62.4      0.1  		matriz1.append(array)
    23         1       1083.0   1083.0      0.0  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     849543.0 849543.0     36.0  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        272.0    272.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      79055.0  79055.0      3.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      28006.0  28006.0      1.2  	imagem2 = np.float32(img2)
    30         1     576663.0 576663.0     24.5  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97542.0  97542.0      4.1  	dst2 = cv2.dilate(dst2,None)
    32         1      85552.0  85552.0      3.6  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39411.0  39411.0      1.7  	dst2 = np.uint8(dst2)
    34         1      75752.0  75752.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         81.0     81.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     187896.0 187896.0      8.0  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         60.0     60.0      0.0  	matriz2=[]
    38       273      18086.0     66.2      0.8  	for variavel in corners2:
    39       272      45415.0    167.0      1.9  		array=np.array([variavel])
    40       272      17551.0     64.5      0.7  		matriz2.append(array)
    41         1       5668.0   5668.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      64022.0  64022.0      2.7  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       9502.0   9502.0      0.4  	matches = bf.match(des1,des2)

