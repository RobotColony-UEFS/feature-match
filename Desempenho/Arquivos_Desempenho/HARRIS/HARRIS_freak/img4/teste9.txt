Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.867 MiB   48.867 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.840 MiB    0.973 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.961 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.195 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.516 MiB    1.320 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.852 MiB    0.336 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.027 MiB    0.176 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.027 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.203 MiB    0.176 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.203 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.262 MiB    0.059 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.262 MiB    0.000 MiB   	matriz1=[]
    20   52.262 MiB    0.000 MiB   	for variavel in corners1:
    21   52.262 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.262 MiB    0.000 MiB   		matriz1.append(array)
    23   52.324 MiB    0.062 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.684 MiB    8.359 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.742 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.324 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.645 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.965 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.965 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.965 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.227 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.547 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.547 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.547 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.547 MiB    0.000 MiB   	matriz2=[]
    38   66.555 MiB    0.000 MiB   	for variavel in corners2:
    39   66.555 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.555 MiB    0.000 MiB   		matriz2.append(array)
    41   66.566 MiB    0.012 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.574 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.984 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.39933 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17314.0  17314.0      0.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        351.0    351.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       4113.0   4113.0      0.2  	imagem1 = np.float32(img1)
    12         1      76042.0  76042.0      3.2  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13134.0  13134.0      0.5  	dst1 = cv2.dilate(dst1,None)
    14         1      12427.0  12427.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       6823.0   6823.0      0.3  	dst1 = np.uint8(dst1)
    16         1      12072.0  12072.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         92.0     92.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21609.0  21609.0      0.9  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         61.0     61.0      0.0  	matriz1=[]
    20        47       3184.0     67.7      0.1  	for variavel in corners1:
    21        46       7678.0    166.9      0.3  		array=np.array([variavel])
    22        46       3005.0     65.3      0.1  		matriz1.append(array)
    23         1       1707.0   1707.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     845603.0 845603.0     35.2  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        283.0    283.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      80360.0  80360.0      3.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      28847.0  28847.0      1.2  	imagem2 = np.float32(img2)
    30         1     625861.0 625861.0     26.1  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      96459.0  96459.0      4.0  	dst2 = cv2.dilate(dst2,None)
    32         1      84172.0  84172.0      3.5  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      38181.0  38181.0      1.6  	dst2 = np.uint8(dst2)
    34         1      77327.0  77327.0      3.2  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         83.0     83.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1     180521.0 180521.0      7.5  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         65.0     65.0      0.0  	matriz2=[]
    38       273      18510.0     67.8      0.8  	for variavel in corners2:
    39       272      47745.0    175.5      2.0  		array=np.array([variavel])
    40       272      18565.0     68.3      0.8  		matriz2.append(array)
    41         1       5664.0   5664.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      62897.0  62897.0      2.6  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       8580.0   8580.0      0.4  	matches = bf.match(des1,des2)

