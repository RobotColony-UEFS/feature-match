Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.707 MiB   48.707 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.516 MiB    0.809 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.637 MiB    0.121 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   49.871 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.156 MiB    1.285 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.633 MiB    0.477 MiB   	dst1 = cv2.dilate(dst1,None)
    14   51.820 MiB    0.188 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   51.820 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   51.910 MiB    0.090 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   51.910 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   51.938 MiB    0.027 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   51.938 MiB    0.000 MiB   	matriz1=[]
    20   51.938 MiB    0.000 MiB   	for variavel in corners1:
    21   51.938 MiB    0.000 MiB   		array=np.array([variavel])
    22   51.938 MiB    0.000 MiB   		matriz1.append(array)
    23   51.977 MiB    0.039 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.531 MiB    8.555 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.590 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.172 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.492 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   65.812 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   65.812 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   65.812 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.074 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.395 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.395 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.395 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.395 MiB    0.000 MiB   	matriz2=[]
    38   66.398 MiB    0.000 MiB   	for variavel in corners2:
    39   66.398 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.398 MiB    0.000 MiB   		matriz2.append(array)
    41   66.406 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.414 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.711 MiB    0.297 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.27227 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17236.0  17236.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        371.0    371.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3852.0   3852.0      0.2  	imagem1 = np.float32(img1)
    12         1      76132.0  76132.0      3.4  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      13029.0  13029.0      0.6  	dst1 = cv2.dilate(dst1,None)
    14         1      12458.0  12458.0      0.5  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5169.0   5169.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11756.0  11756.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      22933.0  22933.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1        157.0    157.0      0.0  	matriz1=[]
    20        47       3248.0     69.1      0.1  	for variavel in corners1:
    21        46       7336.0    159.5      0.3  		array=np.array([variavel])
    22        46       2982.0     64.8      0.1  		matriz1.append(array)
    23         1       1133.0   1133.0      0.0  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     846689.0 846689.0     37.3  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        279.0    279.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      81749.0  81749.0      3.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26604.0  26604.0      1.2  	imagem2 = np.float32(img2)
    30         1     627093.0 627093.0     27.6  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      99318.0  99318.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      83177.0  83177.0      3.7  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39037.0  39037.0      1.7  	dst2 = np.uint8(dst2)
    34         1      76645.0  76645.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         78.0     78.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      92167.0  92167.0      4.1  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       184      12055.0     65.5      0.5  	for variavel in corners2:
    39       183      30903.0    168.9      1.4  		array=np.array([variavel])
    40       183      11683.0     63.8      0.5  		matriz2.append(array)
    41         1       3925.0   3925.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      56314.0  56314.0      2.5  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       6615.0   6615.0      0.3  	matches = bf.match(des1,des2)

