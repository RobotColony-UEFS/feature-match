Filename: HARRIS_freak.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   48.941 MiB   48.941 MiB   @profile
     7                             def HARRIS_freak(img):	
     8   49.824 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9   49.949 MiB    0.125 MiB   	freak = cv2.xfeatures2d.FREAK_create()
    10                             
    11   50.184 MiB    0.234 MiB   	imagem1 = np.float32(img1)
    12   51.535 MiB    1.352 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13   51.922 MiB    0.387 MiB   	dst1 = cv2.dilate(dst1,None)
    14   52.160 MiB    0.238 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15   52.160 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    16   52.285 MiB    0.125 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17   52.285 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18   52.285 MiB    0.000 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19   52.285 MiB    0.000 MiB   	matriz1=[]
    20   52.285 MiB    0.000 MiB   	for variavel in corners1:
    21   52.285 MiB    0.000 MiB   		array=np.array([variavel])
    22   52.285 MiB    0.000 MiB   		matriz1.append(array)
    23   52.289 MiB    0.004 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    24   60.773 MiB    8.484 MiB   	kp1, des1 = freak.compute(img1, kp1)
    25                             
    26   60.832 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   61.414 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29   63.734 MiB    2.320 MiB   	imagem2 = np.float32(img2)
    30   66.055 MiB    2.320 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31   66.055 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32   66.055 MiB    0.000 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33   64.316 MiB    0.000 MiB   	dst2 = np.uint8(dst2)
    34   66.637 MiB    2.320 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35   66.637 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36   66.637 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37   66.637 MiB    0.000 MiB   	matriz2=[]
    38   66.641 MiB    0.000 MiB   	for variavel in corners2:
    39   66.641 MiB    0.004 MiB   		array=np.array([variavel])
    40   66.641 MiB    0.000 MiB   		matriz2.append(array)
    41   66.648 MiB    0.008 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42   66.656 MiB    0.008 MiB   	kp2, des2 = freak.compute(img2, kp2)
    43                             
    44   66.992 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_freak.py.lprof
Timer unit: 1e-06 s

Total time: 2.21143 s
File: HARRIS_freak.py
Function: HARRIS_freak at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def HARRIS_freak(img):	
     8         1      17203.0  17203.0      0.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9         1        432.0    432.0      0.0  	freak = cv2.xfeatures2d.FREAK_create()
    10                                           
    11         1       3961.0   3961.0      0.2  	imagem1 = np.float32(img1)
    12         1      71991.0  71991.0      3.3  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    13         1      15569.0  15569.0      0.7  	dst1 = cv2.dilate(dst1,None)
    14         1      12841.0  12841.0      0.6  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    15         1       5132.0   5132.0      0.2  	dst1 = np.uint8(dst1)
    16         1      11566.0  11566.0      0.5  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    17         1         88.0     88.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    18         1      21126.0  21126.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    19         1         56.0     56.0      0.0  	matriz1=[]
    20        47       3069.0     65.3      0.1  	for variavel in corners1:
    21        46       7384.0    160.5      0.3  		array=np.array([variavel])
    22        46       2853.0     62.0      0.1  		matriz1.append(array)
    23         1       1160.0   1160.0      0.1  	kp1=cv2.KeyPoint_convert(matriz1)
    24         1     846186.0 846186.0     38.3  	kp1, des1 = freak.compute(img1, kp1)
    25                                           
    26         1        284.0    284.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1      81696.0  81696.0      3.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    29         1      26842.0  26842.0      1.2  	imagem2 = np.float32(img2)
    30         1     569938.0 569938.0     25.8  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      97009.0  97009.0      4.4  	dst2 = cv2.dilate(dst2,None)
    32         1      84837.0  84837.0      3.8  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      39690.0  39690.0      1.8  	dst2 = np.uint8(dst2)
    34         1      74474.0  74474.0      3.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         80.0     80.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      93273.0  93273.0      4.2  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1         58.0     58.0      0.0  	matriz2=[]
    38       184      13217.0     71.8      0.6  	for variavel in corners2:
    39       183      29899.0    163.4      1.4  		array=np.array([variavel])
    40       183      12050.0     65.8      0.5  		matriz2.append(array)
    41         1       3927.0   3927.0      0.2  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      57098.0  57098.0      2.6  	kp2, des2 = freak.compute(img2, kp2)
    43                                           
    44         1       6437.0   6437.0      0.3  	matches = bf.match(des1,des2)

