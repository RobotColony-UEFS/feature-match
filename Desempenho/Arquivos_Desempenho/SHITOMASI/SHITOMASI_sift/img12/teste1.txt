Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.586 MiB   48.586 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.492 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.766 MiB    1.273 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.766 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.832 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.957 MiB    0.125 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.020 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.258 MiB    4.238 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.258 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.258 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.258 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.258 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.262 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.539 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.52218 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17702.0  17702.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115764.0 115764.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       4198.0   4198.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        323.0    323.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     243486.0 243486.0      6.9  	kp1, des1 = sift.compute(img1, kp1)
    17         1      71130.0  71130.0      2.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     888513.0 888513.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        227.0    227.0      0.0  	corners2 = np.int0(corners22)
    21         1       3775.0   3775.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2140063.0 2140063.0     60.8  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      36539.0  36539.0      1.0  	matches = bf.match(des1,des2)

