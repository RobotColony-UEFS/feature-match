Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.762 MiB   48.762 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.602 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.820 MiB    1.219 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.820 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.914 MiB    0.094 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.977 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.039 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.215 MiB    4.176 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.215 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.215 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.215 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.215 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.219 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.383 MiB    0.164 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.54797 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      16846.0  16846.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121275.0 121275.0      3.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        224.0    224.0      0.0  	corners1 = np.int0(corners11)
    12         1       5021.0   5021.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        327.0    327.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        337.0    337.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     241067.0 241067.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      73954.0  73954.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     896272.0 896272.0     25.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        274.0    274.0      0.0  	corners2 = np.int0(corners22)
    21         1       3884.0   3884.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2153573.0 2153573.0     60.7  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      34920.0  34920.0      1.0  	matches = bf.match(des1,des2)

