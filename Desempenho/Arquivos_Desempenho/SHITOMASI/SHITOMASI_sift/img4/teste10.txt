Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.098 MiB   49.098 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.914 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.148 MiB    1.234 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.148 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.258 MiB    0.109 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.379 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.504 MiB    0.125 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   55.434 MiB    3.930 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   55.434 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   55.434 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   55.434 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   55.434 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   55.438 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.723 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.5314 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17257.0  17257.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116869.0 116869.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       3909.0   3909.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        231.0    231.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     242921.0 242921.0      6.9  	kp1, des1 = sift.compute(img1, kp1)
    17         1      73657.0  73657.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     894739.0 894739.0     25.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        222.0    222.0      0.0  	corners2 = np.int0(corners22)
    21         1       3546.0   3546.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2142499.0 2142499.0     60.7  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      35097.0  35097.0      1.0  	matches = bf.match(des1,des2)

