Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.758 MiB   48.758 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.578 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.809 MiB    1.230 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.809 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.914 MiB    0.105 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.035 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   51.098 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   54.980 MiB    3.883 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   54.980 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   54.980 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   54.980 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   54.980 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   54.984 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.332 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.53792 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      17220.0  17220.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119119.0 119119.0      3.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        222.0    222.0      0.0  	corners1 = np.int0(corners11)
    12         1       4901.0   4901.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        316.0    316.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     240800.0 240800.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      76684.0  76684.0      2.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     892708.0 892708.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        221.0    221.0      0.0  	corners2 = np.int0(corners22)
    21         1       3610.0   3610.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2145473.0 2145473.0     60.6  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      36419.0  36419.0      1.0  	matches = bf.match(des1,des2)

