Filename: SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.676 MiB   48.676 MiB   @profile
     8                             def SHITOMASI_sift(img):
     9   49.434 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.715 MiB    1.281 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.715 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.816 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.879 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15   50.941 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16   54.895 MiB    3.953 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17   54.895 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   54.895 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   54.895 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   54.895 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   54.898 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    23                             
    24   55.176 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 3.53468 s
File: SHITOMASI_sift.py
Function: SHITOMASI_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_sift(img):
     9         1      18971.0  18971.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115901.0 115901.0      3.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        215.0    215.0      0.0  	corners1 = np.int0(corners11)
    12         1       3987.0   3987.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        314.0    314.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15         1        335.0    335.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    16         1     241753.0 241753.0      6.8  	kp1, des1 = sift.compute(img1, kp1)
    17         1      75540.0  75540.0      2.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     892035.0 892035.0     25.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        222.0    222.0      0.0  	corners2 = np.int0(corners22)
    21         1       3990.0   3990.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1    2142548.0 2142548.0     60.6  	kp2, des2 = sift.compute(img2, kp2)
    23                                           
    24         1      38868.0  38868.0      1.1  	matches = bf.match(des1,des2)

