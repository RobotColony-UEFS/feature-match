Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.930 MiB   48.930 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.863 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.773 MiB    1.910 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.773 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.840 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.949 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   52.012 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.348 MiB    0.336 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.375 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.438 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.438 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.438 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.441 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.773 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.2434 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18285.0  18285.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119361.0 119361.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       3716.0   3716.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        296.0    296.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13758.0  13758.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      79933.0  79933.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     951450.0 951450.0     76.5  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        237.0    237.0      0.0  	corners2 = np.int0(corners22)
    21         1       3461.0   3461.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      47719.0  47719.0      3.8  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4723.0   4723.0      0.4  	matches = bf.match(des1,des2)

