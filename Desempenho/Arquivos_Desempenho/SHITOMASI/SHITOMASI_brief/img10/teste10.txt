Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.785 MiB   48.785 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.605 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.383 MiB    1.777 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.383 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.488 MiB    0.105 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.598 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.660 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.961 MiB    0.301 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   51.988 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.051 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.051 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.051 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.055 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.340 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23624 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18013.0  18013.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120683.0 120683.0      9.8  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       4064.0   4064.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        288.0    288.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        327.0    327.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13716.0  13716.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80671.0  80671.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     940009.0 940009.0     76.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        225.0    225.0      0.0  	corners2 = np.int0(corners22)
    21         1       4639.0   4639.0      0.4  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48750.0  48750.0      3.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4630.0   4630.0      0.4  	matches = bf.match(des1,des2)

