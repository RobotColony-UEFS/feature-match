Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.016 MiB   49.016 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   50.004 MiB    0.988 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.734 MiB    1.730 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.734 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.859 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.965 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   52.027 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.359 MiB    0.332 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.387 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.449 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.449 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.449 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.453 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.801 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23467 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18311.0  18311.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119967.0 119967.0      9.7  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       3750.0   3750.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        408.0    408.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        247.0    247.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14390.0  14390.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      82039.0  82039.0      6.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     937437.0 937437.0     75.9  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        239.0    239.0      0.0  	corners2 = np.int0(corners22)
    21         1       3692.0   3692.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      49384.0  49384.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4577.0   4577.0      0.4  	matches = bf.match(des1,des2)

