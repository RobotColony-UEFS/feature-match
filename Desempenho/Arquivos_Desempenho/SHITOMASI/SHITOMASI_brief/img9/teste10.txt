Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.828 MiB   48.828 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.742 MiB    0.914 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.594 MiB    1.852 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.594 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.660 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.777 MiB    0.117 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.840 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.180 MiB    0.340 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.207 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.270 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.270 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.270 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.273 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.605 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.24623 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17290.0  17290.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119535.0 119535.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       4539.0   4539.0      0.4  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        281.0    281.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        282.0    282.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      15419.0  15419.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      81859.0  81859.0      6.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     952664.0 952664.0     76.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        228.0    228.0      0.0  	corners2 = np.int0(corners22)
    21         1       3517.0   3517.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      46191.0  46191.0      3.7  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4199.0   4199.0      0.3  	matches = bf.match(des1,des2)

