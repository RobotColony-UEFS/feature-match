Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.746 MiB   48.746 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.562 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.789 MiB    1.227 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.789 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.895 MiB    0.105 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.004 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.066 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.578 MiB    0.512 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.160 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.160 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.160 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.160 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.164 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.449 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23497 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18005.0  18005.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115805.0 115805.0      9.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        342.0    342.0      0.0  	corners1 = np.int0(corners11)
    12         1       3967.0   3967.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        420.0    420.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        340.0    340.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13684.0  13684.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80834.0  80834.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     942032.0 942032.0     76.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        229.0    229.0      0.0  	corners2 = np.int0(corners22)
    21         1       3671.0   3671.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50981.0  50981.0      4.1  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4660.0   4660.0      0.4  	matches = bf.match(des1,des2)

