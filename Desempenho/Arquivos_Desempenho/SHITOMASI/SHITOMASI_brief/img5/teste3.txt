Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.516 MiB   48.516 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.426 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.246 MiB    1.820 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.246 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.312 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.434 MiB    0.121 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.496 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.840 MiB    0.344 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   51.867 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.984 MiB    0.117 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.984 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.984 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.988 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.324 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22241 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17332.0  17332.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116648.0 116648.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        231.0    231.0      0.0  	corners1 = np.int0(corners11)
    12         1       3932.0   3932.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        297.0    297.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        239.0    239.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13689.0  13689.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      78708.0  78708.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     934637.0 934637.0     76.5  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        232.0    232.0      0.0  	corners2 = np.int0(corners22)
    21         1       3643.0   3643.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48550.0  48550.0      4.0  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4271.0   4271.0      0.3  	matches = bf.match(des1,des2)

