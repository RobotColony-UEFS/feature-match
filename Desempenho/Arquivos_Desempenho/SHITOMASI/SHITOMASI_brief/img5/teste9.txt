Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.605 MiB   48.605 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.375 MiB    0.770 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.137 MiB    1.762 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.137 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.234 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.340 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.402 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.930 MiB    0.527 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   51.957 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.066 MiB    0.109 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.066 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.066 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.070 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.301 MiB    0.230 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22107 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17281.0  17281.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     117642.0 117642.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        512.0    512.0      0.0  	corners1 = np.int0(corners11)
    12         1       3429.0   3429.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        296.0    296.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14881.0  14881.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      74917.0  74917.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     936654.0 936654.0     76.7  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        237.0    237.0      0.0  	corners2 = np.int0(corners22)
    21         1       3408.0   3408.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      47212.0  47212.0      3.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4363.0   4363.0      0.4  	matches = bf.match(des1,des2)

