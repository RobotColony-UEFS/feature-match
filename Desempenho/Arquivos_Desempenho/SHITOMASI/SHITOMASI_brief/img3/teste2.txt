Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.629 MiB   48.629 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.465 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.168 MiB    1.703 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.168 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.266 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.316 MiB    0.051 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.379 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.980 MiB    0.602 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.008 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.070 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.070 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.070 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.074 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.367 MiB    0.293 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23078 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17032.0  17032.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116110.0 116110.0      9.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        227.0    227.0      0.0  	corners1 = np.int0(corners11)
    12         1       3891.0   3891.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        293.0    293.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        324.0    324.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13863.0  13863.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      84215.0  84215.0      6.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     934886.0 934886.0     76.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        228.0    228.0      0.0  	corners2 = np.int0(corners22)
    21         1       3690.0   3690.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      51491.0  51491.0      4.2  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4532.0   4532.0      0.4  	matches = bf.match(des1,des2)

