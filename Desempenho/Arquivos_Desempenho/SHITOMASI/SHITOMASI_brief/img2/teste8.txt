Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.535 MiB   48.535 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.441 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.711 MiB    1.270 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.711 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.777 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.898 MiB    0.121 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.961 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.516 MiB    0.555 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.098 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.152 MiB    0.055 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.152 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.152 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.156 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.492 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.23247 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17165.0  17165.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120781.0 120781.0      9.8  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        223.0    223.0      0.0  	corners1 = np.int0(corners11)
    12         1       3717.0   3717.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        416.0    416.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        249.0    249.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      15817.0  15817.0      1.3  	kp1, des1 = brief.compute(img1, kp1)
    17         1      78884.0  78884.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     938371.0 938371.0     76.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        356.0    356.0      0.0  	corners2 = np.int0(corners22)
    21         1       3560.0   3560.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      48262.0  48262.0      3.9  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4672.0   4672.0      0.4  	matches = bf.match(des1,des2)

