Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.086 MiB   49.086 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   50.070 MiB    0.984 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.250 MiB    1.180 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.250 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.375 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.480 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.543 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.086 MiB    0.543 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.668 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.668 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.668 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.668 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.672 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   53.020 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.25371 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17107.0  17107.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120532.0 120532.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        227.0    227.0      0.0  	corners1 = np.int0(corners11)
    12         1       3980.0   3980.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        296.0    296.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        333.0    333.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14607.0  14607.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80283.0  80283.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     950996.0 950996.0     75.9  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3707.0   3707.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      55587.0  55587.0      4.4  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       5820.0   5820.0      0.5  	matches = bf.match(des1,des2)

