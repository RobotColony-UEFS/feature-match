Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.723 MiB   48.723 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.477 MiB    0.754 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.305 MiB    1.828 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.305 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.406 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.508 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.570 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.996 MiB    0.426 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.023 MiB    0.027 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.086 MiB    0.062 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.086 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.086 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.090 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.367 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.2447 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17294.0  17294.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119564.0 119564.0      9.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        224.0    224.0      0.0  	corners1 = np.int0(corners11)
    12         1       3832.0   3832.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        288.0    288.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        324.0    324.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      15236.0  15236.0      1.2  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80197.0  80197.0      6.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     952197.0 952197.0     76.5  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        226.0    226.0      0.0  	corners2 = np.int0(corners22)
    21         1       3871.0   3871.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      46966.0  46966.0      3.8  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4479.0   4479.0      0.4  	matches = bf.match(des1,des2)

