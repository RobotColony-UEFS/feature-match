Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.543 MiB   48.543 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   49.449 MiB    0.906 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.719 MiB    1.270 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.719 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.785 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.906 MiB    0.121 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   50.969 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.523 MiB    0.555 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.105 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.160 MiB    0.055 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.160 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.160 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.164 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.500 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.24724 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      17164.0  17164.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120809.0 120809.0      9.7  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        354.0    354.0      0.0  	corners1 = np.int0(corners11)
    12         1       3944.0   3944.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        207.0    207.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        233.0    233.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      14311.0  14311.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80792.0  80792.0      6.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     951704.0 951704.0     76.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3662.0   3662.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      47973.0  47973.0      3.8  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       5851.0   5851.0      0.5  	matches = bf.match(des1,des2)

