Filename: SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.055 MiB   49.055 MiB   @profile
     8                             def SHITOMASI_brief(img):
     9   50.043 MiB    0.988 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.219 MiB    1.176 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.219 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.344 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.449 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   51.512 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   52.055 MiB    0.543 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   52.637 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.637 MiB    0.000 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.637 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.637 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.641 MiB    0.004 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   52.988 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.22806 s
File: SHITOMASI_brief.py
Function: SHITOMASI_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brief(img):
     9         1      18179.0  18179.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115539.0 115539.0      9.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        225.0    225.0      0.0  	corners1 = np.int0(corners11)
    12         1       4248.0   4248.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        398.0    398.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1        244.0    244.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      13624.0  13624.0      1.1  	kp1, des1 = brief.compute(img1, kp1)
    17         1      80548.0  80548.0      6.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     935148.0 935148.0     76.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        233.0    233.0      0.0  	corners2 = np.int0(corners22)
    21         1       3916.0   3916.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50883.0  50883.0      4.1  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       4871.0   4871.0      0.4  	matches = bf.match(des1,des2)

