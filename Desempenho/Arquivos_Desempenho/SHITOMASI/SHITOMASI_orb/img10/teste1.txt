Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.816 MiB   48.816 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.633 MiB    0.816 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.863 MiB    1.230 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.863 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.969 MiB    0.105 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.031 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.094 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.293 MiB    0.199 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.875 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.922 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.922 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.922 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.926 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.211 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.31718 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17978.0  17978.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     121855.0 121855.0      9.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        215.0    215.0      0.0  	corners1 = np.int0(corners11)
    12         1       4011.0   4011.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        214.0    214.0      0.0  	orb = cv2.ORB_create()
    15         1        237.0    237.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17518.0  17518.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      78843.0  78843.0      6.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     937468.0 937468.0     71.2  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        233.0    233.0      0.0  	corners2 = np.int0(corners22)
    21         1       3759.0   3759.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     130858.0 130858.0      9.9  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3988.0   3988.0      0.3  	matches = bf.match(des1,des2)

