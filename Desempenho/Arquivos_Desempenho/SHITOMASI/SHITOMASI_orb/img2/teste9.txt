Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.906 MiB   48.906 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.836 MiB    0.930 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.199 MiB    1.363 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.199 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.266 MiB    0.066 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.387 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.449 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.676 MiB    0.227 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.258 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.305 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.305 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.305 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.309 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.582 MiB    0.273 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.31987 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      18534.0  18534.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     119613.0 119613.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       3901.0   3901.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        209.0    209.0      0.0  	orb = cv2.ORB_create()
    15         1        236.0    236.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17023.0  17023.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      80215.0  80215.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     937930.0 937930.0     71.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        234.0    234.0      0.0  	corners2 = np.int0(corners22)
    21         1       3679.0   3679.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     133424.0 133424.0     10.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4653.0   4653.0      0.4  	matches = bf.match(des1,des2)

