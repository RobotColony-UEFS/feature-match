Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.793 MiB   48.793 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.613 MiB    0.820 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.844 MiB    1.230 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.844 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.949 MiB    0.105 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.012 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.074 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.273 MiB    0.199 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.855 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.898 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.898 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.898 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.902 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.188 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26528 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      18337.0  18337.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120700.0 120700.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        219.0    219.0      0.0  	corners1 = np.int0(corners11)
    12         1       3874.0   3874.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        279.0    279.0      0.0  	orb = cv2.ORB_create()
    15         1        338.0    338.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16656.0  16656.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      79293.0  79293.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     902287.0 902287.0     71.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        225.0    225.0      0.0  	corners2 = np.int0(corners22)
    21         1       3879.0   3879.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     115021.0 115021.0      9.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4173.0   4173.0      0.3  	matches = bf.match(des1,des2)

