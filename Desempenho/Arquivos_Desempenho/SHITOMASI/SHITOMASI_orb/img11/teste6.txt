Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.066 MiB   49.066 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   50.000 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   51.176 MiB    1.176 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   51.176 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   51.297 MiB    0.121 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.359 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.422 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.621 MiB    0.199 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.203 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.250 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.250 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.250 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.254 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.547 MiB    0.293 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.27478 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17304.0  17304.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116902.0 116902.0      9.2  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        218.0    218.0      0.0  	corners1 = np.int0(corners11)
    12         1       4030.0   4030.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        211.0    211.0      0.0  	orb = cv2.ORB_create()
    15         1        234.0    234.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17829.0  17829.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      74978.0  74978.0      5.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     899907.0 899907.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        231.0    231.0      0.0  	corners2 = np.int0(corners22)
    21         1       3771.0   3771.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     134646.0 134646.0     10.6  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4521.0   4521.0      0.4  	matches = bf.match(des1,des2)

