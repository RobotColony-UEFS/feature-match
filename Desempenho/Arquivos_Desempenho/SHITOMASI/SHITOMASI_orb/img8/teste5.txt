Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.742 MiB   48.742 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.582 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.801 MiB    1.219 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.801 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.895 MiB    0.094 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.016 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.078 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.449 MiB    0.371 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   52.031 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.121 MiB    0.090 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.121 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.121 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.125 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.352 MiB    0.227 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.28298 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      16834.0  16834.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116674.0 116674.0      9.1  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        221.0    221.0      0.0  	corners1 = np.int0(corners11)
    12         1       3926.0   3926.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        211.0    211.0      0.0  	orb = cv2.ORB_create()
    15         1        231.0    231.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17546.0  17546.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      79125.0  79125.0      6.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     905861.0 905861.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        229.0    229.0      0.0  	corners2 = np.int0(corners22)
    21         1       3456.0   3456.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     134741.0 134741.0     10.5  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3929.0   3929.0      0.3  	matches = bf.match(des1,des2)

