Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.727 MiB   48.727 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.477 MiB    0.750 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.758 MiB    1.281 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.758 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.859 MiB    0.102 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.980 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   51.043 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.309 MiB    0.266 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.891 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.934 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.934 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.934 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.938 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.215 MiB    0.277 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.26672 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      18120.0  18120.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     120343.0 120343.0      9.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        222.0    222.0      0.0  	corners1 = np.int0(corners11)
    12         1       3883.0   3883.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        210.0    210.0      0.0  	orb = cv2.ORB_create()
    15         1        354.0    354.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      16650.0  16650.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      79978.0  79978.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     902816.0 902816.0     71.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        369.0    369.0      0.0  	corners2 = np.int0(corners22)
    21         1       3559.0   3559.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     115227.0 115227.0      9.1  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4984.0   4984.0      0.4  	matches = bf.match(des1,des2)

