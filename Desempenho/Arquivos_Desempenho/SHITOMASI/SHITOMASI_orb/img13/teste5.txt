Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.617 MiB   48.617 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.613 MiB    0.996 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.844 MiB    1.230 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.844 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.969 MiB    0.125 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   51.031 MiB    0.062 MiB   	orb = cv2.ORB_create()
    15   51.094 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.316 MiB    0.223 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.898 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   51.941 MiB    0.043 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   51.941 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   51.941 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   51.945 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.215 MiB    0.270 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.28018 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17208.0  17208.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     115690.0 115690.0      9.0  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        218.0    218.0      0.0  	corners1 = np.int0(corners11)
    12         1       3921.0   3921.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        358.0    358.0      0.0  	orb = cv2.ORB_create()
    15         1        234.0    234.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      17250.0  17250.0      1.3  	kp1, des1 = orb.compute(img1, kp1)
    17         1      80311.0  80311.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     904436.0 904436.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        233.0    233.0      0.0  	corners2 = np.int0(corners22)
    21         1       5279.0   5279.0      0.4  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     131158.0 131158.0     10.2  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       3884.0   3884.0      0.3  	matches = bf.match(des1,des2)

