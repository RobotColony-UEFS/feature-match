Filename: SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.652 MiB   48.652 MiB   @profile
     8                             def SHITOMASI_orb(img):
     9   49.488 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.707 MiB    1.219 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.707 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.801 MiB    0.094 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   50.922 MiB    0.121 MiB   	orb = cv2.ORB_create()
    15   50.984 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   51.355 MiB    0.371 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17   51.938 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   52.031 MiB    0.094 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   52.031 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   52.031 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   52.035 MiB    0.004 MiB   	kp2, des2 = orb.compute(img2, kp2)
    23                             
    24   52.262 MiB    0.227 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 1.28359 s
File: SHITOMASI_orb.py
Function: SHITOMASI_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_orb(img):
     9         1      17535.0  17535.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     117670.0 117670.0      9.2  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        228.0    228.0      0.0  	corners1 = np.int0(corners11)
    12         1       3957.0   3957.0      0.3  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1        299.0    299.0      0.0  	orb = cv2.ORB_create()
    15         1        234.0    234.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      18588.0  18588.0      1.4  	kp1, des1 = orb.compute(img1, kp1)
    17         1      77864.0  77864.0      6.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     906676.0 906676.0     70.6  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        229.0    229.0      0.0  	corners2 = np.int0(corners22)
    21         1       3873.0   3873.0      0.3  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1     132290.0 132290.0     10.3  	kp2, des2 = orb.compute(img2, kp2)
    23                                           
    24         1       4150.0   4150.0      0.3  	matches = bf.match(des1,des2)

