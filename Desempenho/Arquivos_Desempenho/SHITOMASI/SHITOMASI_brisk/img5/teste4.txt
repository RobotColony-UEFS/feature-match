Filename: SHITOMASI_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.578 MiB   48.578 MiB   @profile
     8                             def SHITOMASI_brisk(img):
     9   49.348 MiB    0.770 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.555 MiB    1.207 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.555 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.652 MiB    0.098 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   95.836 MiB   45.184 MiB   	brisk = cv2.BRISK_create()
    15   95.898 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   96.516 MiB    0.617 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17   97.098 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   97.145 MiB    0.047 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   97.145 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   97.145 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   97.148 MiB    0.004 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    23                             
    24   97.332 MiB    0.184 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.61466 s
File: SHITOMASI_brisk.py
Function: SHITOMASI_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brisk(img):
     9         1      18214.0  18214.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     116239.0 116239.0      1.5  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        214.0    214.0      0.0  	corners1 = np.int0(corners11)
    12         1       3937.0   3937.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1    6365473.0 6365473.0     83.6  	brisk = cv2.BRISK_create()
    15         1        356.0    356.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      22437.0  22437.0      0.3  	kp1, des1 = brisk.compute(img1, kp1)
    17         1      79827.0  79827.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     941611.0 941611.0     12.4  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        226.0    226.0      0.0  	corners2 = np.int0(corners22)
    21         1       3812.0   3812.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      54228.0  54228.0      0.7  	kp2, des2 = brisk.compute(img2, kp2)
    23                                           
    24         1       8087.0   8087.0      0.1  	matches = bf.match(des1,des2)

