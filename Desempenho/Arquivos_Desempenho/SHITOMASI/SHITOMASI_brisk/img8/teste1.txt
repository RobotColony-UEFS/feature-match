Filename: SHITOMASI_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.594 MiB   48.594 MiB   @profile
     8                             def SHITOMASI_brisk(img):
     9   49.492 MiB    0.898 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10   50.707 MiB    1.215 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   50.707 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   50.797 MiB    0.090 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   95.977 MiB   45.180 MiB   	brisk = cv2.BRISK_create()
    15   96.039 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   96.582 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17   97.164 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                             	
    19   97.215 MiB    0.051 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   97.215 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   97.215 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   97.219 MiB    0.004 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    23                             
    24   97.383 MiB    0.164 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 7.63572 s
File: SHITOMASI_brisk.py
Function: SHITOMASI_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def SHITOMASI_brisk(img):
     9         1      17141.0  17141.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10         1     122076.0 122076.0      1.6  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1        226.0    226.0      0.0  	corners1 = np.int0(corners11)
    12         1       4194.0   4194.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1    6381078.0 6381078.0     83.6  	brisk = cv2.BRISK_create()
    15         1        256.0    256.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1      22748.0  22748.0      0.3  	kp1, des1 = brisk.compute(img1, kp1)
    17         1      83918.0  83918.0      1.1  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    18                                           	
    19         1     936030.0 936030.0     12.3  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1        229.0    229.0      0.0  	corners2 = np.int0(corners22)
    21         1       3867.0   3867.0      0.1  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      56043.0  56043.0      0.7  	kp2, des2 = brisk.compute(img2, kp2)
    23                                           
    24         1       7912.0   7912.0      0.1  	matches = bf.match(des1,des2)

