Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.898 MiB   48.898 MiB   @profile
     8                             def STAR_sift(img):
     9   49.934 MiB    1.035 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.051 MiB    0.117 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   50.051 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.113 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.418 MiB    0.305 MiB   	kp1 = star.detect(img1,None)
    16   55.051 MiB    4.633 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.051 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.059 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   55.066 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.465 MiB    0.398 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 10.9361 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17242.0  17242.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        337.0    337.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        176.0    176.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        230.0    230.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     128299.0 128299.0      1.2  	kp1 = star.detect(img1,None)
    16         1     926633.0 926633.0      8.5  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      77329.0  77329.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3274610.0 3274610.0     29.9  	kp2 = star.detect(img2,None)
    21         1    6459278.0 6459278.0     59.1  	kp2, des2 = sift.compute(img2, kp2)
    22         1      51939.0  51939.0      0.5  	matches = bf.match(des1,des2)

