Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.770 MiB   48.770 MiB   @profile
     8                             def STAR_sift(img):
     9   49.613 MiB    0.844 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.672 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.734 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.797 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.254 MiB    0.457 MiB   	kp1 = star.detect(img1,None)
    16   54.863 MiB    4.609 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.863 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   54.871 MiB    0.008 MiB   	kp2 = star.detect(img2,None)
    21   54.879 MiB    0.008 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.164 MiB    0.285 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 11.1916 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      16841.0  16841.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        340.0    340.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1        180.0    180.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        232.0    232.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     130086.0 130086.0      1.2  	kp1 = star.detect(img1,None)
    16         1     928230.0 928230.0      8.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74336.0  74336.0      0.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3221535.0 3221535.0     28.8  	kp2 = star.detect(img2,None)
    21         1    6761781.0 6761781.0     60.4  	kp2, des2 = sift.compute(img2, kp2)
    22         1      58049.0  58049.0      0.5  	matches = bf.match(des1,des2)

