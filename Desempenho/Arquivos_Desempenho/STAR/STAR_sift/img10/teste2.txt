Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.930 MiB   48.930 MiB   @profile
     8                             def STAR_sift(img):
     9   49.898 MiB    0.969 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.957 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   49.957 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.020 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.457 MiB    0.438 MiB   	kp1 = star.detect(img1,None)
    16   55.129 MiB    4.672 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.129 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.133 MiB    0.004 MiB   	kp2 = star.detect(img2,None)
    21   55.137 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.473 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 9.254 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17457.0  17457.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        346.0    346.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         76.0     76.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        329.0    329.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     131548.0 131548.0      1.4  	kp1 = star.detect(img1,None)
    16         1     929303.0 929303.0     10.0  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74948.0  74948.0      0.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3223986.0 3223986.0     34.8  	kp2 = star.detect(img2,None)
    21         1    4838771.0 4838771.0     52.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1      37238.0  37238.0      0.4  	matches = bf.match(des1,des2)

