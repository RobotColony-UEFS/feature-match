Filename: STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.098 MiB   49.098 MiB   @profile
     8                             def STAR_sift(img):
     9   50.090 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.148 MiB    0.059 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    12   50.148 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.211 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   50.582 MiB    0.371 MiB   	kp1 = star.detect(img1,None)
    16   55.355 MiB    4.773 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.355 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   55.359 MiB    0.004 MiB   	kp2 = star.detect(img2,None)
    21   55.363 MiB    0.004 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.699 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 9.15879 s
File: STAR_sift.py
Function: STAR_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def STAR_sift(img):
     9         1      17453.0  17453.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        316.0    316.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    12         1         79.0     79.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        224.0    224.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1     129072.0 129072.0      1.4  	kp1 = star.detect(img1,None)
    16         1     923396.0 923396.0     10.1  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73099.0  73099.0      0.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1    3275481.0 3275481.0     35.8  	kp2 = star.detect(img2,None)
    21         1    4702868.0 4702868.0     51.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1      36807.0  36807.0      0.4  	matches = bf.match(des1,des2)

