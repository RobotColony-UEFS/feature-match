Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.527 MiB   48.527 MiB   @profile
     8                             def FAST_orb(img):
     9   49.285 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.348 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.410 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.531 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.801 MiB    0.270 MiB   	kp1 = fast.detect(img1,None)
    16   50.367 MiB    0.566 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.949 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.977 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.023 MiB    0.047 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.445 MiB    0.422 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.822263 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18497.0  18497.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        257.0    257.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        273.0    273.0      0.0  	orb = cv2.ORB_create()
    13         1        210.0    210.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10977.0  10977.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      32508.0  32508.0      4.0  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79474.0  79474.0      9.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42883.0  42883.0      5.2  	kp2 = fast.detect(img2,None)
    21         1     163426.0 163426.0     19.9  	kp2, des2 = orb.compute(img2, kp2)
    22         1     473758.0 473758.0     57.6  	matches = bf.match(des1,des2)

