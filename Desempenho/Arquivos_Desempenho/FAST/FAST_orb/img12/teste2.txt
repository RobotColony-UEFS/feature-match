Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.941 MiB   48.941 MiB   @profile
     8                             def FAST_orb(img):
     9   49.945 MiB    1.004 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.008 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.070 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.133 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.301 MiB    0.168 MiB   	kp1 = fast.detect(img1,None)
    16   51.039 MiB    0.738 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.621 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.648 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.695 MiB    0.047 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.043 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.800604 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17533.0  17533.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        239.0    239.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        172.0    172.0      0.0  	orb = cv2.ORB_create()
    13         1        205.0    205.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12269.0  12269.0      1.5  	kp1 = fast.detect(img1,None)
    16         1      32625.0  32625.0      4.1  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      78678.0  78678.0      9.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42729.0  42729.0      5.3  	kp2 = fast.detect(img2,None)
    21         1     165487.0 165487.0     20.7  	kp2, des2 = orb.compute(img2, kp2)
    22         1     450667.0 450667.0     56.3  	matches = bf.match(des1,des2)

