Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.090 MiB   49.090 MiB   @profile
     8                             def FAST_orb(img):
     9   50.082 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.203 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.266 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.324 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.578 MiB    0.254 MiB   	kp1 = fast.detect(img1,None)
    16   51.242 MiB    0.664 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.824 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.852 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.898 MiB    0.047 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.230 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.805678 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17832.0  17832.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        358.0    358.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        177.0    177.0      0.0  	orb = cv2.ORB_create()
    13         1        212.0    212.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11171.0  11171.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      34298.0  34298.0      4.3  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      77065.0  77065.0      9.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44699.0  44699.0      5.5  	kp2 = fast.detect(img2,None)
    21         1     164571.0 164571.0     20.4  	kp2, des2 = orb.compute(img2, kp2)
    22         1     455295.0 455295.0     56.5  	matches = bf.match(des1,des2)

