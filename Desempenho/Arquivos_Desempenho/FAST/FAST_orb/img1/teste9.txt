Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.914 MiB   48.914 MiB   @profile
     8                             def FAST_orb(img):
     9   49.848 MiB    0.934 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.969 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.031 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.090 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.395 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.078 MiB    0.684 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.660 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.707 MiB    0.047 MiB   	kp2 = fast.detect(img2,None)
    21   51.773 MiB    0.066 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.184 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.933721 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17602.0  17602.0      1.9  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        480.0    480.0      0.1  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        283.0    283.0      0.0  	orb = cv2.ORB_create()
    13         1        222.0    222.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11042.0  11042.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      34336.0  34336.0      3.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      78393.0  78393.0      8.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48459.0  48459.0      5.2  	kp2 = fast.detect(img2,None)
    21         1     185269.0 185269.0     19.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     557635.0 557635.0     59.7  	matches = bf.match(des1,des2)

