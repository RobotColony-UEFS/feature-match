Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.992 MiB   48.992 MiB   @profile
     8                             def FAST_orb(img):
     9   49.996 MiB    1.004 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.059 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.121 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.184 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.352 MiB    0.168 MiB   	kp1 = fast.detect(img1,None)
    16   51.090 MiB    0.738 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.672 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.707 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   51.762 MiB    0.055 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.109 MiB    0.348 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.84035 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17017.0  17017.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        359.0    359.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1       1843.0   1843.0      0.2  	orb = cv2.ORB_create()
    13         1        263.0    263.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11126.0  11126.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      34332.0  34332.0      4.1  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79302.0  79302.0      9.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43878.0  43878.0      5.2  	kp2 = fast.detect(img2,None)
    21         1     172962.0 172962.0     20.6  	kp2, des2 = orb.compute(img2, kp2)
    22         1     479268.0 479268.0     57.0  	matches = bf.match(des1,des2)

