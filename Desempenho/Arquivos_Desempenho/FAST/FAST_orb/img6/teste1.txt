Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.062 MiB   49.062 MiB   @profile
     8                             def FAST_orb(img):
     9   49.988 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.109 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.172 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.230 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.531 MiB    0.301 MiB   	kp1 = fast.detect(img1,None)
    16   51.102 MiB    0.570 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.684 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.719 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   51.773 MiB    0.055 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.125 MiB    0.352 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.860269 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      19019.0  19019.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        249.0    249.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        171.0    171.0      0.0  	orb = cv2.ORB_create()
    13         1        208.0    208.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12765.0  12765.0      1.5  	kp1 = fast.detect(img1,None)
    16         1      33388.0  33388.0      3.9  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79534.0  79534.0      9.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43346.0  43346.0      5.0  	kp2 = fast.detect(img2,None)
    21         1     174623.0 174623.0     20.3  	kp2, des2 = orb.compute(img2, kp2)
    22         1     496966.0 496966.0     57.8  	matches = bf.match(des1,des2)

