Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.883 MiB   48.883 MiB   @profile
     8                             def FAST_orb(img):
     9   49.793 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.855 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.977 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   50.035 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.355 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   50.934 MiB    0.578 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.516 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.551 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   51.605 MiB    0.055 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.000 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.848598 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17197.0  17197.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        469.0    469.0      0.1  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        177.0    177.0      0.0  	orb = cv2.ORB_create()
    13         1        211.0    211.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11507.0  11507.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      34083.0  34083.0      4.0  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      82259.0  82259.0      9.7  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45454.0  45454.0      5.4  	kp2 = fast.detect(img2,None)
    21         1     172927.0 172927.0     20.4  	kp2, des2 = orb.compute(img2, kp2)
    22         1     484314.0 484314.0     57.1  	matches = bf.match(des1,des2)

