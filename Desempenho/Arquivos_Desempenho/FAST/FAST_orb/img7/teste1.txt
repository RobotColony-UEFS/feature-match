Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.977 MiB   48.977 MiB   @profile
     8                             def FAST_orb(img):
     9   49.949 MiB    0.973 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.070 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.133 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.191 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.449 MiB    0.258 MiB   	kp1 = fast.detect(img1,None)
    16   51.020 MiB    0.570 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.602 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.637 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   51.691 MiB    0.055 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.023 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.852007 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17409.0  17409.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        363.0    363.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        184.0    184.0      0.0  	orb = cv2.ORB_create()
    13         1        222.0    222.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10988.0  10988.0      1.3  	kp1 = fast.detect(img1,None)
    16         1      34024.0  34024.0      4.0  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79446.0  79446.0      9.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46364.0  46364.0      5.4  	kp2 = fast.detect(img2,None)
    21         1     171515.0 171515.0     20.1  	kp2, des2 = orb.compute(img2, kp2)
    22         1     491492.0 491492.0     57.7  	matches = bf.match(des1,des2)

