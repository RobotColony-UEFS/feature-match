Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.844 MiB   48.844 MiB   @profile
     8                             def FAST_orb(img):
     9   49.754 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.816 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.938 MiB    0.121 MiB   	orb = cv2.ORB_create()
    13   49.996 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.316 MiB    0.320 MiB   	kp1 = fast.detect(img1,None)
    16   50.895 MiB    0.578 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.477 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.512 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   51.566 MiB    0.055 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.961 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.828031 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17203.0  17203.0      2.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        260.0    260.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        179.0    179.0      0.0  	orb = cv2.ORB_create()
    13         1        219.0    219.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11933.0  11933.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      34398.0  34398.0      4.2  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      80898.0  80898.0      9.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      44157.0  44157.0      5.3  	kp2 = fast.detect(img2,None)
    21         1     172589.0 172589.0     20.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     466195.0 466195.0     56.3  	matches = bf.match(des1,des2)

