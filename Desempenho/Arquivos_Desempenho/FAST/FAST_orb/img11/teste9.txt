Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.461 MiB   48.461 MiB   @profile
     8                             def FAST_orb(img):
     9   49.219 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.281 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.344 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.465 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.734 MiB    0.270 MiB   	kp1 = fast.detect(img1,None)
    16   50.301 MiB    0.566 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.883 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.891 MiB    0.008 MiB   	kp2 = fast.detect(img2,None)
    21   50.926 MiB    0.035 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.391 MiB    0.465 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.657159 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      17335.0  17335.0      2.6  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        241.0    241.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        174.0    174.0      0.0  	orb = cv2.ORB_create()
    13         1        205.0    205.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11069.0  11069.0      1.7  	kp1 = fast.detect(img1,None)
    16         1      33556.0  33556.0      5.1  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      76257.0  76257.0     11.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      41152.0  41152.0      6.3  	kp2 = fast.detect(img2,None)
    21         1     147856.0 147856.0     22.5  	kp2, des2 = orb.compute(img2, kp2)
    22         1     329314.0 329314.0     50.1  	matches = bf.match(des1,des2)

