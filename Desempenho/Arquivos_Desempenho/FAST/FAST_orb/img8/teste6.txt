Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.547 MiB   48.547 MiB   @profile
     8                             def FAST_orb(img):
     9   49.242 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.305 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.367 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.488 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.762 MiB    0.273 MiB   	kp1 = fast.detect(img1,None)
    16   50.320 MiB    0.559 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.902 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.945 MiB    0.043 MiB   	kp2 = fast.detect(img2,None)
    21   51.008 MiB    0.062 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.461 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.905989 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18161.0  18161.0      2.0  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        258.0    258.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        180.0    180.0      0.0  	orb = cv2.ORB_create()
    13         1        317.0    317.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10816.0  10816.0      1.2  	kp1 = fast.detect(img1,None)
    16         1      33208.0  33208.0      3.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      81343.0  81343.0      9.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      49080.0  49080.0      5.4  	kp2 = fast.detect(img2,None)
    21         1     197211.0 197211.0     21.8  	kp2, des2 = orb.compute(img2, kp2)
    22         1     515415.0 515415.0     56.9  	matches = bf.match(des1,des2)

