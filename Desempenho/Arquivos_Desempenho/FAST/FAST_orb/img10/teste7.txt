Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.109 MiB   49.109 MiB   @profile
     8                             def FAST_orb(img):
     9   50.102 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.223 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.285 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   50.344 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.598 MiB    0.254 MiB   	kp1 = fast.detect(img1,None)
    16   51.262 MiB    0.664 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   51.844 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.871 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   51.922 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   52.254 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.772683 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      18310.0  18310.0      2.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        266.0    266.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1       1250.0   1250.0      0.2  	orb = cv2.ORB_create()
    13         1        368.0    368.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10921.0  10921.0      1.4  	kp1 = fast.detect(img1,None)
    16         1      32676.0  32676.0      4.2  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79752.0  79752.0     10.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      42260.0  42260.0      5.5  	kp2 = fast.detect(img2,None)
    21         1     184917.0 184917.0     23.9  	kp2, des2 = orb.compute(img2, kp2)
    22         1     401963.0 401963.0     52.0  	matches = bf.match(des1,des2)

