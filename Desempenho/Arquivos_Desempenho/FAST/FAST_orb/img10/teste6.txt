Filename: FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.492 MiB   48.492 MiB   @profile
     8                             def FAST_orb(img):
     9   49.250 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.312 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.375 MiB    0.062 MiB   	orb = cv2.ORB_create()
    13   49.496 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.766 MiB    0.270 MiB   	kp1 = fast.detect(img1,None)
    16   50.332 MiB    0.566 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   50.914 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   50.941 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   50.992 MiB    0.051 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22   51.457 MiB    0.465 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.769735 s
File: FAST_orb.py
Function: FAST_orb at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_orb(img):
     9         1      16794.0  16794.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        475.0    475.0      0.1  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        181.0    181.0      0.0  	orb = cv2.ORB_create()
    13         1        356.0    356.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12221.0  12221.0      1.6  	kp1 = fast.detect(img1,None)
    16         1      33073.0  33073.0      4.3  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1      79422.0  79422.0     10.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43085.0  43085.0      5.6  	kp2 = fast.detect(img2,None)
    21         1     163993.0 163993.0     21.3  	kp2, des2 = orb.compute(img2, kp2)
    22         1     420135.0 420135.0     54.6  	matches = bf.match(des1,des2)

