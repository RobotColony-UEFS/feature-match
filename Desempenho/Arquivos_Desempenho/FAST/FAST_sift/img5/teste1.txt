Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.938 MiB   48.938 MiB   @profile
     8                             def FAST_sift(img):
     9   49.887 MiB    0.949 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.949 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.066 MiB    0.117 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.129 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.359 MiB    0.230 MiB   	kp1 = fast.detect(img1,None)
    16   55.234 MiB    4.875 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.234 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.262 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   56.035 MiB    0.773 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.430 MiB    0.395 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 17.0166 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      19213.0  19213.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        249.0    249.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        204.0    204.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11087.0  11087.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3074462.0 3074462.0     18.1  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      72599.0  72599.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45253.0  45253.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8302817.0 8302817.0     48.8  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5490552.0 5490552.0     32.3  	matches = bf.match(des1,des2)

