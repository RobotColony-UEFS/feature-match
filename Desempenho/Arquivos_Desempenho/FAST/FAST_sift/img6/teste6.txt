Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.121 MiB   49.121 MiB   @profile
     8                             def FAST_sift(img):
     9   50.117 MiB    0.996 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.238 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.297 MiB    0.059 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.355 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.609 MiB    0.254 MiB   	kp1 = fast.detect(img1,None)
    16   55.668 MiB    5.059 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.668 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.703 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   56.535 MiB    0.832 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.871 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 17.6561 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18355.0  18355.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        244.0    244.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        301.0    301.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        217.0    217.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11387.0  11387.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3060234.0 3060234.0     17.3  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74417.0  74417.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      46024.0  46024.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8521388.0 8521388.0     48.3  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5923514.0 5923514.0     33.5  	matches = bf.match(des1,des2)

