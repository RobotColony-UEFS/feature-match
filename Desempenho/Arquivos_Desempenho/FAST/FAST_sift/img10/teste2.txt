Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.051 MiB   49.051 MiB   @profile
     8                             def FAST_sift(img):
     9   49.988 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.109 MiB    0.121 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   50.230 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   50.289 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.598 MiB    0.309 MiB   	kp1 = fast.detect(img1,None)
    16   55.500 MiB    4.902 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   55.500 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   55.527 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   56.266 MiB    0.738 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   56.598 MiB    0.332 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 16.3435 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      18213.0  18213.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        371.0    371.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        194.0    194.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11721.0  11721.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3089535.0 3089535.0     18.9  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74357.0  74357.0      0.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      43784.0  43784.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    7867643.0 7867643.0     48.1  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5237463.0 5237463.0     32.0  	matches = bf.match(des1,des2)

