Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.613 MiB   48.613 MiB   @profile
     8                             def FAST_sift(img):
     9   49.461 MiB    0.848 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.523 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.586 MiB    0.062 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.645 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   49.980 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   54.836 MiB    4.855 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.836 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.863 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   55.602 MiB    0.738 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.891 MiB    0.289 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 21.4308 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      19172.0  19172.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        244.0    244.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        297.0    297.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        214.0    214.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11691.0  11691.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3053484.0 3053484.0     14.2  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      74249.0  74249.0      0.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      41283.0  41283.0      0.2  	kp2 = fast.detect(img2,None)
    21         1   11357447.0 11357447.0     53.0  	kp2, des2 = sift.compute(img2, kp2)
    22         1    6872716.0 6872716.0     32.1  	matches = bf.match(des1,des2)

