Filename: FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.621 MiB   48.621 MiB   @profile
     8                             def FAST_sift(img):
     9   49.461 MiB    0.840 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.523 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   49.645 MiB    0.121 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    13   49.703 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             
    15   50.039 MiB    0.336 MiB   	kp1 = fast.detect(img1,None)
    16   54.840 MiB    4.801 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   54.840 MiB    0.000 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   54.867 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   55.621 MiB    0.754 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22   55.914 MiB    0.293 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 16.5528 s
File: FAST_sift.py
Function: FAST_sift at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_sift(img):
     9         1      17103.0  17103.0      0.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        261.0    261.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1        193.0    193.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           
    15         1      11929.0  11929.0      0.1  	kp1 = fast.detect(img1,None)
    16         1    3055558.0 3055558.0     18.5  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1      73436.0  73436.0      0.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45359.0  45359.0      0.3  	kp2 = fast.detect(img2,None)
    21         1    8008038.0 8008038.0     48.4  	kp2, des2 = sift.compute(img2, kp2)
    22         1    5340690.0 5340690.0     32.3  	matches = bf.match(des1,des2)

