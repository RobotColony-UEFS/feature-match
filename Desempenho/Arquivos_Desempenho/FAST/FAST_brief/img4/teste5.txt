Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.582 MiB   48.582 MiB   @profile
     8                             def FAST_brief(img):
     9   49.418 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.480 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.582 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.703 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.043 MiB    0.340 MiB   	kp1 = fast.detect(img1,None)
    16   50.754 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.336 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.391 MiB    0.055 MiB   	kp2 = fast.detect(img2,None)
    21   51.473 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.883 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.45072 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      18221.0  18221.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        347.0    347.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        186.0    186.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        219.0    219.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12026.0  12026.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      69637.0  69637.0      4.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80718.0  80718.0      5.6  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      51919.0  51919.0      3.6  	kp2 = fast.detect(img2,None)
    21         1     336408.0 336408.0     23.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     881039.0 881039.0     60.7  	matches = bf.match(des1,des2)

