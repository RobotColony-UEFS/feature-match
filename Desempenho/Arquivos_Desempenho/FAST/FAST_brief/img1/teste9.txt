Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.566 MiB   48.566 MiB   @profile
     8                             def FAST_brief(img):
     9   49.262 MiB    0.695 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.324 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.430 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.551 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   49.828 MiB    0.277 MiB   	kp1 = fast.detect(img1,None)
    16   50.480 MiB    0.652 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.062 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.125 MiB    0.062 MiB   	kp2 = fast.detect(img2,None)
    21   51.211 MiB    0.086 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.664 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.48201 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17042.0  17042.0      1.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        243.0    243.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        267.0    267.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        204.0    204.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13468.0  13468.0      0.9  	kp1 = fast.detect(img1,None)
    16         1      69160.0  69160.0      4.7  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81508.0  81508.0      5.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      53929.0  53929.0      3.6  	kp2 = fast.detect(img2,None)
    21         1     357173.0 357173.0     24.1  	kp2, des2 = brief.compute(img2, kp2)
    22         1     889021.0 889021.0     60.0  	matches = bf.match(des1,des2)

