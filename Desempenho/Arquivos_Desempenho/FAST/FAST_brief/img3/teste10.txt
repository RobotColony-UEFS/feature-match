Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.855 MiB   48.855 MiB   @profile
     8                             def FAST_brief(img):
     9   49.801 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.863 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.969 MiB    0.105 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.031 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.266 MiB    0.234 MiB   	kp1 = fast.detect(img1,None)
    16   50.926 MiB    0.660 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.508 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.559 MiB    0.051 MiB   	kp2 = fast.detect(img2,None)
    21   51.637 MiB    0.078 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.090 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.40216 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17117.0  17117.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        262.0    262.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        271.0    271.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        317.0    317.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11829.0  11829.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      70866.0  70866.0      5.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80811.0  80811.0      5.8  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48210.0  48210.0      3.4  	kp2 = fast.detect(img2,None)
    21         1     374730.0 374730.0     26.7  	kp2, des2 = brief.compute(img2, kp2)
    22         1     797745.0 797745.0     56.9  	matches = bf.match(des1,des2)

