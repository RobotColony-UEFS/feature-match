Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.934 MiB   48.934 MiB   @profile
     8                             def FAST_brief(img):
     9   49.859 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.977 MiB    0.117 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.086 MiB    0.109 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.145 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.449 MiB    0.305 MiB   	kp1 = fast.detect(img1,None)
    16   51.172 MiB    0.723 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.754 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.793 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   51.855 MiB    0.062 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.266 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.14642 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17268.0  17268.0      1.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        241.0    241.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        277.0    277.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        208.0    208.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13068.0  13068.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      68418.0  68418.0      6.0  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      80092.0  80092.0      7.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      45016.0  45016.0      3.9  	kp2 = fast.detect(img2,None)
    21         1     272692.0 272692.0     23.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     649138.0 649138.0     56.6  	matches = bf.match(des1,des2)

