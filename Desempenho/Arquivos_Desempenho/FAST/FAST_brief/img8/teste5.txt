Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.078 MiB   49.078 MiB   @profile
     8                             def FAST_brief(img):
     9   50.070 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.180 MiB    0.109 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   50.234 MiB    0.055 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.293 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.551 MiB    0.258 MiB   	kp1 = fast.detect(img1,None)
    16   51.297 MiB    0.746 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.879 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.938 MiB    0.059 MiB   	kp2 = fast.detect(img2,None)
    21   52.027 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.418 MiB    0.391 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.44587 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      16940.0  16940.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        251.0    251.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        267.0    267.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        309.0    309.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11913.0  11913.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      69486.0  69486.0      4.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      78458.0  78458.0      5.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      55451.0  55451.0      3.8  	kp2 = fast.detect(img2,None)
    21         1     352472.0 352472.0     24.4  	kp2, des2 = brief.compute(img2, kp2)
    22         1     860326.0 860326.0     59.5  	matches = bf.match(des1,des2)

