Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.594 MiB   48.594 MiB   @profile
     8                             def FAST_brief(img):
     9   49.430 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.492 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.594 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.715 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.055 MiB    0.340 MiB   	kp1 = fast.detect(img1,None)
    16   50.766 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.348 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.406 MiB    0.059 MiB   	kp2 = fast.detect(img2,None)
    21   51.496 MiB    0.090 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.906 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.47426 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17877.0  17877.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        336.0    336.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        282.0    282.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        206.0    206.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      12270.0  12270.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      66298.0  66298.0      4.5  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      81417.0  81417.0      5.5  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      55280.0  55280.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     351512.0 351512.0     23.8  	kp2, des2 = brief.compute(img2, kp2)
    22         1     888784.0 888784.0     60.3  	matches = bf.match(des1,des2)

