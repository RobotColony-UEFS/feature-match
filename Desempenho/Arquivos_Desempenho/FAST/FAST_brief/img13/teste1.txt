Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.926 MiB   48.926 MiB   @profile
     8                             def FAST_brief(img):
     9   49.836 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.898 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.957 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   50.016 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.340 MiB    0.324 MiB   	kp1 = fast.detect(img1,None)
    16   51.094 MiB    0.754 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.676 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.719 MiB    0.043 MiB   	kp2 = fast.detect(img2,None)
    21   51.789 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.242 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.53686 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      16789.0  16789.0      1.1  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        340.0    340.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        416.0    416.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        223.0    223.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11974.0  11974.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      69986.0  69986.0      4.6  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79737.0  79737.0      5.2  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      48592.0  48592.0      3.2  	kp2 = fast.detect(img2,None)
    21         1     299616.0 299616.0     19.5  	kp2, des2 = brief.compute(img2, kp2)
    22         1    1009192.0 1009192.0     65.7  	matches = bf.match(des1,des2)

