Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.598 MiB   48.598 MiB   @profile
     8                             def FAST_brief(img):
     9   49.434 MiB    0.836 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.496 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.598 MiB    0.102 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.719 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.059 MiB    0.340 MiB   	kp1 = fast.detect(img1,None)
    16   50.770 MiB    0.711 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.352 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.395 MiB    0.043 MiB   	kp2 = fast.detect(img2,None)
    21   51.465 MiB    0.070 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   51.875 MiB    0.410 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.25268 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      17519.0  17519.0      1.4  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        340.0    340.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        289.0    289.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        211.0    211.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      13468.0  13468.0      1.1  	kp1 = fast.detect(img1,None)
    16         1      67736.0  67736.0      5.4  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79326.0  79326.0      6.3  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      51024.0  51024.0      4.1  	kp2 = fast.detect(img2,None)
    21         1     296187.0 296187.0     23.6  	kp2, des2 = brief.compute(img2, kp2)
    22         1     726577.0 726577.0     58.0  	matches = bf.match(des1,des2)

