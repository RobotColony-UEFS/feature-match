Filename: FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.883 MiB   48.883 MiB   @profile
     8                             def FAST_brief(img):
     9   49.793 MiB    0.910 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.855 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    12   49.914 MiB    0.059 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13   49.973 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   50.297 MiB    0.324 MiB   	kp1 = fast.detect(img1,None)
    16   51.051 MiB    0.754 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             
    18   51.633 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             
    20   51.684 MiB    0.051 MiB   	kp2 = fast.detect(img2,None)
    21   51.766 MiB    0.082 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22   52.219 MiB    0.453 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.47188 s
File: FAST_brief.py
Function: FAST_brief at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brief(img):
     9         1      16971.0  16971.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        340.0    340.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    12         1        291.0    291.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    13         1        213.0    213.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11982.0  11982.0      0.8  	kp1 = fast.detect(img1,None)
    16         1      69986.0  69986.0      4.8  	kp1, des1 = brief.compute(img1, kp1)
    17                                           
    18         1      79078.0  79078.0      5.4  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           
    20         1      50762.0  50762.0      3.4  	kp2 = fast.detect(img2,None)
    21         1     326923.0 326923.0     22.2  	kp2, des2 = brief.compute(img2, kp2)
    22         1     915339.0 915339.0     62.2  	matches = bf.match(des1,des2)

