Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.434 MiB   48.434 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.191 MiB    0.758 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.254 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   94.539 MiB   45.285 MiB   	brisk = cv2.BRISK_create()
    13   94.660 MiB    0.121 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   94.930 MiB    0.270 MiB   	kp1 = fast.detect(img1,None)
    16   95.414 MiB    0.484 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   95.996 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.039 MiB    0.043 MiB   	kp2 = fast.detect(img2,None)
    21   96.109 MiB    0.070 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.531 MiB    0.422 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.38504 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17938.0  17938.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        262.0    262.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6348041.0 6348041.0     75.7  	brisk = cv2.BRISK_create()
    13         1        258.0    258.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11895.0  11895.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     141967.0 141967.0      1.7  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      81289.0  81289.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      47547.0  47547.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     429860.0 429860.0      5.1  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1305987.0 1305987.0     15.6  	matches = bf.match(des1,des2)

