Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.676 MiB   48.676 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.559 MiB    0.883 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.621 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   94.914 MiB   45.293 MiB   	brisk = cv2.BRISK_create()
    13   94.973 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.254 MiB    0.281 MiB   	kp1 = fast.detect(img1,None)
    16   95.801 MiB    0.547 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.383 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.422 MiB    0.039 MiB   	kp2 = fast.detect(img2,None)
    21   96.484 MiB    0.062 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   96.844 MiB    0.359 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.28145 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17773.0  17773.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        342.0    342.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6355362.0 6355362.0     76.7  	brisk = cv2.BRISK_create()
    13         1        249.0    249.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11209.0  11209.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     141193.0 141193.0      1.7  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      79832.0  79832.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      45151.0  45151.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     395846.0 395846.0      4.8  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1234489.0 1234489.0     14.9  	matches = bf.match(des1,des2)

