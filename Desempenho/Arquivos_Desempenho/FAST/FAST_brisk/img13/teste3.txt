Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   48.863 MiB   48.863 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.809 MiB    0.945 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   49.871 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.172 MiB   45.301 MiB   	brisk = cv2.BRISK_create()
    13   95.234 MiB    0.062 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.465 MiB    0.230 MiB   	kp1 = fast.detect(img1,None)
    16   95.945 MiB    0.480 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.527 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.559 MiB    0.031 MiB   	kp2 = fast.detect(img2,None)
    21   96.621 MiB    0.062 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.023 MiB    0.402 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.12806 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17226.0  17226.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        339.0    339.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6323885.0 6323885.0     77.8  	brisk = cv2.BRISK_create()
    13         1        341.0    341.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11086.0  11086.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     144639.0 144639.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      78792.0  78792.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      44957.0  44957.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     375472.0 375472.0      4.6  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1131326.0 1131326.0     13.9  	matches = bf.match(des1,des2)

