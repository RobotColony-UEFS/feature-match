Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.125 MiB   49.125 MiB   @profile
     8                             def FAST_brisk(img):
     9   50.117 MiB    0.992 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.227 MiB    0.109 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.469 MiB   45.242 MiB   	brisk = cv2.BRISK_create()
    13   95.527 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.781 MiB    0.254 MiB   	kp1 = fast.detect(img1,None)
    16   96.473 MiB    0.691 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   97.055 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   97.090 MiB    0.035 MiB   	kp2 = fast.detect(img2,None)
    21   97.148 MiB    0.059 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.484 MiB    0.336 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.20141 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      18094.0  18094.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        333.0    333.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6334831.0 6334831.0     77.2  	brisk = cv2.BRISK_create()
    13         1        253.0    253.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10998.0  10998.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     143860.0 143860.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      77759.0  77759.0      0.9  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      45257.0  45257.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     378510.0 378510.0      4.6  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1191516.0 1191516.0     14.5  	matches = bf.match(des1,des2)

