Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.148 MiB   49.148 MiB   @profile
     8                             def FAST_brisk(img):
     9   50.086 MiB    0.938 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.148 MiB    0.062 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.395 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.453 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.754 MiB    0.301 MiB   	kp1 = fast.detect(img1,None)
    16   96.297 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.879 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.906 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.961 MiB    0.055 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.316 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.0248 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      17121.0  17121.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        358.0    358.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6340412.0 6340412.0     79.0  	brisk = cv2.BRISK_create()
    13         1        343.0    343.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      11887.0  11887.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     144129.0 144129.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      77127.0  77127.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      44043.0  44043.0      0.5  	kp2 = fast.detect(img2,None)
    21         1     349182.0 349182.0      4.4  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1040202.0 1040202.0     13.0  	matches = bf.match(des1,des2)

