Filename: FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   49.000 MiB   49.000 MiB   @profile
     8                             def FAST_brisk(img):
     9   49.926 MiB    0.926 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   50.043 MiB    0.117 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   95.289 MiB   45.246 MiB   	brisk = cv2.BRISK_create()
    13   95.348 MiB    0.059 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   95.648 MiB    0.301 MiB   	kp1 = fast.detect(img1,None)
    16   96.191 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18   96.773 MiB    0.582 MiB   	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                             	
    20   96.801 MiB    0.027 MiB   	kp2 = fast.detect(img2,None)
    21   96.855 MiB    0.055 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    22   97.211 MiB    0.355 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 8.06824 s
File: FAST_brisk.py
Function: FAST_brisk at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           @profile
     8                                           def FAST_brisk(img):
     9         1      18253.0  18253.0      0.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1        329.0    329.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1    6340462.0 6340462.0     78.6  	brisk = cv2.BRISK_create()
    13         1        346.0    346.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      10904.0  10904.0      0.1  	kp1 = fast.detect(img1,None)
    16         1     142164.0 142164.0      1.8  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1      78823.0  78823.0      1.0  	img2 = cv2.imread("../imgTeste/img"+str(img)+".jpg", 0)
    19                                           	
    20         1      44953.0  44953.0      0.6  	kp2 = fast.detect(img2,None)
    21         1     349485.0 349485.0      4.3  	kp2, des2 = brisk.compute(img2, kp2)
    22         1    1082524.0 1082524.0     13.4  	matches = bf.match(des1,des2)

