Filename: STAR/STAR_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.090 MiB   58.090 MiB   @profile
     7                             def STAR_brief():
     8   59.586 MiB    1.496 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   59.586 MiB    0.000 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    11   59.586 MiB    0.000 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    12                             
    13   59.586 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   61.152 MiB    1.566 MiB   	kp1 = star.detect(img1,None)
    16   62.844 MiB    1.691 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17                             	
    18   72.188 MiB    9.344 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                             	
    20   72.188 MiB    0.000 MiB   	kp2 = star.detect(img2,None)
    21   72.301 MiB    0.113 MiB   	kp2, des2 = brief.compute(img2, kp2)
    22                             
    23   72.301 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_brief.py.lprof
Timer unit: 1e-06 s

Total time: 5.48631 s
File: STAR/STAR_brief.py
Function: STAR_brief at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def STAR_brief():
     8         1      25435.0  25435.0      0.5  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1         16.0     16.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    11         1          3.0      3.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    12                                           
    13         1         14.0     14.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1      46552.0  46552.0      0.8  	kp1 = star.detect(img1,None)
    16         1       5837.0   5837.0      0.1  	kp1, des1 = brief.compute(img1, kp1)
    17                                           	
    18         1     256082.0 256082.0      4.7  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                                           	
    20         1    5058300.0 5058300.0     92.2  	kp2 = star.detect(img2,None)
    21         1      69092.0  69092.0      1.3  	kp2, des2 = brief.compute(img2, kp2)
    22                                           
    23         1      24982.0  24982.0      0.5  	matches = bf.match(des1,des2)

