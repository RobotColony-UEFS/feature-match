Filename: STAR/STAR_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.395 MiB   58.395 MiB   @profile
     7                             def STAR_sift():
     8   59.910 MiB    1.516 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   59.910 MiB    0.000 MiB   	star = cv2.xfeatures2d.StarDetector_create()
    11   59.910 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    12                             
    13   59.910 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                             		
    15   61.617 MiB    1.707 MiB   	kp1 = star.detect(img1,None)
    16   64.141 MiB    2.523 MiB   	kp1, des1 = sift.compute(img1, kp1)
    17                             
    18   73.422 MiB    9.281 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                             	
    20   73.422 MiB    0.000 MiB   	kp2 = star.detect(img2,None)
    21   80.992 MiB    7.570 MiB   	kp2, des2 = sift.compute(img2, kp2)
    22                             
    23   80.992 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to STAR_sift.py.lprof
Timer unit: 1e-06 s

Total time: 8.32109 s
File: STAR/STAR_sift.py
Function: STAR_sift at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def STAR_sift():
     8         1      26275.0  26275.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1         28.0     28.0      0.0  	star = cv2.xfeatures2d.StarDetector_create()
    11         1          6.0      6.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    12                                           
    13         1         25.0     25.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    14                                           		
    15         1      35942.0  35942.0      0.4  	kp1 = star.detect(img1,None)
    16         1     458419.0 458419.0      5.5  	kp1, des1 = sift.compute(img1, kp1)
    17                                           
    18         1     211938.0 211938.0      2.5  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                                           	
    20         1    4717943.0 4717943.0     56.7  	kp2 = star.detect(img2,None)
    21         1    2781462.0 2781462.0     33.4  	kp2, des2 = sift.compute(img2, kp2)
    22                                           
    23         1      89054.0  89054.0      1.1  	matches = bf.match(des1,des2)

