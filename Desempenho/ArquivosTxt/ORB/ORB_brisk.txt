Filename: ORB/ORB_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.973 MiB   58.973 MiB   @profile
     7                             def ORB_brisk():
     8   60.438 MiB    1.465 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   60.438 MiB    0.000 MiB   	orb = cv2.ORB_create()
    11  105.789 MiB   45.352 MiB   	brisk = cv2.BRISK_create()
    12  105.789 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    13                             
    14  106.301 MiB    0.512 MiB   	kp1 = orb.detect(img1, None)
    15  108.258 MiB    1.957 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    16                             
    17  117.953 MiB    9.695 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                             	
    19  117.484 MiB   -0.469 MiB   	kp2 = orb.detect(img2, None)
    20  117.484 MiB    0.000 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    21                             
    22  117.484 MiB    0.000 MiB   	matches = bf.match(des1, des2)


Wrote profile results to ORB_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 1.05772 s
File: ORB/ORB_brisk.py
Function: ORB_brisk at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def ORB_brisk():
     8         1      28863.0  28863.0      2.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1         24.0     24.0      0.0  	orb = cv2.ORB_create()
    11         1     552992.0 552992.0     52.3  	brisk = cv2.BRISK_create()
    12         1         21.0     21.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    13                                           
    14         1      16952.0  16952.0      1.6  	kp1 = orb.detect(img1, None)
    15         1      15382.0  15382.0      1.5  	kp1, des1 = brisk.compute(img1, kp1)
    16                                           
    17         1     212010.0 212010.0     20.0  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                                           	
    19         1     172225.0 172225.0     16.3  	kp2 = orb.detect(img2, None)
    20         1      52027.0  52027.0      4.9  	kp2, des2 = brisk.compute(img2, kp2)
    21                                           
    22         1       7227.0   7227.0      0.7  	matches = bf.match(des1, des2)

