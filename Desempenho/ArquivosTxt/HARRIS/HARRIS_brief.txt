Filename: HARRIS/HARRIS_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     5   58.258 MiB   58.258 MiB   @profile
     6                             def HARRIS_brief():
     7   59.855 MiB    1.598 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     8   59.855 MiB    0.000 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
     9                             
    10   61.977 MiB    2.121 MiB   	imagem1 = np.float32(img1)
    11   65.398 MiB    3.422 MiB   	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    12   66.098 MiB    0.699 MiB   	dst1 = cv2.dilate(dst1,None)
    13   67.641 MiB    1.543 MiB   	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    14   67.641 MiB    0.000 MiB   	dst1 = np.uint8(dst1)
    15   67.641 MiB    0.000 MiB   	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    16   67.641 MiB    0.000 MiB   	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    17   67.641 MiB    0.000 MiB   	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    18   67.641 MiB    0.000 MiB   	matriz1=[]
    19   68.305 MiB    0.000 MiB   	for variavel in corners1:
    20   68.305 MiB    0.000 MiB   		array=np.array([variavel])
    21   68.305 MiB    0.664 MiB   		matriz1.append(array)
    22   68.305 MiB    0.000 MiB   	kp1=cv2.KeyPoint_convert(matriz1)
    23   68.305 MiB    0.000 MiB   	kp1, des1 = brief.compute(img1, kp1)
    24                             
    25                             
    26   68.305 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                             
    28   77.855 MiB    9.551 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)	
    29  114.719 MiB   36.863 MiB   	imagem2 = np.float32(img2)
    30  152.004 MiB   37.285 MiB   	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31  152.004 MiB    0.000 MiB   	dst2 = cv2.dilate(dst2,None)
    32  151.523 MiB   -0.480 MiB   	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33  123.719 MiB  -27.805 MiB   	dst2 = np.uint8(dst2)
    34  160.793 MiB   37.074 MiB   	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35  160.793 MiB    0.000 MiB   	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36  160.793 MiB    0.000 MiB   	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37  160.793 MiB    0.000 MiB   	matriz2=[]
    38  160.793 MiB    0.000 MiB   	for variavel in corners2:
    39  160.793 MiB    0.000 MiB   		array=np.array([variavel])
    40  160.793 MiB    0.000 MiB   		matriz2.append(array)
    41  160.793 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(matriz2)
    42  160.965 MiB    0.172 MiB   	kp2, des2 = brief.compute(img2, kp2)
    43                             
    44  160.965 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to HARRIS_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.09825 s
File: HARRIS/HARRIS_brief.py
Function: HARRIS_brief at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def HARRIS_brief():
     7         1      30259.0  30259.0      2.8  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     8         1         10.0     10.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
     9                                           
    10         1       1209.0   1209.0      0.1  	imagem1 = np.float32(img1)
    11         1      24295.0  24295.0      2.2  	dst1 = cv2.cornerHarris(imagem1,2,3,0.04)
    12         1       3928.0   3928.0      0.4  	dst1 = cv2.dilate(dst1,None)
    13         1       2654.0   2654.0      0.2  	ret1, dst1 = cv2.threshold(dst1,0.01*dst1.max(),255,0)
    14         1        596.0    596.0      0.1  	dst1 = np.uint8(dst1)
    15         1       9998.0   9998.0      0.9  	ret1, labels1, stats1, centroids1 = cv2.connectedComponentsWithStats(dst1)
    16         1         10.0     10.0      0.0  	criteria1 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    17         1      11452.0  11452.0      1.0  	corners1 = cv2.cornerSubPix(imagem1,np.float32(centroids1),(5,5),(-1,-1),criteria1)
    18         1          6.0      6.0      0.0  	matriz1=[]
    19       234        487.0      2.1      0.0  	for variavel in corners1:
    20       233       1006.0      4.3      0.1  		array=np.array([variavel])
    21       233        416.0      1.8      0.0  		matriz1.append(array)
    22         1        225.0    225.0      0.0  	kp1=cv2.KeyPoint_convert(matriz1)
    23         1       3173.0   3173.0      0.3  	kp1, des1 = brief.compute(img1, kp1)
    24                                           
    25                                           
    26         1         21.0     21.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    27                                           
    28         1     196171.0 196171.0     17.9  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)	
    29         1      26054.0  26054.0      2.4  	imagem2 = np.float32(img2)
    30         1     400758.0 400758.0     36.5  	dst2 = cv2.cornerHarris(imagem2,2,3,0.04)
    31         1      39057.0  39057.0      3.6  	dst2 = cv2.dilate(dst2,None)
    32         1      26763.0  26763.0      2.4  	ret2, dst2 = cv2.threshold(dst2,0.01*dst2.max(),255,0)
    33         1      22259.0  22259.0      2.0  	dst2 = np.uint8(dst2)
    34         1     168905.0 168905.0     15.4  	ret2, labels2, stats2, centroids2 = cv2.connectedComponentsWithStats(dst2)
    35         1         10.0     10.0      0.0  	criteria2 = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 100, 0.001)
    36         1      60829.0  60829.0      5.5  	corners2 = cv2.cornerSubPix(imagem2,np.float32(centroids2),(5,5),(-1,-1),criteria2)
    37         1          4.0      4.0      0.0  	matriz2=[]
    38      1418       2555.0      1.8      0.2  	for variavel in corners2:
    39      1417       4711.0      3.3      0.4  		array=np.array([variavel])
    40      1417       2511.0      1.8      0.2  		matriz2.append(array)
    41         1        812.0    812.0      0.1  	kp2 = cv2.KeyPoint_convert(matriz2)
    42         1      51063.0  51063.0      4.6  	kp2, des2 = brief.compute(img2, kp2)
    43                                           
    44         1       6041.0   6041.0      0.6  	matches = bf.match(des1,des2)

