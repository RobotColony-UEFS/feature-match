Filename: FAST/FAST_brisk.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.383 MiB   58.383 MiB   @profile
     7                             def FAST_brisk():
     8                             
     9   59.902 MiB    1.520 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   59.902 MiB    0.000 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12  105.426 MiB   45.523 MiB   	brisk = cv2.BRISK_create()
    13  105.426 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15  105.879 MiB    0.453 MiB   	kp1 = fast.detect(img1,None)
    16  106.422 MiB    0.543 MiB   	kp1, des1 = brisk.compute(img1, kp1)
    17                             
    18  115.719 MiB    9.297 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19  117.777 MiB    2.059 MiB   	kp2 = fast.detect(img2,None)
    20  118.953 MiB    1.176 MiB   	kp2, des2 = brisk.compute(img2, kp2)
    21                             
    22  118.953 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brisk.py.lprof
Timer unit: 1e-06 s

Total time: 1.95075 s
File: FAST/FAST_brisk.py
Function: FAST_brisk at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def FAST_brisk():
     8                                           
     9         1      24476.0  24476.0      1.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1         31.0     31.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1     526967.0 526967.0     27.0  	brisk = cv2.BRISK_create()
    13         1         24.0     24.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1       1360.0   1360.0      0.1  	kp1 = fast.detect(img1,None)
    16         1      16595.0  16595.0      0.9  	kp1, des1 = brisk.compute(img1, kp1)
    17                                           
    18         1     196898.0 196898.0     10.1  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19         1      23694.0  23694.0      1.2  	kp2 = fast.detect(img2,None)
    20         1     493403.0 493403.0     25.3  	kp2, des2 = brisk.compute(img2, kp2)
    21                                           
    22         1     667306.0 667306.0     34.2  	matches = bf.match(des1,des2)

