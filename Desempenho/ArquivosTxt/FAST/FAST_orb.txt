Filename: FAST/FAST_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.426 MiB   58.426 MiB   @profile
     7                             def FAST_orb():
     8                             
     9   59.941 MiB    1.516 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                             
    11   59.941 MiB    0.000 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    12   59.941 MiB    0.000 MiB   	orb = cv2.ORB_create()
    13   59.941 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                             
    15   60.605 MiB    0.664 MiB   	kp1 = fast.detect(img1,None)
    16   61.461 MiB    0.855 MiB   	kp1, des1 = orb.compute(img1, kp1)
    17                             
    18   71.422 MiB    9.961 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                             
    20   72.965 MiB    1.543 MiB   	kp2 = fast.detect(img2,None)
    21   73.355 MiB    0.391 MiB   	kp2, des2 = orb.compute(img2, kp2)
    22                             
    23   73.355 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.725216 s
File: FAST/FAST_orb.py
Function: FAST_orb at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def FAST_orb():
     8                                           
     9         1      23152.0  23152.0      3.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
    10                                           
    11         1         18.0     18.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    12         1          8.0      8.0      0.0  	orb = cv2.ORB_create()
    13         1         10.0     10.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    14                                           
    15         1       1325.0   1325.0      0.2  	kp1 = fast.detect(img1,None)
    16         1       4888.0   4888.0      0.7  	kp1, des1 = orb.compute(img1, kp1)
    17                                           
    18         1     194590.0 194590.0     26.8  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    19                                           
    20         1      26579.0  26579.0      3.7  	kp2 = fast.detect(img2,None)
    21         1     135024.0 135024.0     18.6  	kp2, des2 = orb.compute(img2, kp2)
    22                                           
    23         1     339622.0 339622.0     46.8  	matches = bf.match(des1,des2)

