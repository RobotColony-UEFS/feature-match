Filename: FAST/FAST_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.746 MiB   58.746 MiB   @profile
     7                             def FAST_brief():
     8   60.398 MiB    1.652 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   60.398 MiB    0.000 MiB   	fast = cv2.FastFeatureDetector_create(threshold=20)
    11   60.398 MiB    0.000 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    12   60.398 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    13                             
    14   60.969 MiB    0.570 MiB   	kp1 = fast.detect(img1,None)
    15   61.582 MiB    0.613 MiB   	kp1, des1 = brief.compute(img1, kp1)
    16                             
    17   70.891 MiB    9.309 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                             	
    19   73.723 MiB    2.832 MiB   	kp2 = fast.detect(img2,None)
    20   74.676 MiB    0.953 MiB   	kp2, des2 = brief.compute(img2, kp2)
    21   74.676 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.08646 s
File: FAST/FAST_brief.py
Function: FAST_brief at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def FAST_brief():
     8         1      23775.0  23775.0      2.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1         18.0     18.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=20)
    11         1          4.0      4.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    12         1          9.0      9.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    13                                           
    14         1       1545.0   1545.0      0.1  	kp1 = fast.detect(img1,None)
    15         1       6826.0   6826.0      0.6  	kp1, des1 = brief.compute(img1, kp1)
    16                                           
    17         1     188933.0 188933.0     17.4  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                                           	
    19         1      29555.0  29555.0      2.7  	kp2 = fast.detect(img2,None)
    20         1     266867.0 266867.0     24.6  	kp2, des2 = brief.compute(img2, kp2)
    21         1     568928.0 568928.0     52.4  	matches = bf.match(des1,des2)

