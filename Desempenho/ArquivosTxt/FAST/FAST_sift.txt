Filename: FAST/FAST_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.574 MiB   58.574 MiB   @profile
     7                             def FAST_sift():
     8   59.961 MiB    1.387 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   59.961 MiB    0.000 MiB   	fast = cv2.FastFeatureDetector_create(threshold=25)
    11   59.961 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    12   59.961 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    13                             
    14   60.664 MiB    0.703 MiB   	kp1 = fast.detect(img1,None)
    15   62.438 MiB    1.773 MiB   	kp1, des1 = sift.compute(img1, kp1)
    16                             
    17   71.777 MiB    9.340 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                             
    19   73.578 MiB    1.801 MiB   	kp2 = fast.detect(img2,None)
    20   93.855 MiB   20.277 MiB   	kp2, des2 = sift.compute(img2, kp2)
    21                             
    22   93.855 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to FAST_sift.py.lprof
Timer unit: 1e-06 s

Total time: 7.63021 s
File: FAST/FAST_sift.py
Function: FAST_sift at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def FAST_sift():
     8         1      21869.0  21869.0      0.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1         19.0     19.0      0.0  	fast = cv2.FastFeatureDetector_create(threshold=25)
    11         1         13.0     13.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    12         1          9.0      9.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    13                                           
    14         1       1328.0   1328.0      0.0  	kp1 = fast.detect(img1,None)
    15         1     193421.0 193421.0      2.5  	kp1, des1 = sift.compute(img1, kp1)
    16                                           
    17         1     191567.0 191567.0      2.5  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                                           
    19         1      34601.0  34601.0      0.5  	kp2 = fast.detect(img2,None)
    20         1    5710509.0 5710509.0     74.8  	kp2, des2 = sift.compute(img2, kp2)
    21                                           
    22         1    1476871.0 1476871.0     19.4  	matches = bf.match(des1,des2)

