Filename: SHITOMASI/SHITOMASI_brief.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.793 MiB   58.793 MiB   @profile
     7                             def SHITOMASI_brief():
     8   60.457 MiB    1.664 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   64.875 MiB    4.418 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   64.875 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   64.875 MiB    0.000 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   64.875 MiB    0.000 MiB   	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15   64.875 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16   64.875 MiB    0.000 MiB   	kp1, des1 = brief.compute(img1, kp1)
    17   74.344 MiB    9.469 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                             	
    19   74.621 MiB    0.277 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20   74.621 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    21   74.621 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    22   74.629 MiB    0.008 MiB   	kp2, des2 = brief.compute(img2, kp2)
    23                             
    24   74.629 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_brief.py.lprof
Timer unit: 1e-06 s

Total time: 1.06817 s
File: SHITOMASI/SHITOMASI_brief.py
Function: SHITOMASI_brief at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def SHITOMASI_brief():
     8         1      35643.0  35643.0      3.3  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1      45852.0  45852.0      4.3  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1         26.0     26.0      0.0  	corners1 = np.int0(corners11)
    12         1        537.0    537.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1         10.0     10.0      0.0  	brief = cv2.xfeatures2d.BriefDescriptorExtractor_create()
    15         1         24.0     24.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    16         1       3079.0   3079.0      0.3  	kp1, des1 = brief.compute(img1, kp1)
    17         1     246642.0 246642.0     23.1  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    18                                           	
    19         1     684305.0 684305.0     64.1  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    20         1         41.0     41.0      0.0  	corners2 = np.int0(corners22)
    21         1        464.0    464.0      0.0  	kp2 = cv2.KeyPoint_convert(corners2)
    22         1      50517.0  50517.0      4.7  	kp2, des2 = brief.compute(img2, kp2)
    23                                           
    24         1       1026.0   1026.0      0.1  	matches = bf.match(des1,des2)

