Filename: SHITOMASI/SHITOMASI_orb.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.320 MiB   58.320 MiB   @profile
     7                             def SHITOMASI_orb():
     8   59.859 MiB    1.539 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   64.270 MiB    4.410 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   64.270 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   64.270 MiB    0.000 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   64.270 MiB    0.000 MiB   	orb = cv2.ORB_create()
    15                             
    16   64.270 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    17   64.270 MiB    0.000 MiB   	kp1, des1 = orb.compute(img1, kp1)
    18                             
    19   73.859 MiB    9.590 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    20                             	
    21   74.145 MiB    0.285 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    22   74.145 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    23   74.145 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    24   74.152 MiB    0.008 MiB   	kp2, des2 = orb.compute(img2, kp2)
    25                             
    26   74.152 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_orb.py.lprof
Timer unit: 1e-06 s

Total time: 0.925849 s
File: SHITOMASI/SHITOMASI_orb.py
Function: SHITOMASI_orb at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def SHITOMASI_orb():
     8         1      34249.0  34249.0      3.7  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1      40358.0  40358.0      4.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1         30.0     30.0      0.0  	corners1 = np.int0(corners11)
    12         1        474.0    474.0      0.1  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1         17.0     17.0      0.0  	orb = cv2.ORB_create()
    15                                           
    16         1         18.0     18.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    17         1       4566.0   4566.0      0.5  	kp1, des1 = orb.compute(img1, kp1)
    18                                           
    19         1     206362.0 206362.0     22.3  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    20                                           	
    21         1     583091.0 583091.0     63.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    22         1         38.0     38.0      0.0  	corners2 = np.int0(corners22)
    23         1        250.0    250.0      0.0  	kp2 = cv2.KeyPoint_convert(corners2)
    24         1      56026.0  56026.0      6.1  	kp2, des2 = orb.compute(img2, kp2)
    25                                           
    26         1        370.0    370.0      0.0  	matches = bf.match(des1,des2)

