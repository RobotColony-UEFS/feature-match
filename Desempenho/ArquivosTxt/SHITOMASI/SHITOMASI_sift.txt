Filename: SHITOMASI/SHITOMASI_sift.py

Line #    Mem usage    Increment   Line Contents
================================================
     6   58.188 MiB   58.188 MiB   @profile
     7                             def SHITOMASI_sift():
     8   59.699 MiB    1.512 MiB   	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                             
    10   64.234 MiB    4.535 MiB   	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11   64.234 MiB    0.000 MiB   	corners1 = np.int0(corners11)
    12   64.234 MiB    0.000 MiB   	kp1 = cv2.KeyPoint_convert(corners1)
    13                             
    14   64.234 MiB    0.000 MiB   	sift = cv2.xfeatures2d.SIFT_create()
    15                             
    16   64.234 MiB    0.000 MiB   	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    17   65.156 MiB    0.922 MiB   	kp1, des1 = sift.compute(img1, kp1)
    18                             	
    19   74.488 MiB    9.332 MiB   	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    20                             	
    21   74.898 MiB    0.410 MiB   	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    22   74.898 MiB    0.000 MiB   	corners2 = np.int0(corners22)
    23   74.898 MiB    0.000 MiB   	kp2 = cv2.KeyPoint_convert(corners2)
    24   81.695 MiB    6.797 MiB   	kp2, des2 = sift.compute(img2, kp2)
    25                             
    26   81.695 MiB    0.000 MiB   	matches = bf.match(des1,des2)


Wrote profile results to SHITOMASI_sift.py.lprof
Timer unit: 1e-06 s

Total time: 2.58831 s
File: SHITOMASI/SHITOMASI_sift.py
Function: SHITOMASI_sift at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def SHITOMASI_sift():
     8         1      30451.0  30451.0      1.2  	img1 = cv2.imread("../imgReferencia/img00.jpg", 0)
     9                                           
    10         1      37205.0  37205.0      1.4  	corners11 = cv2.goodFeaturesToTrack(img1, 100, 0.01, 10)
    11         1         30.0     30.0      0.0  	corners1 = np.int0(corners11)
    12         1        422.0    422.0      0.0  	kp1 = cv2.KeyPoint_convert(corners1)
    13                                           
    14         1         21.0     21.0      0.0  	sift = cv2.xfeatures2d.SIFT_create()
    15                                           
    16         1         19.0     19.0      0.0  	bf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)
    17         1      62357.0  62357.0      2.4  	kp1, des1 = sift.compute(img1, kp1)
    18                                           	
    19         1     245043.0 245043.0      9.5  	img2 = cv2.imread("../imgTeste/img1.jpg", 0)
    20                                           	
    21         1     775459.0 775459.0     30.0  	corners22 = cv2.goodFeaturesToTrack(img2, 100, 0.01, 10)
    22         1         84.0     84.0      0.0  	corners2 = np.int0(corners22)
    23         1        548.0    548.0      0.0  	kp2 = cv2.KeyPoint_convert(corners2)
    24         1    1431964.0 1431964.0     55.3  	kp2, des2 = sift.compute(img2, kp2)
    25                                           
    26         1       4710.0   4710.0      0.2  	matches = bf.match(des1,des2)

